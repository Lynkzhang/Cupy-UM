/* Generated by Cython 0.29.2 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "define_macros": [
            [
                "_GLIBCXX_USE_CXX11_ABI",
                "0"
            ],
            [
                "_FORCE_INLINES",
                "1"
            ]
        ],
        "depends": [
            "cupy/cuda/cupy_cuComplex.h",
            "cupy/cuda/cupy_cusparse.h"
        ],
        "extra_link_args": [
            "-Wl,--disable-new-dtags,-rpath,/usr/local/cuda/lib64"
        ],
        "include_dirs": [
            "cupy/cuda",
            "/usr/local/cuda/include"
        ],
        "language": "c++",
        "libraries": [
            "cublas",
            "cuda",
            "cudart",
            "cufft",
            "curand",
            "cusparse",
            "nvrtc"
        ],
        "library_dirs": [
            "/usr/local/cuda/lib64"
        ],
        "name": "cupy.cuda.cusparse",
        "sources": [
            "cupy/cuda/cusparse.pyx"
        ]
    },
    "module_name": "cupy.cuda.cusparse"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_2"
#define CYTHON_HEX_VERSION 0x001D02F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_USE_DICT_VERSIONS
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
        static PY_UINT64_T __pyx_dict_version = 0;\
        static PyObject *__pyx_dict_cached_value = NULL;\
        if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
            (VAR) = __pyx_dict_cached_value;\
        } else {\
            (VAR) = __pyx_dict_cached_value = (LOOKUP);\
            __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
        }\
    }
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0; // PyThread_create_key reports success always
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif // TSS (Thread Specific Storage) API
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__cupy__cuda__cusparse
#define __PYX_HAVE_API__cupy__cuda__cusparse
/* Early includes */
#include <stdint.h>
#include "cupy_cuComplex.h"
#include "cupy_cusparse.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "cupy/cuda/cusparse.pyx",
  "cupy/cuda/cusparse.pxd",
};
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/

/* "driver.pxd":23
 *     ctypedef int CUjitInputType 'CUjitInputType'
 * 
 * cpdef enum:             # <<<<<<<<<<<<<<
 *     CU_JIT_INPUT_CUBIN = 0
 *     CU_JIT_INPUT_PTX = 1
 */
enum  {
  __pyx_e_4cupy_4cuda_6driver_CU_JIT_INPUT_CUBIN = 0,
  __pyx_e_4cupy_4cuda_6driver_CU_JIT_INPUT_PTX = 1,
  __pyx_e_4cupy_4cuda_6driver_CU_JIT_INPUT_FATBINARY = 2,
  __pyx_e_4cupy_4cuda_6driver_CU_JIT_INPUT_OBJECT = 3,
  __pyx_e_4cupy_4cuda_6driver_CU_JIT_INPUT_LIBRARY = 4
};

/* "cupy/cuda/cusparse.pxd":20
 * 
 * 
 * cpdef enum:             # <<<<<<<<<<<<<<
 *     CUSPARSE_POINTER_MODE_HOST = 0
 *     CUSPARSE_POINTER_MODE_DEVICE = 1
 */
enum  {
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_POINTER_MODE_HOST = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_POINTER_MODE_DEVICE = 1,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_ACTION_SYMBOLIC = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_ACTION_NUMERIC = 1,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_INDEX_BASE_ZERO = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_INDEX_BASE_ONE = 1,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_GENERAL = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_SYMMETRIC = 1,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_HERMITIAN = 2,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_TRIANGULAR = 3,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_NON_TRANSPOSE = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_TRANSPOSE = 1,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_CONJUGATE_TRANSPOSE = 2,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_DIRECTION_ROW = 0,
  __pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_DIRECTION_COLUMN = 1
};

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunction.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
#define __Pyx_CyFunction_NewEx(ml, flags, qualname, self, module, globals, code)\
    __Pyx_CyFunction_New(__pyx_CyFunctionType, ml, flags, qualname, self, module, globals, code)
static PyObject *__Pyx_CyFunction_New(PyTypeObject *, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* FromPy.proto */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject*);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE cusparseIndexBase_t __Pyx_PyInt_As_cusparseIndexBase_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE cusparseMatrixType_t __Pyx_PyInt_As_cusparseMatrixType_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* FunctionExport.proto */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig);

/* FunctionImport.proto */
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cython' */

/* Module declarations from 'cupy.cuda' */

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'cupy.cuda.driver' */

/* Module declarations from 'cupy.cuda.stream' */
static size_t (*__pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr)(void); /*proto*/

/* Module declarations from 'cupy.cuda.cusparse' */
static PyObject *__pyx_v_4cupy_4cuda_8cusparse_STATUS = 0;
static size_t __pyx_f_4cupy_4cuda_8cusparse_create(int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_destroy(size_t, int __pyx_skip_dispatch); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_4cupy_4cuda_8cusparse_check_status(int, int __pyx_skip_dispatch); /*proto*/
static CYTHON_INLINE cuComplex __pyx_f_4cupy_4cuda_8cusparse_complex_to_cuda(__pyx_t_double_complex); /*proto*/
static CYTHON_INLINE cuDoubleComplex __pyx_f_4cupy_4cuda_8cusparse_double_complex_to_cuda(__pyx_t_double_complex); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_createMatDescr(int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_destroyMatDescr(size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setMatIndexBase(size_t, PyObject *, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setMatType(size_t, PyObject *, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setPointerMode(size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setStream(size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sgthr(size_t, int, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dgthr(size_t, int, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cgthr(size_t, int, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zgthr(size_t, int, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmv(size_t, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmv(size_t, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmv(size_t, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmv(size_t, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmm(size_t, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmm(size_t, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmm(size_t, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmm(size_t, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmm2(size_t, int, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmm2(size_t, int, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmm2(size_t, int, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmm2(size_t, int, int, int, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrgeamNnz(size_t, int, int, size_t, int, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrgeam(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrgeam(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrgeam(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrgeam(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrgemmNnz(size_t, int, int, int, int, int, size_t, int, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrgemm(size_t, int, int, int, int, int, size_t, int const , size_t, size_t, size_t, size_t, int const , size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrgemm(size_t, int, int, int, int, int, size_t, int const , size_t, size_t, size_t, size_t, int const , size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrgemm(size_t, int, int, int, int, int, size_t, int const , size_t, size_t, size_t, size_t, int const , size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrgemm(size_t, int, int, int, int, int, size_t, int const , size_t, size_t, size_t, size_t, int const , size_t, size_t, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcoo2csr(size_t, size_t, int, int, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsc2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsc2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsc2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsc2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsr2coo(size_t, size_t, int, int, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2csc(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2csc(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2csc(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2csc(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, size_t, int, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2dense(size_t, int, int, size_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_snnz_compress(size_t, int, size_t, size_t, size_t, size_t, float, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dnnz_compress(size_t, int, size_t, size_t, size_t, size_t, double, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cnnz_compress(size_t, int, size_t, size_t, size_t, size_t, __pyx_t_double_complex, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_znnz_compress(size_t, int, size_t, size_t, size_t, size_t, __pyx_t_double_complex, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2csr_compress(size_t, int, int, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, float, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2csr_compress(size_t, int, int, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, float, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2csr_compress(size_t, int, int, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, __pyx_t_double_complex, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2csr_compress(size_t, int, int, size_t, size_t, size_t, size_t, int, size_t, size_t, size_t, size_t, __pyx_t_double_complex, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sdense2csc(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ddense2csc(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cdense2csc(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zdense2csc(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sdense2csr(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ddense2csr(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cdense2csr(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zdense2csr(size_t, int, int, size_t, size_t, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_snnz(size_t, int, int, int, size_t, size_t, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dnnz(size_t, int, int, int, size_t, size_t, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cnnz(size_t, int, int, int, size_t, size_t, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_znnz(size_t, int, int, int, size_t, size_t, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_createIdentityPermutation(size_t, int, size_t, int __pyx_skip_dispatch); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcoosort_bufferSizeExt(size_t, int, int, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcoosortByRow(size_t, int, int, int, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcsrsort_bufferSizeExt(size_t, int, int, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrsort(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcscsort_bufferSizeExt(size_t, int, int, int, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcscsort(size_t, int, int, int, size_t, size_t, size_t, size_t, size_t, int __pyx_skip_dispatch); /*proto*/
#define __Pyx_MODULE_NAME "cupy.cuda.cusparse"
extern int __pyx_module_is_main_cupy__cuda__cusparse;
int __pyx_module_is_main_cupy__cuda__cusparse = 0;

/* Implementation of 'cupy.cuda.cusparse' */
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_super;
static const char __pyx_k_A[] = "A";
static const char __pyx_k_B[] = "B";
static const char __pyx_k_C[] = "C";
static const char __pyx_k_P[] = "P";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_m[] = "m";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_s[] = "%s";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_lda[] = "lda";
static const char __pyx_k_ldb[] = "ldb";
static const char __pyx_k_ldc[] = "ldc";
static const char __pyx_k_nnz[] = "nnz";
static const char __pyx_k_tol[] = "tol";
static const char __pyx_k_typ[] = "typ";
static const char __pyx_k_base[] = "base";
static const char __pyx_k_beta[] = "beta";
static const char __pyx_k_dirA[] = "dirA";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mode[] = "mode";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_nnzA[] = "nnzA";
static const char __pyx_k_nnzB[] = "nnzB";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_xInd[] = "xInd";
static const char __pyx_k_xVal[] = "xVal";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_descr[] = "descr";
static const char __pyx_k_inNnz[] = "inNnz";
static const char __pyx_k_inVal[] = "inVal";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_cscVal[] = "cscVal";
static const char __pyx_k_csrVal[] = "csrVal";
static const char __pyx_k_descrA[] = "descrA";
static const char __pyx_k_descrB[] = "descrB";
static const char __pyx_k_descrC[] = "descrC";
static const char __pyx_k_handle[] = "handle";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_outVal[] = "outVal";
static const char __pyx_k_rowPtr[] = "rowPtr";
static const char __pyx_k_status[] = "status";
static const char __pyx_k_stream[] = "stream";
static const char __pyx_k_transA[] = "transA";
static const char __pyx_k_transB[] = "transB";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_cooCols[] = "cooCols";
static const char __pyx_k_cooRows[] = "cooRows";
static const char __pyx_k_cscValA[] = "cscValA";
static const char __pyx_k_csrValA[] = "csrValA";
static const char __pyx_k_csrValB[] = "csrValB";
static const char __pyx_k_csrValC[] = "csrValC";
static const char __pyx_k_idxBase[] = "idxBase";
static const char __pyx_k_pBuffer[] = "pBuffer";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_inColInd[] = "inColInd";
static const char __pyx_k_inRowPtr[] = "inRowPtr";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_cooRowInd[] = "cooRowInd";
static const char __pyx_k_cscColPtr[] = "cscColPtr";
static const char __pyx_k_cscRowInd[] = "cscRowInd";
static const char __pyx_k_csrColInd[] = "csrColInd";
static const char __pyx_k_csrRowPtr[] = "csrRowPtr";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_nnzPerCol[] = "nnzPerCol";
static const char __pyx_k_nnzPerRow[] = "nnzPerRow";
static const char __pyx_k_outColInd[] = "outColInd";
static const char __pyx_k_outRowPtr[] = "outRowPtr";
static const char __pyx_k_copyValues[] = "copyValues";
static const char __pyx_k_cscColPtrA[] = "cscColPtrA";
static const char __pyx_k_cscRowIndA[] = "cscRowIndA";
static const char __pyx_k_csrColIndA[] = "csrColIndA";
static const char __pyx_k_csrColIndB[] = "csrColIndB";
static const char __pyx_k_csrColIndC[] = "csrColIndC";
static const char __pyx_k_csrRowPtrA[] = "csrRowPtrA";
static const char __pyx_k_csrRowPtrB[] = "csrRowPtrB";
static const char __pyx_k_csrRowPtrC[] = "csrRowPtrC";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_CuSparseError[] = "CuSparseError";
static const char __pyx_k_cscSortedValA[] = "cscSortedValA";
static const char __pyx_k_csrSortedValA[] = "csrSortedValA";
static const char __pyx_k_nnzPerRowColumn[] = "nnzPerRowColumn";
static const char __pyx_k_cscSortedColPtrA[] = "cscSortedColPtrA";
static const char __pyx_k_cscSortedRowIndA[] = "cscSortedRowIndA";
static const char __pyx_k_csrSortedColIndA[] = "csrSortedColIndA";
static const char __pyx_k_csrSortedRowPtrA[] = "csrSortedRowPtrA";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_cupy_cuda_cusparse[] = "cupy.cuda.cusparse";
static const char __pyx_k_nnzTotalDevHostPtr[] = "nnzTotalDevHostPtr";
static const char __pyx_k_CuSparseError___init[] = "CuSparseError.__init__";
static const char __pyx_k_cupy_cuda_cusparse_pyx[] = "cupy/cuda/cusparse.pyx";
static const char __pyx_k_CUSPARSE_STATUS_SUCCESS[] = "CUSPARSE_STATUS_SUCCESS";
static const char __pyx_k_CUSPARSE_STATUS_ZERO_PIVOT[] = "CUSPARSE_STATUS_ZERO_PIVOT";
static const char __pyx_k_CUSPARSE_STATUS_ALLOC_FAILED[] = "CUSPARSE_STATUS_ALLOC_FAILED";
static const char __pyx_k_CUSPARSE_STATUS_ARCH_MISMATCH[] = "CUSPARSE_STATUS_ARCH_MISMATCH";
static const char __pyx_k_CUSPARSE_STATUS_INVALID_VALUE[] = "CUSPARSE_STATUS_INVALID_VALUE";
static const char __pyx_k_CUSPARSE_STATUS_MAPPING_ERROR[] = "CUSPARSE_STATUS_MAPPING_ERROR";
static const char __pyx_k_CUSPARSE_STATUS_INTERNAL_ERROR[] = "CUSPARSE_STATUS_INTERNAL_ERROR";
static const char __pyx_k_CUSPARSE_STATUS_MATRIX_TYPE_NOT[] = "CUSPARSE_STATUS_MATRIX_TYPE_NOT_SUPPORTED";
static const char __pyx_k_CUSPARSE_STATUS_NOT_INITIALIZED[] = "CUSPARSE_STATUS_NOT_INITIALIZED";
static const char __pyx_k_CUSPARSE_STATUS_EXECUTION_FAILED[] = "CUSPARSE_STATUS_EXECUTION_FAILED";
static PyObject *__pyx_n_s_A;
static PyObject *__pyx_n_s_B;
static PyObject *__pyx_n_s_C;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_ALLOC_FAILED;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_ARCH_MISMATCH;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_EXECUTION_FAILED;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_INTERNAL_ERROR;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_INVALID_VALUE;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_MAPPING_ERROR;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_MATRIX_TYPE_NOT;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_NOT_INITIALIZED;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_SUCCESS;
static PyObject *__pyx_n_u_CUSPARSE_STATUS_ZERO_PIVOT;
static PyObject *__pyx_n_s_CuSparseError;
static PyObject *__pyx_n_s_CuSparseError___init;
static PyObject *__pyx_n_s_P;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_base;
static PyObject *__pyx_n_s_beta;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_cooCols;
static PyObject *__pyx_n_s_cooRowInd;
static PyObject *__pyx_n_s_cooRows;
static PyObject *__pyx_n_s_copyValues;
static PyObject *__pyx_n_s_cscColPtr;
static PyObject *__pyx_n_s_cscColPtrA;
static PyObject *__pyx_n_s_cscRowInd;
static PyObject *__pyx_n_s_cscRowIndA;
static PyObject *__pyx_n_s_cscSortedColPtrA;
static PyObject *__pyx_n_s_cscSortedRowIndA;
static PyObject *__pyx_n_s_cscSortedValA;
static PyObject *__pyx_n_s_cscVal;
static PyObject *__pyx_n_s_cscValA;
static PyObject *__pyx_n_s_csrColInd;
static PyObject *__pyx_n_s_csrColIndA;
static PyObject *__pyx_n_s_csrColIndB;
static PyObject *__pyx_n_s_csrColIndC;
static PyObject *__pyx_n_s_csrRowPtr;
static PyObject *__pyx_n_s_csrRowPtrA;
static PyObject *__pyx_n_s_csrRowPtrB;
static PyObject *__pyx_n_s_csrRowPtrC;
static PyObject *__pyx_n_s_csrSortedColIndA;
static PyObject *__pyx_n_s_csrSortedRowPtrA;
static PyObject *__pyx_n_s_csrSortedValA;
static PyObject *__pyx_n_s_csrVal;
static PyObject *__pyx_n_s_csrValA;
static PyObject *__pyx_n_s_csrValB;
static PyObject *__pyx_n_s_csrValC;
static PyObject *__pyx_n_s_cupy_cuda_cusparse;
static PyObject *__pyx_kp_s_cupy_cuda_cusparse_pyx;
static PyObject *__pyx_n_s_descr;
static PyObject *__pyx_n_s_descrA;
static PyObject *__pyx_n_s_descrB;
static PyObject *__pyx_n_s_descrC;
static PyObject *__pyx_n_s_dirA;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_handle;
static PyObject *__pyx_n_s_idxBase;
static PyObject *__pyx_n_s_inColInd;
static PyObject *__pyx_n_s_inNnz;
static PyObject *__pyx_n_s_inRowPtr;
static PyObject *__pyx_n_s_inVal;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_lda;
static PyObject *__pyx_n_s_ldb;
static PyObject *__pyx_n_s_ldc;
static PyObject *__pyx_n_s_m;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_mode;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_nnz;
static PyObject *__pyx_n_s_nnzA;
static PyObject *__pyx_n_s_nnzB;
static PyObject *__pyx_n_s_nnzPerCol;
static PyObject *__pyx_n_s_nnzPerRow;
static PyObject *__pyx_n_s_nnzPerRowColumn;
static PyObject *__pyx_n_s_nnzTotalDevHostPtr;
static PyObject *__pyx_n_s_outColInd;
static PyObject *__pyx_n_s_outRowPtr;
static PyObject *__pyx_n_s_outVal;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_pBuffer;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_rowPtr;
static PyObject *__pyx_kp_u_s;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_status;
static PyObject *__pyx_n_s_stream;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tol;
static PyObject *__pyx_n_s_transA;
static PyObject *__pyx_n_s_transB;
static PyObject *__pyx_n_s_typ;
static PyObject *__pyx_n_s_values;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_xInd;
static PyObject *__pyx_n_s_xVal;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_13CuSparseError___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, int __pyx_v_status); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_check_status(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_status); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_2create(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_4createMatDescr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_6destroy(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_8destroyMatDescr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_10setMatIndexBase(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr, PyObject *__pyx_v_base); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_12setMatType(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr, PyObject *__pyx_v_typ); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_14setPointerMode(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_mode); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_16setStream(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_stream); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_18sgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_20dgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_22cgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_24zgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_26scsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_28dcsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_30ccsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_32zcsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_34scsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_36dcsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_38ccsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_40zcsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_42scsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_44dcsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_46ccsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_48zcsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_50xcsrgeamNnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_52scsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_54dcsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_56ccsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_58zcsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_60xcsrgemmNnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_62scsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_64dcsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_66ccsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_68zcsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_70xcoo2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_cooRowInd, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_csrRowPtr, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_72scsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_74dcsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_76ccsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_78zcsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_80xcsr2coo(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_csrRowPtr, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_cooRowInd, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_82scsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_84dcsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_86ccsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_88zcsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_90scsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_92dcsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_94ccsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_96zcsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_98snnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, float __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_100dnnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, double __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_102cnnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_104znnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_106scsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_108dcsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_110ccsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_112zcsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_114sdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_116ddense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_118cdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_120zdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_122sdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_124ddense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_126cdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_128zdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_130snnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_132dnnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_134cnnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_136znnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_138createIdentityPermutation(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_n, size_t __pyx_v_p); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_140xcoosort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_142xcoosortByRow(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols, size_t __pyx_v_P, size_t __pyx_v_pBuffer); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_144xcsrsort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_146xcsrsort(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_148xcscsort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd); /* proto */
static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_150xcscsort(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer); /* proto */
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_9;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_codeobj__3;
/* Late includes */

/* "cupy/cuda/cusparse.pyx":433
 * class CuSparseError(RuntimeError):
 * 
 *     def __init__(self, int status):             # <<<<<<<<<<<<<<
 *         self.status = status
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))
 */

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_13CuSparseError_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_13CuSparseError___init__[] = "CuSparseError.__init__(self, int status)";
static PyMethodDef __pyx_mdef_4cupy_4cuda_8cusparse_13CuSparseError_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_13CuSparseError_1__init__, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_13CuSparseError___init__};
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_13CuSparseError_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_self = 0;
  int __pyx_v_status;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_status,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_self)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_status)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 433, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 433, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_status = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_status == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 433, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 433, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.CuSparseError.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_13CuSparseError___init__(__pyx_self, __pyx_v_self, __pyx_v_status);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_13CuSparseError___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, int __pyx_v_status) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cupy/cuda/cusparse.pyx":434
 * 
 *     def __init__(self, int status):
 *         self.status = status             # <<<<<<<<<<<<<<
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_status, __pyx_t_1) < 0) __PYX_ERR(0, 434, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":435
 *     def __init__(self, int status):
 *         self.status = status
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_CuSparseError); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_self);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(__pyx_v_4cupy_4cuda_8cusparse_STATUS == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 435, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_4cupy_4cuda_8cusparse_STATUS, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_s, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":433
 * class CuSparseError(RuntimeError):
 * 
 *     def __init__(self, int status):             # <<<<<<<<<<<<<<
 *         self.status = status
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cupy.cuda.cusparse.CuSparseError.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":439
 * 
 * @cython.profile(False)
 * cpdef inline check_status(int status):             # <<<<<<<<<<<<<<
 *     if status != 0:
 *         raise CuSparseError(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_1check_status(PyObject *__pyx_self, PyObject *__pyx_arg_status); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_4cupy_4cuda_8cusparse_check_status(int __pyx_v_status, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("check_status", 0);

  /* "cupy/cuda/cusparse.pyx":440
 * @cython.profile(False)
 * cpdef inline check_status(int status):
 *     if status != 0:             # <<<<<<<<<<<<<<
 *         raise CuSparseError(status)
 * 
 */
  __pyx_t_1 = ((__pyx_v_status != 0) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "cupy/cuda/cusparse.pyx":441
 * cpdef inline check_status(int status):
 *     if status != 0:
 *         raise CuSparseError(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_CuSparseError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 441, __pyx_L1_error)

    /* "cupy/cuda/cusparse.pyx":440
 * @cython.profile(False)
 * cpdef inline check_status(int status):
 *     if status != 0:             # <<<<<<<<<<<<<<
 *         raise CuSparseError(status)
 * 
 */
  }

  /* "cupy/cuda/cusparse.pyx":439
 * 
 * @cython.profile(False)
 * cpdef inline check_status(int status):             # <<<<<<<<<<<<<<
 *     if status != 0:
 *         raise CuSparseError(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cupy.cuda.cusparse.check_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_1check_status(PyObject *__pyx_self, PyObject *__pyx_arg_status); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_check_status[] = "check_status(int status)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_1check_status(PyObject *__pyx_self, PyObject *__pyx_arg_status) {
  int __pyx_v_status;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_status (wrapper)", 0);
  assert(__pyx_arg_status); {
    __pyx_v_status = __Pyx_PyInt_As_int(__pyx_arg_status); if (unlikely((__pyx_v_status == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.check_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_check_status(__pyx_self, ((int)__pyx_v_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_check_status(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_status) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("check_status", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.check_status", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":445
 * 
 * @cython.profile(False)
 * cdef inline cuComplex complex_to_cuda(complex value):             # <<<<<<<<<<<<<<
 *     cdef cuComplex value_cuda
 *     value_cuda.x = value.real
 */

static CYTHON_INLINE cuComplex __pyx_f_4cupy_4cuda_8cusparse_complex_to_cuda(__pyx_t_double_complex __pyx_v_value) {
  cuComplex __pyx_v_value_cuda;
  cuComplex __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("complex_to_cuda", 0);

  /* "cupy/cuda/cusparse.pyx":447
 * cdef inline cuComplex complex_to_cuda(complex value):
 *     cdef cuComplex value_cuda
 *     value_cuda.x = value.real             # <<<<<<<<<<<<<<
 *     value_cuda.y = value.imag
 *     return value_cuda
 */
  __pyx_t_1 = __Pyx_CREAL(__pyx_v_value);
  __pyx_v_value_cuda.x = __pyx_t_1;

  /* "cupy/cuda/cusparse.pyx":448
 *     cdef cuComplex value_cuda
 *     value_cuda.x = value.real
 *     value_cuda.y = value.imag             # <<<<<<<<<<<<<<
 *     return value_cuda
 * 
 */
  __pyx_t_1 = __Pyx_CIMAG(__pyx_v_value);
  __pyx_v_value_cuda.y = __pyx_t_1;

  /* "cupy/cuda/cusparse.pyx":449
 *     value_cuda.x = value.real
 *     value_cuda.y = value.imag
 *     return value_cuda             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_value_cuda;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":445
 * 
 * @cython.profile(False)
 * cdef inline cuComplex complex_to_cuda(complex value):             # <<<<<<<<<<<<<<
 *     cdef cuComplex value_cuda
 *     value_cuda.x = value.real
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":453
 * 
 * @cython.profile(False)
 * cdef inline cuDoubleComplex double_complex_to_cuda(double complex value):             # <<<<<<<<<<<<<<
 *     cdef cuDoubleComplex value_cuda
 *     value_cuda.x = value.real
 */

static CYTHON_INLINE cuDoubleComplex __pyx_f_4cupy_4cuda_8cusparse_double_complex_to_cuda(__pyx_t_double_complex __pyx_v_value) {
  cuDoubleComplex __pyx_v_value_cuda;
  cuDoubleComplex __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("double_complex_to_cuda", 0);

  /* "cupy/cuda/cusparse.pyx":455
 * cdef inline cuDoubleComplex double_complex_to_cuda(double complex value):
 *     cdef cuDoubleComplex value_cuda
 *     value_cuda.x = value.real             # <<<<<<<<<<<<<<
 *     value_cuda.y = value.imag
 *     return value_cuda
 */
  __pyx_t_1 = __Pyx_CREAL(__pyx_v_value);
  __pyx_v_value_cuda.x = __pyx_t_1;

  /* "cupy/cuda/cusparse.pyx":456
 *     cdef cuDoubleComplex value_cuda
 *     value_cuda.x = value.real
 *     value_cuda.y = value.imag             # <<<<<<<<<<<<<<
 *     return value_cuda
 * 
 */
  __pyx_t_1 = __Pyx_CIMAG(__pyx_v_value);
  __pyx_v_value_cuda.y = __pyx_t_1;

  /* "cupy/cuda/cusparse.pyx":457
 *     value_cuda.x = value.real
 *     value_cuda.y = value.imag
 *     return value_cuda             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_value_cuda;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":453
 * 
 * @cython.profile(False)
 * cdef inline cuDoubleComplex double_complex_to_cuda(double complex value):             # <<<<<<<<<<<<<<
 *     cdef cuDoubleComplex value_cuda
 *     value_cuda.x = value.real
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":463
 * # cuSPARSE Helper Function
 * 
 * cpdef size_t create() except? 0:             # <<<<<<<<<<<<<<
 *     cdef Handle handle
 *     status = cusparseCreate(& handle)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_3create(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_create(CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseHandle_t __pyx_v_handle;
  cusparseStatus_t __pyx_v_status;
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("create", 0);

  /* "cupy/cuda/cusparse.pyx":465
 * cpdef size_t create() except? 0:
 *     cdef Handle handle
 *     status = cusparseCreate(& handle)             # <<<<<<<<<<<<<<
 *     check_status(status)
 *     return <size_t >handle
 */
  __pyx_v_status = cusparseCreate((&__pyx_v_handle));

  /* "cupy/cuda/cusparse.pyx":466
 *     cdef Handle handle
 *     status = cusparseCreate(& handle)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return <size_t >handle
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":467
 *     status = cusparseCreate(& handle)
 *     check_status(status)
 *     return <size_t >handle             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((size_t)__pyx_v_handle);
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":463
 * # cuSPARSE Helper Function
 * 
 * cpdef size_t create() except? 0:             # <<<<<<<<<<<<<<
 *     cdef Handle handle
 *     status = cusparseCreate(& handle)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.create", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_3create(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_2create[] = "create() -> size_t";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_3create(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create (wrapper)", 0);
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_2create(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_2create(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("create", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_create(0); if (unlikely(__pyx_t_1 == ((size_t)0) && PyErr_Occurred())) __PYX_ERR(0, 463, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cupy.cuda.cusparse.create", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":470
 * 
 * 
 * cpdef size_t createMatDescr():             # <<<<<<<<<<<<<<
 *     cdef MatDescr desc
 *     status = cusparseCreateMatDescr(& desc)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_5createMatDescr(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_createMatDescr(CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseMatDescr_t __pyx_v_desc;
  cusparseStatus_t __pyx_v_status;
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("createMatDescr", 0);

  /* "cupy/cuda/cusparse.pyx":472
 * cpdef size_t createMatDescr():
 *     cdef MatDescr desc
 *     status = cusparseCreateMatDescr(& desc)             # <<<<<<<<<<<<<<
 *     check_status(status)
 *     return <size_t>desc
 */
  __pyx_v_status = cusparseCreateMatDescr((&__pyx_v_desc));

  /* "cupy/cuda/cusparse.pyx":473
 *     cdef MatDescr desc
 *     status = cusparseCreateMatDescr(& desc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return <size_t>desc
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":474
 *     status = cusparseCreateMatDescr(& desc)
 *     check_status(status)
 *     return <size_t>desc             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((size_t)__pyx_v_desc);
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":470
 * 
 * 
 * cpdef size_t createMatDescr():             # <<<<<<<<<<<<<<
 *     cdef MatDescr desc
 *     status = cusparseCreateMatDescr(& desc)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("cupy.cuda.cusparse.createMatDescr", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_5createMatDescr(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_4createMatDescr[] = "createMatDescr() -> size_t";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_5createMatDescr(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createMatDescr (wrapper)", 0);
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_4createMatDescr(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_4createMatDescr(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("createMatDescr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_f_4cupy_4cuda_8cusparse_createMatDescr(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.createMatDescr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":477
 * 
 * 
 * cpdef destroy(size_t handle):             # <<<<<<<<<<<<<<
 *     status = cusparseDestroy(<Handle >handle)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_7destroy(PyObject *__pyx_self, PyObject *__pyx_arg_handle); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_destroy(size_t __pyx_v_handle, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("destroy", 0);

  /* "cupy/cuda/cusparse.pyx":478
 * 
 * cpdef destroy(size_t handle):
 *     status = cusparseDestroy(<Handle >handle)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_v_status = cusparseDestroy(((cusparseHandle_t)__pyx_v_handle));

  /* "cupy/cuda/cusparse.pyx":479
 * cpdef destroy(size_t handle):
 *     status = cusparseDestroy(<Handle >handle)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":477
 * 
 * 
 * cpdef destroy(size_t handle):             # <<<<<<<<<<<<<<
 *     status = cusparseDestroy(<Handle >handle)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_7destroy(PyObject *__pyx_self, PyObject *__pyx_arg_handle); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_6destroy[] = "destroy(size_t handle)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_7destroy(PyObject *__pyx_self, PyObject *__pyx_arg_handle) {
  size_t __pyx_v_handle;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("destroy (wrapper)", 0);
  assert(__pyx_arg_handle); {
    __pyx_v_handle = __Pyx_PyInt_As_size_t(__pyx_arg_handle); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 477, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_6destroy(__pyx_self, ((size_t)__pyx_v_handle));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_6destroy(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("destroy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_destroy(__pyx_v_handle, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":482
 * 
 * 
 * cpdef destroyMatDescr(size_t descr):             # <<<<<<<<<<<<<<
 *     status = cusparseDestroyMatDescr(<MatDescr>descr)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_9destroyMatDescr(PyObject *__pyx_self, PyObject *__pyx_arg_descr); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_destroyMatDescr(size_t __pyx_v_descr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("destroyMatDescr", 0);

  /* "cupy/cuda/cusparse.pyx":483
 * 
 * cpdef destroyMatDescr(size_t descr):
 *     status = cusparseDestroyMatDescr(<MatDescr>descr)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_v_status = cusparseDestroyMatDescr(((cusparseMatDescr_t)__pyx_v_descr));

  /* "cupy/cuda/cusparse.pyx":484
 * cpdef destroyMatDescr(size_t descr):
 *     status = cusparseDestroyMatDescr(<MatDescr>descr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":482
 * 
 * 
 * cpdef destroyMatDescr(size_t descr):             # <<<<<<<<<<<<<<
 *     status = cusparseDestroyMatDescr(<MatDescr>descr)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroyMatDescr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_9destroyMatDescr(PyObject *__pyx_self, PyObject *__pyx_arg_descr); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_8destroyMatDescr[] = "destroyMatDescr(size_t descr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_9destroyMatDescr(PyObject *__pyx_self, PyObject *__pyx_arg_descr) {
  size_t __pyx_v_descr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("destroyMatDescr (wrapper)", 0);
  assert(__pyx_arg_descr); {
    __pyx_v_descr = __Pyx_PyInt_As_size_t(__pyx_arg_descr); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 482, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroyMatDescr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_8destroyMatDescr(__pyx_self, ((size_t)__pyx_v_descr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_8destroyMatDescr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("destroyMatDescr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_destroyMatDescr(__pyx_v_descr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.destroyMatDescr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":487
 * 
 * 
 * cpdef setMatIndexBase(size_t descr, base):             # <<<<<<<<<<<<<<
 *     status = cusparseSetMatIndexBase(<MatDescr>descr, base)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_11setMatIndexBase(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setMatIndexBase(size_t __pyx_v_descr, PyObject *__pyx_v_base, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  cusparseIndexBase_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("setMatIndexBase", 0);

  /* "cupy/cuda/cusparse.pyx":488
 * 
 * cpdef setMatIndexBase(size_t descr, base):
 *     status = cusparseSetMatIndexBase(<MatDescr>descr, base)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_cusparseIndexBase_t(__pyx_v_base); if (unlikely((__pyx_t_1 == ((cusparseIndexBase_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 488, __pyx_L1_error)
  __pyx_v_status = cusparseSetMatIndexBase(((cusparseMatDescr_t)__pyx_v_descr), __pyx_t_1);

  /* "cupy/cuda/cusparse.pyx":489
 * cpdef setMatIndexBase(size_t descr, base):
 *     status = cusparseSetMatIndexBase(<MatDescr>descr, base)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cupy/cuda/cusparse.pyx":487
 * 
 * 
 * cpdef setMatIndexBase(size_t descr, base):             # <<<<<<<<<<<<<<
 *     status = cusparseSetMatIndexBase(<MatDescr>descr, base)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatIndexBase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_11setMatIndexBase(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_10setMatIndexBase[] = "setMatIndexBase(size_t descr, base)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_11setMatIndexBase(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_descr;
  PyObject *__pyx_v_base = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setMatIndexBase (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_descr,&__pyx_n_s_base,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_base)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setMatIndexBase", 1, 2, 2, 1); __PYX_ERR(0, 487, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setMatIndexBase") < 0)) __PYX_ERR(0, 487, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 487, __pyx_L3_error)
    __pyx_v_base = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setMatIndexBase", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 487, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatIndexBase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_10setMatIndexBase(__pyx_self, __pyx_v_descr, __pyx_v_base);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_10setMatIndexBase(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr, PyObject *__pyx_v_base) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setMatIndexBase", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setMatIndexBase(__pyx_v_descr, __pyx_v_base, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatIndexBase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":492
 * 
 * 
 * cpdef setMatType(size_t descr, typ):             # <<<<<<<<<<<<<<
 *     status = cusparseSetMatType(<MatDescr>descr, typ)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_13setMatType(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setMatType(size_t __pyx_v_descr, PyObject *__pyx_v_typ, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  cusparseMatrixType_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("setMatType", 0);

  /* "cupy/cuda/cusparse.pyx":493
 * 
 * cpdef setMatType(size_t descr, typ):
 *     status = cusparseSetMatType(<MatDescr>descr, typ)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_cusparseMatrixType_t(__pyx_v_typ); if (unlikely((__pyx_t_1 == ((cusparseMatrixType_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 493, __pyx_L1_error)
  __pyx_v_status = cusparseSetMatType(((cusparseMatDescr_t)__pyx_v_descr), __pyx_t_1);

  /* "cupy/cuda/cusparse.pyx":494
 * cpdef setMatType(size_t descr, typ):
 *     status = cusparseSetMatType(<MatDescr>descr, typ)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 494, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cupy/cuda/cusparse.pyx":492
 * 
 * 
 * cpdef setMatType(size_t descr, typ):             # <<<<<<<<<<<<<<
 *     status = cusparseSetMatType(<MatDescr>descr, typ)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_13setMatType(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_12setMatType[] = "setMatType(size_t descr, typ)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_13setMatType(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_descr;
  PyObject *__pyx_v_typ = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setMatType (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_descr,&__pyx_n_s_typ,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_typ)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setMatType", 1, 2, 2, 1); __PYX_ERR(0, 492, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setMatType") < 0)) __PYX_ERR(0, 492, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 492, __pyx_L3_error)
    __pyx_v_typ = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setMatType", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 492, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_12setMatType(__pyx_self, __pyx_v_descr, __pyx_v_typ);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_12setMatType(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_descr, PyObject *__pyx_v_typ) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setMatType", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setMatType(__pyx_v_descr, __pyx_v_typ, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setMatType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":497
 * 
 * 
 * cpdef setPointerMode(size_t handle, int mode):             # <<<<<<<<<<<<<<
 *     status = cusparseSetPointerMode(<Handle>handle, <PointerMode>mode)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_15setPointerMode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setPointerMode(size_t __pyx_v_handle, int __pyx_v_mode, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setPointerMode", 0);

  /* "cupy/cuda/cusparse.pyx":498
 * 
 * cpdef setPointerMode(size_t handle, int mode):
 *     status = cusparseSetPointerMode(<Handle>handle, <PointerMode>mode)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_v_status = cusparseSetPointerMode(((cusparseHandle_t)__pyx_v_handle), ((cusparsePointerMode_t)__pyx_v_mode));

  /* "cupy/cuda/cusparse.pyx":499
 * cpdef setPointerMode(size_t handle, int mode):
 *     status = cusparseSetPointerMode(<Handle>handle, <PointerMode>mode)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * ########################################
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":497
 * 
 * 
 * cpdef setPointerMode(size_t handle, int mode):             # <<<<<<<<<<<<<<
 *     status = cusparseSetPointerMode(<Handle>handle, <PointerMode>mode)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setPointerMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_15setPointerMode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_14setPointerMode[] = "setPointerMode(size_t handle, int mode)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_15setPointerMode(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_mode;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setPointerMode (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_mode,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mode)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setPointerMode", 1, 2, 2, 1); __PYX_ERR(0, 497, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setPointerMode") < 0)) __PYX_ERR(0, 497, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 497, __pyx_L3_error)
    __pyx_v_mode = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_mode == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 497, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setPointerMode", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 497, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.setPointerMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_14setPointerMode(__pyx_self, __pyx_v_handle, __pyx_v_mode);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_14setPointerMode(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_mode) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setPointerMode", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setPointerMode(__pyx_v_handle, __pyx_v_mode, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setPointerMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":504
 * # Stream
 * 
 * cpdef setStream(size_t handle, size_t stream):             # <<<<<<<<<<<<<<
 *     status = cusparseSetStream(<Handle>handle, <driver.Stream>stream)
 *     check_status(status)
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_17setStream(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_setStream(size_t __pyx_v_handle, size_t __pyx_v_stream, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setStream", 0);

  /* "cupy/cuda/cusparse.pyx":505
 * 
 * cpdef setStream(size_t handle, size_t stream):
 *     status = cusparseSetStream(<Handle>handle, <driver.Stream>stream)             # <<<<<<<<<<<<<<
 *     check_status(status)
 * 
 */
  __pyx_v_status = cusparseSetStream(((cusparseHandle_t)__pyx_v_handle), ((struct CUstream_st*)__pyx_v_stream));

  /* "cupy/cuda/cusparse.pyx":506
 * cpdef setStream(size_t handle, size_t stream):
 *     status = cusparseSetStream(<Handle>handle, <driver.Stream>stream)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 506, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":504
 * # Stream
 * 
 * cpdef setStream(size_t handle, size_t stream):             # <<<<<<<<<<<<<<
 *     status = cusparseSetStream(<Handle>handle, <driver.Stream>stream)
 *     check_status(status)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setStream", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_17setStream(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_16setStream[] = "setStream(size_t handle, size_t stream)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_17setStream(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  size_t __pyx_v_stream;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setStream (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_stream,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_stream)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setStream", 1, 2, 2, 1); __PYX_ERR(0, 504, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setStream") < 0)) __PYX_ERR(0, 504, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
    __pyx_v_stream = __Pyx_PyInt_As_size_t(values[1]); if (unlikely((__pyx_v_stream == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setStream", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 504, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.setStream", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_16setStream(__pyx_self, __pyx_v_handle, __pyx_v_stream);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_16setStream(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_stream) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("setStream", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_v_stream, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.setStream", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":520
 * # cuSPARSE Level1 Function
 * 
 * cpdef sgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_19sgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sgthr(size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sgthr", 0);

  /* "cupy/cuda/cusparse.pyx":522
 * cpdef sgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseSgthr(
 *         <Handle>handle, nnz, <const float *>y, <float *>xVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":523
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseSgthr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, nnz, <const float *>y, <float *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseSgthr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_nnz, ((float const *)__pyx_v_y), ((float *)__pyx_v_xVal), ((int const *)__pyx_v_xInd), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":526
 *         <Handle>handle, nnz, <const float *>y, <float *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef dgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":520
 * # cuSPARSE Level1 Function
 * 
 * cpdef sgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_19sgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_18sgthr[] = "sgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_19sgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_nnz;
  size_t __pyx_v_y;
  size_t __pyx_v_xVal;
  size_t __pyx_v_xInd;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sgthr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_nnz,&__pyx_n_s_y,&__pyx_n_s_xVal,&__pyx_n_s_xInd,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, 1); __PYX_ERR(0, 520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, 2); __PYX_ERR(0, 520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, 3); __PYX_ERR(0, 520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, 4); __PYX_ERR(0, 520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, 5); __PYX_ERR(0, 520, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sgthr") < 0)) __PYX_ERR(0, 520, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
    __pyx_v_xVal = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_xVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
    __pyx_v_xInd = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_xInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 521, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sgthr", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 520, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.sgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_18sgthr(__pyx_self, __pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_18sgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sgthr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_sgthr(__pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":528
 *     check_status(status)
 * 
 * cpdef dgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_21dgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dgthr(size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dgthr", 0);

  /* "cupy/cuda/cusparse.pyx":530
 * cpdef dgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDgthr(
 *         <Handle>handle, nnz, <const double *>y, <double *>xVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":531
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDgthr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, nnz, <const double *>y, <double *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseDgthr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_nnz, ((double const *)__pyx_v_y), ((double *)__pyx_v_xVal), ((int const *)__pyx_v_xInd), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":534
 *         <Handle>handle, nnz, <const double *>y, <double *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef cgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":528
 *     check_status(status)
 * 
 * cpdef dgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_21dgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_20dgthr[] = "dgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_21dgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_nnz;
  size_t __pyx_v_y;
  size_t __pyx_v_xVal;
  size_t __pyx_v_xInd;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dgthr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_nnz,&__pyx_n_s_y,&__pyx_n_s_xVal,&__pyx_n_s_xInd,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, 1); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, 2); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, 3); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, 4); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, 5); __PYX_ERR(0, 528, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dgthr") < 0)) __PYX_ERR(0, 528, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
    __pyx_v_xVal = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_xVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
    __pyx_v_xInd = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_xInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 529, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dgthr", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 528, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_20dgthr(__pyx_self, __pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_20dgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dgthr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dgthr(__pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":536
 *     check_status(status)
 * 
 * cpdef cgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_23cgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cgthr(size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cgthr", 0);

  /* "cupy/cuda/cusparse.pyx":538
 * cpdef cgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCgthr(
 *         <Handle>handle, nnz, <const cuComplex *>y, <cuComplex *>xVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":539
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCgthr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, nnz, <const cuComplex *>y, <cuComplex *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseCgthr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_nnz, ((cuComplex const *)__pyx_v_y), ((cuComplex *)__pyx_v_xVal), ((int const *)__pyx_v_xInd), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":542
 *         <Handle>handle, nnz, <const cuComplex *>y, <cuComplex *>xVal,
 *         <const int *>xInd, <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":536
 *     check_status(status)
 * 
 * cpdef cgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_23cgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_22cgthr[] = "cgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_23cgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_nnz;
  size_t __pyx_v_y;
  size_t __pyx_v_xVal;
  size_t __pyx_v_xInd;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cgthr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_nnz,&__pyx_n_s_y,&__pyx_n_s_xVal,&__pyx_n_s_xInd,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, 1); __PYX_ERR(0, 536, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, 2); __PYX_ERR(0, 536, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, 3); __PYX_ERR(0, 536, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, 4); __PYX_ERR(0, 536, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, 5); __PYX_ERR(0, 536, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cgthr") < 0)) __PYX_ERR(0, 536, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L3_error)
    __pyx_v_xVal = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_xVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L3_error)
    __pyx_v_xInd = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_xInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 537, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cgthr", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 536, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.cgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_22cgthr(__pyx_self, __pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_22cgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cgthr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_cgthr(__pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":544
 *     check_status(status)
 * 
 * cpdef zgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_25zgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zgthr(size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zgthr", 0);

  /* "cupy/cuda/cusparse.pyx":546
 * cpdef zgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZgthr(
 *         <Handle>handle, nnz, <const cuDoubleComplex *>y,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":547
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZgthr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, nnz, <const cuDoubleComplex *>y,
 *         <cuDoubleComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseZgthr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_nnz, ((cuDoubleComplex const *)__pyx_v_y), ((cuDoubleComplex *)__pyx_v_xVal), ((int const *)__pyx_v_xInd), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":550
 *         <Handle>handle, nnz, <const cuDoubleComplex *>y,
 *         <cuDoubleComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * ########################################
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":544
 *     check_status(status)
 * 
 * cpdef zgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd,             # <<<<<<<<<<<<<<
 *             int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_25zgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_24zgthr[] = "zgthr(size_t handle, int nnz, size_t y, size_t xVal, size_t xInd, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_25zgthr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_nnz;
  size_t __pyx_v_y;
  size_t __pyx_v_xVal;
  size_t __pyx_v_xInd;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zgthr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_nnz,&__pyx_n_s_y,&__pyx_n_s_xVal,&__pyx_n_s_xInd,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, 1); __PYX_ERR(0, 544, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, 2); __PYX_ERR(0, 544, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, 3); __PYX_ERR(0, 544, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, 4); __PYX_ERR(0, 544, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, 5); __PYX_ERR(0, 544, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zgthr") < 0)) __PYX_ERR(0, 544, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L3_error)
    __pyx_v_xVal = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_xVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L3_error)
    __pyx_v_xInd = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_xInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 545, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zgthr", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 544, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_24zgthr(__pyx_self, __pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_24zgthr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_nnz, size_t __pyx_v_y, size_t __pyx_v_xVal, size_t __pyx_v_xInd, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zgthr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zgthr(__pyx_v_handle, __pyx_v_nnz, __pyx_v_y, __pyx_v_xVal, __pyx_v_xInd, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 544, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zgthr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":555
 * # cuSPARSE Level2 Function
 * 
 * cpdef scsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_27scsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmv(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmv", 0);

  /* "cupy/cuda/cusparse.pyx":560
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsrmv(
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":561
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsrmv(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 *         <const float *>alpha, <MatDescr>descrA, <const float *>csrSortedValA,
 */
  __pyx_v_status = cusparseScsrmv(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((float const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((float const *)__pyx_v_x), ((float const *)__pyx_v_beta), ((float *)__pyx_v_y));

  /* "cupy/cuda/cusparse.pyx":566
 *         <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA,
 *         <const float *>x, <const float *>beta, <float *>y)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef dcsrmv(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":555
 * # cuSPARSE Level2 Function
 * 
 * cpdef scsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_27scsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_26scsrmv[] = "scsrmv(size_t handle, int transA, int m, int n, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t x, size_t beta, size_t y)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_27scsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_x;
  size_t __pyx_v_beta;
  size_t __pyx_v_y;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsrmv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_x,&__pyx_n_s_beta,&__pyx_n_s_y,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 1); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 2); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 3); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 4); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 5); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 6); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 7); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 8); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 9); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 10); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 11); __PYX_ERR(0, 555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, 12); __PYX_ERR(0, 555, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsrmv") < 0)) __PYX_ERR(0, 555, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 558, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 558, __pyx_L3_error)
    __pyx_v_x = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_x == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsrmv", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 555, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_26scsrmv(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_26scsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsrmv(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":568
 *     check_status(status)
 * 
 * cpdef dcsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_29dcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmv(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmv", 0);

  /* "cupy/cuda/cusparse.pyx":573
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsrmv(
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":574
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsrmv(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 *         <const double *>alpha, <MatDescr>descrA, <const double *>csrSortedValA,
 */
  __pyx_v_status = cusparseDcsrmv(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((double const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((double const *)__pyx_v_x), ((double const *)__pyx_v_beta), ((double *)__pyx_v_y));

  /* "cupy/cuda/cusparse.pyx":579
 *         <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA,
 *         <const double *>x, <const double *>beta, <double *>y)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsrmv(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":568
 *     check_status(status)
 * 
 * cpdef dcsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_29dcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_28dcsrmv[] = "dcsrmv(size_t handle, int transA, int m, int n, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t x, size_t beta, size_t y)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_29dcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_x;
  size_t __pyx_v_beta;
  size_t __pyx_v_y;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsrmv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_x,&__pyx_n_s_beta,&__pyx_n_s_y,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 1); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 2); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 3); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 4); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 5); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 6); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 7); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 8); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 9); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 10); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 11); __PYX_ERR(0, 568, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, 12); __PYX_ERR(0, 568, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsrmv") < 0)) __PYX_ERR(0, 568, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 569, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 570, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 570, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 570, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L3_error)
    __pyx_v_x = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_x == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsrmv", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 568, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_28dcsrmv(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_28dcsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsrmv(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":581
 *     check_status(status)
 * 
 * cpdef ccsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_31ccsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmv(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmv", 0);

  /* "cupy/cuda/cusparse.pyx":586
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsrmv(
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":587
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsrmv(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 *         <const cuComplex *>alpha, <MatDescr>descrA,
 */
  __pyx_v_status = cusparseCcsrmv(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cuComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuComplex const *)__pyx_v_x), ((cuComplex const *)__pyx_v_beta), ((cuComplex *)__pyx_v_y));

  /* "cupy/cuda/cusparse.pyx":593
 *         <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA,
 *         <const cuComplex *>x, <const cuComplex *>beta, <cuComplex *>y)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsrmv(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":581
 *     check_status(status)
 * 
 * cpdef ccsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_31ccsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_30ccsrmv[] = "ccsrmv(size_t handle, int transA, int m, int n, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t x, size_t beta, size_t y)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_31ccsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_x;
  size_t __pyx_v_beta;
  size_t __pyx_v_y;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsrmv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_x,&__pyx_n_s_beta,&__pyx_n_s_y,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 1); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 2); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 3); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 4); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 5); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 6); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 7); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 8); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 9); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 10); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 11); __PYX_ERR(0, 581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, 12); __PYX_ERR(0, 581, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsrmv") < 0)) __PYX_ERR(0, 581, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 582, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 583, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 583, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 583, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L3_error)
    __pyx_v_x = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_x == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsrmv", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 581, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_30ccsrmv(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_30ccsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsrmv(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":595
 *     check_status(status)
 * 
 * cpdef zcsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_33zcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmv(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmv", 0);

  /* "cupy/cuda/cusparse.pyx":600
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsrmv(
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":601
 *         size_t x, size_t beta, size_t y):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsrmv(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, nnz,
 *         <const cuDoubleComplex *>alpha, <MatDescr>descrA,
 */
  __pyx_v_status = cusparseZcsrmv(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cuDoubleComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuDoubleComplex const *)__pyx_v_x), ((cuDoubleComplex const *)__pyx_v_beta), ((cuDoubleComplex *)__pyx_v_y));

  /* "cupy/cuda/cusparse.pyx":608
 *         <const cuDoubleComplex *>x, <const cuDoubleComplex *>beta,
 *         <cuDoubleComplex *>y)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * ########################################
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":595
 *     check_status(status)
 * 
 * cpdef zcsrmv(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_33zcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_32zcsrmv[] = "zcsrmv(size_t handle, int transA, int m, int n, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t x, size_t beta, size_t y)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_33zcsrmv(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_x;
  size_t __pyx_v_beta;
  size_t __pyx_v_y;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsrmv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_x,&__pyx_n_s_beta,&__pyx_n_s_y,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 1); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 2); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 3); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 4); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 5); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 6); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 7); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 8); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 9); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 10); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 11); __PYX_ERR(0, 595, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, 12); __PYX_ERR(0, 595, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsrmv") < 0)) __PYX_ERR(0, 595, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 596, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 597, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 597, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 597, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 598, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 598, __pyx_L3_error)
    __pyx_v_x = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_x == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L3_error)
    __pyx_v_y = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_y == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsrmv", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 595, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_32zcsrmv(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_32zcsrmv(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_x, size_t __pyx_v_beta, size_t __pyx_v_y) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmv", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsrmv(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_x, __pyx_v_beta, __pyx_v_y, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":613
 * # cuSPARSE Level3 Function
 * 
 * cpdef scsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_35scsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmm", 0);

  /* "cupy/cuda/cusparse.pyx":618
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsrmm(
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":619
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsrmm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 *         <const float *>alpha, <MatDescr>descrA, <const float *>csrSortedValA,
 */
  __pyx_v_status = cusparseScsrmm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((float const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((float const *)__pyx_v_B), __pyx_v_ldb, ((float const *)__pyx_v_beta), ((float *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":624
 *         <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA,
 *         <const float *>B, ldb, <const float *>beta, <float *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef dcsrmm(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":613
 * # cuSPARSE Level3 Function
 * 
 * cpdef scsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_35scsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_34scsrmm[] = "scsrmm(size_t handle, int transA, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_35scsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsrmm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 1); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 2); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 3); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 4); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 5); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 6); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 7); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 8); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 9); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 10); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 11); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 12); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 13); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 14); __PYX_ERR(0, 613, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, 15); __PYX_ERR(0, 613, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsrmm") < 0)) __PYX_ERR(0, 613, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 616, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 616, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 617, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 617, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 617, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 617, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[15]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 617, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsrmm", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 613, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_34scsrmm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_34scsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsrmm(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":626
 *     check_status(status)
 * 
 * cpdef dcsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_37dcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmm", 0);

  /* "cupy/cuda/cusparse.pyx":631
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsrmm(
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":632
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsrmm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 *         <const double *>alpha, <MatDescr>descrA, <const double *>csrSortedValA,
 */
  __pyx_v_status = cusparseDcsrmm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((double const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((double const *)__pyx_v_B), __pyx_v_ldb, ((double const *)__pyx_v_beta), ((double *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":637
 *         <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA,
 *         <const double *>B, ldb, <const double *>beta, <double *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsrmm(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":626
 *     check_status(status)
 * 
 * cpdef dcsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_37dcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_36dcsrmm[] = "dcsrmm(size_t handle, int transA, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_37dcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsrmm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 1); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 2); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 3); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 4); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 5); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 6); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 7); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 8); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 9); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 10); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 11); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 12); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 13); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 14); __PYX_ERR(0, 626, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, 15); __PYX_ERR(0, 626, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsrmm") < 0)) __PYX_ERR(0, 626, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 627, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 628, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 628, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 628, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 629, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 629, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[15]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 630, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsrmm", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 626, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_36dcsrmm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_36dcsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsrmm(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":639
 *     check_status(status)
 * 
 * cpdef ccsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_39ccsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmm", 0);

  /* "cupy/cuda/cusparse.pyx":644
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsrmm(
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":645
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsrmm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 *         <const cuComplex *>alpha, <MatDescr>descrA,
 */
  __pyx_v_status = cusparseCcsrmm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((cuComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuComplex const *)__pyx_v_B), __pyx_v_ldb, ((cuComplex const *)__pyx_v_beta), ((cuComplex *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":652
 *         <const cuComplex *>B, ldb, <const cuComplex *>beta,
 *         <cuComplex *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsrmm(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":639
 *     check_status(status)
 * 
 * cpdef ccsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_39ccsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_38ccsrmm[] = "ccsrmm(size_t handle, int transA, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_39ccsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsrmm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 1); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 2); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 3); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 4); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 5); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 6); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 7); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 8); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 9); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 10); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 11); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 12); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 13); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 14); __PYX_ERR(0, 639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, 15); __PYX_ERR(0, 639, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsrmm") < 0)) __PYX_ERR(0, 639, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 640, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 641, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 641, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 641, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[15]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 643, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsrmm", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 639, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_38ccsrmm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_38ccsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsrmm(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":654
 *     check_status(status)
 * 
 * cpdef zcsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_41zcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmm", 0);

  /* "cupy/cuda/cusparse.pyx":659
 *         size_t csrSortedRowPtrA, size_t csrSortedColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsrmm(
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":660
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsrmm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, m, n, k, nnz,
 *         <const cuDoubleComplex *>alpha, <MatDescr>descrA,
 */
  __pyx_v_status = cusparseZcsrmm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((cuDoubleComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuDoubleComplex const *)__pyx_v_B), __pyx_v_ldb, ((cuDoubleComplex const *)__pyx_v_beta), ((cuDoubleComplex *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":667
 *         <const cuDoubleComplex *>B, ldb,
 *         <const cuDoubleComplex *>beta, <cuDoubleComplex *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef scsrmm2(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":654
 *     check_status(status)
 * 
 * cpdef zcsrmm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrSortedValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_41zcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_40zcsrmm[] = "zcsrmm(size_t handle, int transA, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_41zcsrmm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsrmm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 1); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 2); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 3); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 4); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 5); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 6); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 7); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 8); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 9); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 10); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 11); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 12); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 13); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 14); __PYX_ERR(0, 654, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, 15); __PYX_ERR(0, 654, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsrmm") < 0)) __PYX_ERR(0, 654, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 655, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 656, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 656, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 656, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 657, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 658, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 658, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 658, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 658, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[15]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 658, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsrmm", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 654, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_40zcsrmm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_40zcsrmm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsrmm(__pyx_v_handle, __pyx_v_transA, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":669
 *     check_status(status)
 * 
 * cpdef scsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_43scsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrmm2(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmm2", 0);

  /* "cupy/cuda/cusparse.pyx":674
 *         size_t csrRowPtrA, size_t csrColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsrmm2(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":675
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsrmm2(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 *         <const float *>alpha, <MatDescr>descrA, <const float *>csrValA,
 */
  __pyx_v_status = cusparseScsrmm2(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((float const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((float const *)__pyx_v_B), __pyx_v_ldb, ((float const *)__pyx_v_beta), ((float *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":680
 *         <const int *>csrRowPtrA, <const int *>csrColIndA,
 *         <const float *>B, ldb, <const float *>beta, <float *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef dcsrmm2(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":669
 *     check_status(status)
 * 
 * cpdef scsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_43scsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_42scsrmm2[] = "scsrmm2(size_t handle, int transA, int transB, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_43scsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsrmm2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 1); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 2); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 3); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 4); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 5); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 6); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 7); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 8); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 9); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 10); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 11); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 12); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 13); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 14); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 15); __PYX_ERR(0, 669, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, 16); __PYX_ERR(0, 669, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsrmm2") < 0)) __PYX_ERR(0, 669, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 670, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 671, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 671, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 671, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 673, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 673, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 673, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 673, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[16]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 673, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsrmm2", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 669, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_42scsrmm2(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_42scsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrmm2", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsrmm2(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":682
 *     check_status(status)
 * 
 * cpdef dcsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_45dcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrmm2(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmm2", 0);

  /* "cupy/cuda/cusparse.pyx":687
 *         size_t csrRowPtrA, size_t csrColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsrmm2(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":688
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsrmm2(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 *         <const double *>alpha, <MatDescr>descrA, <const double *>csrValA,
 */
  __pyx_v_status = cusparseDcsrmm2(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((double const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((double const *)__pyx_v_B), __pyx_v_ldb, ((double const *)__pyx_v_beta), ((double *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":693
 *         <const int *>csrRowPtrA, <const int *>csrColIndA,
 *         <const double *>B, ldb, <const double *>beta, <double *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsrmm2(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":682
 *     check_status(status)
 * 
 * cpdef dcsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_45dcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_44dcsrmm2[] = "dcsrmm2(size_t handle, int transA, int transB, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_45dcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsrmm2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 1); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 2); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 3); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 4); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 5); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 6); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 7); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 8); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 9); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 10); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 11); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 12); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 13); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 14); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 15); __PYX_ERR(0, 682, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, 16); __PYX_ERR(0, 682, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsrmm2") < 0)) __PYX_ERR(0, 682, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 683, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 684, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 684, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 684, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 685, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 685, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[16]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 686, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsrmm2", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 682, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_44dcsrmm2(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_44dcsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrmm2", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsrmm2(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":695
 *     check_status(status)
 * 
 * cpdef ccsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_47ccsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrmm2(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmm2", 0);

  /* "cupy/cuda/cusparse.pyx":700
 *         size_t csrRowPtrA, size_t csrColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsrmm2(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":701
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsrmm2(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 *         <const cuComplex *>alpha, <MatDescr>descrA, <const cuComplex *>csrValA,
 */
  __pyx_v_status = cusparseCcsrmm2(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((cuComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cuComplex const *)__pyx_v_B), __pyx_v_ldb, ((cuComplex const *)__pyx_v_beta), ((cuComplex *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":707
 *         <const cuComplex *>B, ldb, <const cuComplex *>beta,
 *         <cuComplex *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsrmm2(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":695
 *     check_status(status)
 * 
 * cpdef ccsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_47ccsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_46ccsrmm2[] = "ccsrmm2(size_t handle, int transA, int transB, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_47ccsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsrmm2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 1); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 2); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 3); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 4); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 5); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 6); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 7); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 8); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 9); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 10); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 11); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 12); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 13); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 14); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 15); __PYX_ERR(0, 695, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, 16); __PYX_ERR(0, 695, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsrmm2") < 0)) __PYX_ERR(0, 695, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 696, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 697, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 697, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 697, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 698, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 698, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[16]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 699, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsrmm2", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 695, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_46ccsrmm2(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_46ccsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrmm2", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsrmm2(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":709
 *     check_status(status)
 * 
 * cpdef zcsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_49zcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrmm2(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmm2", 0);

  /* "cupy/cuda/cusparse.pyx":714
 *         size_t csrRowPtrA, size_t csrColIndA,
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsrmm2(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":715
 *         size_t B, int ldb, size_t beta, size_t C, int ldc):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsrmm2(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k, nnz,
 *         <const cuDoubleComplex *>alpha, <MatDescr>descrA,
 */
  __pyx_v_status = cusparseZcsrmm2(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, ((cuDoubleComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cuDoubleComplex const *)__pyx_v_B), __pyx_v_ldb, ((cuDoubleComplex const *)__pyx_v_beta), ((cuDoubleComplex *)__pyx_v_C), __pyx_v_ldc);

  /* "cupy/cuda/cusparse.pyx":722
 *         <const cuDoubleComplex *>B, ldb,
 *         <const cuDoubleComplex *>beta, <cuDoubleComplex *>C, ldc)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * ########################################
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":709
 *     check_status(status)
 * 
 * cpdef zcsrmm2(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k, int nnz,
 *         size_t alpha, size_t descrA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_49zcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_48zcsrmm2[] = "zcsrmm2(size_t handle, int transA, int transB, int m, int n, int k, int nnz, size_t alpha, size_t descrA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t B, int ldb, size_t beta, size_t C, int ldc)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_49zcsrmm2(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  int __pyx_v_nnz;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_B;
  int __pyx_v_ldb;
  size_t __pyx_v_beta;
  size_t __pyx_v_C;
  int __pyx_v_ldc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsrmm2 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_nnz,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_B,&__pyx_n_s_ldb,&__pyx_n_s_beta,&__pyx_n_s_C,&__pyx_n_s_ldc,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 1); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 2); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 3); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 4); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 5); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 6); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 7); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 8); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 9); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 10); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 11); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 12); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 13); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 14); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_C)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 15); __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ldc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, 16); __PYX_ERR(0, 709, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsrmm2") < 0)) __PYX_ERR(0, 709, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 710, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 711, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 711, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 711, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 712, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 712, __pyx_L3_error)
    __pyx_v_B = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_B == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
    __pyx_v_ldb = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_ldb == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
    __pyx_v_C = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_C == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
    __pyx_v_ldc = __Pyx_PyInt_As_int(values[16]); if (unlikely((__pyx_v_ldc == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 713, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsrmm2", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 709, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_48zcsrmm2(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_48zcsrmm2(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, int __pyx_v_nnz, size_t __pyx_v_alpha, size_t __pyx_v_descrA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_B, int __pyx_v_ldb, size_t __pyx_v_beta, size_t __pyx_v_C, int __pyx_v_ldc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrmm2", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsrmm2(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_nnz, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_B, __pyx_v_ldb, __pyx_v_beta, __pyx_v_C, __pyx_v_ldc, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrmm2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":727
 * # cuSPARSE Extra Function
 * 
 * cpdef xcsrgeamNnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, int nnzA,
 *         size_t csrRowPtrA, size_t csrColIndA, size_t descrB,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_51xcsrgeamNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrgeamNnz(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrgeamNnz", 0);

  /* "cupy/cuda/cusparse.pyx":732
 *         int nnzB, size_t csrRowPtrB, size_t csrColIndB,
 *         size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcsrgeamNnz(
 *         <Handle>handle, m, n, <const MatDescr>descrA, nnzA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":733
 *         size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcsrgeamNnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const MatDescr>descrA, nnzA,
 *         <const int *>csrRowPtrA, <const int *>csrColIndA,
 */
  __pyx_v_status = cusparseXcsrgeamNnz(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":739
 *         <const int *>csrColIndB, <const MatDescr>descrC, <int *>csrRowPtrC,
 *         <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef scsrgeam(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":727
 * # cuSPARSE Extra Function
 * 
 * cpdef xcsrgeamNnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, int nnzA,
 *         size_t csrRowPtrA, size_t csrColIndA, size_t descrB,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgeamNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_51xcsrgeamNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_50xcsrgeamNnz[] = "xcsrgeamNnz(size_t handle, int m, int n, size_t descrA, int nnzA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_51xcsrgeamNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcsrgeamNnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 1); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 2); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 3); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 4); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 5); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 6); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 7); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 8); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 9); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 10); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 11); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 12); __PYX_ERR(0, 727, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, 13); __PYX_ERR(0, 727, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcsrgeamNnz") < 0)) __PYX_ERR(0, 727, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 728, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 728, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 728, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 728, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 728, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 729, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 729, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 729, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 730, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 730, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 730, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 731, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 731, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 731, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcsrgeamNnz", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 727, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgeamNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_50xcsrgeamNnz(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrRowPtrC, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_50xcsrgeamNnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrgeamNnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcsrgeamNnz(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrRowPtrC, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgeamNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":741
 *     check_status(status)
 * 
 * cpdef scsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_53scsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrgeam(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrgeam", 0);

  /* "cupy/cuda/cusparse.pyx":748
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsrgeam(
 *         <Handle>handle, m, n, <const float *>alpha,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":749
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsrgeam(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const float *>alpha,
 *         <const MatDescr>descrA, nnzA, <const float *>csrValA,
 */
  __pyx_v_status = cusparseScsrgeam(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((float const *)__pyx_v_alpha), ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((float const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((float const *)__pyx_v_beta), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((float const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((float *)__pyx_v_csrValC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":757
 *         <const MatDescr>descrC, <float *>csrValC, <int *>csrRowPtrC,
 *         <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":741
 *     check_status(status)
 * 
 * cpdef scsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_53scsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_52scsrgeam[] = "scsrgeam(size_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t beta, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_53scsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_beta;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsrgeam (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_beta,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 1); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 2); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 3); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 4); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 5); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 6); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 7); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 8); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 9); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 10); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 11); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 12); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 13); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 14); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 15); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 16); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 17); __PYX_ERR(0, 741, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, 18); __PYX_ERR(0, 741, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsrgeam") < 0)) __PYX_ERR(0, 741, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 742, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 743, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 743, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 743, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 745, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 745, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 745, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 746, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 746, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 746, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 747, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 747, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsrgeam", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 741, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_52scsrgeam(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_52scsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrgeam", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsrgeam(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":760
 * 
 * 
 * cpdef dcsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_55dcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrgeam(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrgeam", 0);

  /* "cupy/cuda/cusparse.pyx":767
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsrgeam(
 *         <Handle>handle, m, n, <const double *>alpha,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":768
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsrgeam(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const double *>alpha,
 *         <const MatDescr>descrA, nnzA, <const double *>csrValA,
 */
  __pyx_v_status = cusparseDcsrgeam(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((double const *)__pyx_v_alpha), ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((double const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((double const *)__pyx_v_beta), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((double const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((double *)__pyx_v_csrValC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":776
 *         <const MatDescr>descrC, <double *>csrValC, <int *>csrRowPtrC,
 *         <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsrgeam(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":760
 * 
 * 
 * cpdef dcsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_55dcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_54dcsrgeam[] = "dcsrgeam(size_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t beta, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_55dcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_beta;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsrgeam (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_beta,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 1); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 2); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 3); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 4); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 5); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 6); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 7); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 8); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 9); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 10); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 11); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 12); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 13); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 14); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 15); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 16); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 17); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, 18); __PYX_ERR(0, 760, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsrgeam") < 0)) __PYX_ERR(0, 760, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 761, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 763, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 763, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 763, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 764, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 764, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 764, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 766, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 766, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsrgeam", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 760, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_54dcsrgeam(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_54dcsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrgeam", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsrgeam(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":778
 *     check_status(status)
 * 
 * cpdef ccsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_57ccsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrgeam(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrgeam", 0);

  /* "cupy/cuda/cusparse.pyx":785
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsrgeam(
 *         <Handle>handle, m, n, <const cuComplex *>alpha,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":786
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsrgeam(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const cuComplex *>alpha,
 *         <const MatDescr>descrA, nnzA, <const cuComplex *>csrValA,
 */
  __pyx_v_status = cusparseCcsrgeam(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cuComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((cuComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cuComplex const *)__pyx_v_beta), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((cuComplex const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((cuComplex *)__pyx_v_csrValC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":795
 *         <const MatDescr>descrC, <cuComplex *>csrValC, <int *>csrRowPtrC,
 *         <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsrgeam(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":778
 *     check_status(status)
 * 
 * cpdef ccsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_57ccsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_56ccsrgeam[] = "ccsrgeam(size_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t beta, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_57ccsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_beta;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsrgeam (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_beta,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 1); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 2); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 3); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 4); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 5); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 6); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 7); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 8); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 9); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 10); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 11); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 12); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 13); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 14); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 15); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 16); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 17); __PYX_ERR(0, 778, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, 18); __PYX_ERR(0, 778, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsrgeam") < 0)) __PYX_ERR(0, 778, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 780, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 781, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 781, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 781, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 782, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 782, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 782, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 783, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 784, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 784, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsrgeam", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 778, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_56ccsrgeam(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_56ccsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrgeam", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsrgeam(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":797
 *     check_status(status)
 * 
 * cpdef zcsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_59zcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrgeam(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrgeam", 0);

  /* "cupy/cuda/cusparse.pyx":804
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsrgeam(
 *         <Handle>handle, m, n, <const cuDoubleComplex *>alpha,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":805
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsrgeam(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const cuDoubleComplex *>alpha,
 *         <const MatDescr>descrA, nnzA, <const cuDoubleComplex *>csrValA,
 */
  __pyx_v_status = cusparseZcsrgeam(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cuDoubleComplex const *)__pyx_v_alpha), ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((cuDoubleComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cuDoubleComplex const *)__pyx_v_beta), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((cuDoubleComplex const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((cuDoubleComplex *)__pyx_v_csrValC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":814
 *         <const MatDescr>descrC, <cuDoubleComplex *>csrValC, <int *>csrRowPtrC,
 *         <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef xcsrgemmNnz(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":797
 *     check_status(status)
 * 
 * cpdef zcsrgeam(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t alpha, size_t descrA,
 *         int nnzA, size_t csrValA, size_t csrRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_59zcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_58zcsrgeam[] = "zcsrgeam(size_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t beta, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_59zcsrgeam(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_alpha;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_beta;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsrgeam (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_alpha,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_beta,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 1); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 2); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 3); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 4); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 5); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 6); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 7); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 8); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 9); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 10); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 11); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 12); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 13); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 14); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 15); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 16); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 17); __PYX_ERR(0, 797, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, 18); __PYX_ERR(0, 797, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsrgeam") < 0)) __PYX_ERR(0, 797, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L3_error)
    __pyx_v_alpha = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_alpha == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 799, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 799, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 799, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 800, __pyx_L3_error)
    __pyx_v_beta = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_beta == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 800, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 800, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 801, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 802, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 802, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 802, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 803, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 803, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsrgeam", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 797, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_58zcsrgeam(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_58zcsrgeam(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_alpha, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_beta, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrgeam", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsrgeam(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_alpha, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_beta, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgeam", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":816
 *     check_status(status)
 * 
 * cpdef xcsrgemmNnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, int nnzA, size_t csrRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_61xcsrgemmNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrgemmNnz(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrgemmNnz", 0);

  /* "cupy/cuda/cusparse.pyx":822
 *         size_t csrRowPtrB, size_t csrColIndB,
 *         size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcsrgemmNnz(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":823
 *         size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcsrgemmNnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 *         <const MatDescr>descrA, nnzA, <const int *>csrRowPtrA,
 */
  __pyx_v_status = cusparseXcsrgemmNnz(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((int *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":829
 *         <const int *>csrRowPtrB, <const int *>csrColIndB,
 *         <const MatDescr>descrC, <int *>csrRowPtrC, <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":816
 *     check_status(status)
 * 
 * cpdef xcsrgemmNnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, int nnzA, size_t csrRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgemmNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_61xcsrgemmNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_60xcsrgemmNnz[] = "xcsrgemmNnz(size_t handle, int transA, int transB, int m, int n, int k, size_t descrA, int nnzA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrRowPtrC, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_61xcsrgemmNnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcsrgemmNnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 1); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 2); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 3); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 4); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 5); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 6); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 7); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 8); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 9); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 10); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 11); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 12); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 13); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 14); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 15); __PYX_ERR(0, 816, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, 16); __PYX_ERR(0, 816, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcsrgemmNnz") < 0)) __PYX_ERR(0, 816, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 817, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 818, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 819, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 819, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 819, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[12]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 820, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 820, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 821, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 821, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 821, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcsrgemmNnz", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 816, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgemmNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_60xcsrgemmNnz(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrRowPtrC, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_60xcsrgemmNnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrgemmNnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcsrgemmNnz(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrRowPtrC, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 816, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrgemmNnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":832
 * 
 * 
 * cpdef scsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_63scsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsrgemm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int const __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int const __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrgemm", 0);

  /* "cupy/cuda/cusparse.pyx":839
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsrgemm(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":840
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsrgemm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 *         <const MatDescr>descrA, nnzA, <const float *>csrValA,
 */
  __pyx_v_status = cusparseScsrgemm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((float const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((float const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((float *)__pyx_v_csrValC), ((int const *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":848
 *         <const MatDescr>descrC, <float *>csrValC,
 *         <const int *>csrRowPtrC, <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":832
 * 
 * 
 * cpdef scsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_63scsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_62scsrgemm[] = "scsrgemm(size_t handle, int transA, int transB, int m, int n, int k, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_63scsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsrgemm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 1); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 2); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 3); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 4); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 5); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 6); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 7); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 8); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 9); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 10); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 11); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 12); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 13); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 14); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 15); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 16); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 17); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 18); __PYX_ERR(0, 832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, 19); __PYX_ERR(0, 832, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsrgemm") < 0)) __PYX_ERR(0, 832, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 834, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 834, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 834, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 835, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 836, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 836, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 836, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 837, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 837, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 837, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[19]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 838, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsrgemm", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 832, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_62scsrgemm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_62scsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsrgemm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsrgemm(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":851
 * 
 * 
 * cpdef dcsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_65dcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsrgemm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int const __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int const __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrgemm", 0);

  /* "cupy/cuda/cusparse.pyx":858
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsrgemm(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":859
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsrgemm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 *         <const MatDescr>descrA, nnzA, <const double *>csrValA,
 */
  __pyx_v_status = cusparseDcsrgemm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((double const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((double const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((double *)__pyx_v_csrValC), ((int const *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":867
 *         <const MatDescr>descrC, <double *>csrValC,
 *         <const int *>csrRowPtrC, <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsrgemm(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":851
 * 
 * 
 * cpdef dcsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_65dcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_64dcsrgemm[] = "dcsrgemm(size_t handle, int transA, int transB, int m, int n, int k, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_65dcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsrgemm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 1); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 2); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 3); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 4); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 5); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 6); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 7); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 8); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 9); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 10); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 11); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 12); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 13); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 14); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 15); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 16); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 17); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 18); __PYX_ERR(0, 851, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, 19); __PYX_ERR(0, 851, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsrgemm") < 0)) __PYX_ERR(0, 851, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 852, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 854, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 854, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 854, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 855, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 855, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 855, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 856, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 856, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 856, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 857, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[19]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 857, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsrgemm", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 851, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_64dcsrgemm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_64dcsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsrgemm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsrgemm(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":869
 *     check_status(status)
 * 
 * cpdef ccsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_67ccsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsrgemm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int const __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int const __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrgemm", 0);

  /* "cupy/cuda/cusparse.pyx":876
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsrgemm(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":877
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsrgemm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 *         <const MatDescr>descrA, nnzA, <const cuComplex *>csrValA,
 */
  __pyx_v_status = cusparseCcsrgemm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((cuComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((cuComplex const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((cuComplex *)__pyx_v_csrValC), ((int const *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":885
 *         <const MatDescr>descrC, <cuComplex *>csrValC,
 *         <const int *>csrRowPtrC, <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsrgemm(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":869
 *     check_status(status)
 * 
 * cpdef ccsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_67ccsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_66ccsrgemm[] = "ccsrgemm(size_t handle, int transA, int transB, int m, int n, int k, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_67ccsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsrgemm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 1); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 2); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 3); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 4); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 5); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 6); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 7); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 8); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 9); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 10); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 11); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 12); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 13); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 14); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 15); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 16); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 17); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 18); __PYX_ERR(0, 869, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, 19); __PYX_ERR(0, 869, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsrgemm") < 0)) __PYX_ERR(0, 869, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 870, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 873, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 873, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 873, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 874, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 874, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 874, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 875, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[19]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 875, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsrgemm", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 869, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_66ccsrgemm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_66ccsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsrgemm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsrgemm(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":887
 *     check_status(status)
 * 
 * cpdef zcsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_69zcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsrgemm(size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int const __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int const __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrgemm", 0);

  /* "cupy/cuda/cusparse.pyx":894
 *         size_t csrColIndB, size_t descrC, size_t csrValC,
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsrgemm(
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":895
 *         size_t csrRowPtrC, size_t csrColIndC):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsrgemm(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Operation>transA, <Operation>transB, m, n, k,
 *         <const MatDescr>descrA, nnzA, <const cuDoubleComplex *>csrValA,
 */
  __pyx_v_status = cusparseZcsrgemm(((cusparseHandle_t)__pyx_v_handle), ((cusparseOperation_t)__pyx_v_transA), ((cusparseOperation_t)__pyx_v_transB), __pyx_v_m, __pyx_v_n, __pyx_v_k, ((cusparseMatDescr_t const )__pyx_v_descrA), __pyx_v_nnzA, ((cuDoubleComplex const *)__pyx_v_csrValA), ((int const *)__pyx_v_csrRowPtrA), ((int const *)__pyx_v_csrColIndA), ((cusparseMatDescr_t const )__pyx_v_descrB), __pyx_v_nnzB, ((cuDoubleComplex const *)__pyx_v_csrValB), ((int const *)__pyx_v_csrRowPtrB), ((int const *)__pyx_v_csrColIndB), ((cusparseMatDescr_t const )__pyx_v_descrC), ((cuDoubleComplex *)__pyx_v_csrValC), ((int const *)__pyx_v_csrRowPtrC), ((int *)__pyx_v_csrColIndC));

  /* "cupy/cuda/cusparse.pyx":903
 *         <const MatDescr>descrC, <cuDoubleComplex *>csrValC,
 *         <const int *>csrRowPtrC, <int *>csrColIndC)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * ########################################
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":887
 *     check_status(status)
 * 
 * cpdef zcsrgemm(             # <<<<<<<<<<<<<<
 *         size_t handle, int transA, int transB, int m, int n, int k,
 *         size_t descrA, const int nnzA, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_69zcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_68zcsrgemm[] = "zcsrgemm(size_t handle, int transA, int transB, int m, int n, int k, size_t descrA, int nnzA, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA, size_t descrB, int nnzB, size_t csrValB, size_t csrRowPtrB, size_t csrColIndB, size_t descrC, size_t csrValC, size_t csrRowPtrC, size_t csrColIndC)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_69zcsrgemm(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_transA;
  int __pyx_v_transB;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_k;
  size_t __pyx_v_descrA;
  int __pyx_v_nnzA;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  size_t __pyx_v_descrB;
  int __pyx_v_nnzB;
  size_t __pyx_v_csrValB;
  size_t __pyx_v_csrRowPtrB;
  size_t __pyx_v_csrColIndB;
  size_t __pyx_v_descrC;
  size_t __pyx_v_csrValC;
  size_t __pyx_v_csrRowPtrC;
  size_t __pyx_v_csrColIndC;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsrgemm (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_transA,&__pyx_n_s_transB,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_k,&__pyx_n_s_descrA,&__pyx_n_s_nnzA,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,&__pyx_n_s_descrB,&__pyx_n_s_nnzB,&__pyx_n_s_csrValB,&__pyx_n_s_csrRowPtrB,&__pyx_n_s_csrColIndB,&__pyx_n_s_descrC,&__pyx_n_s_csrValC,&__pyx_n_s_csrRowPtrC,&__pyx_n_s_csrColIndC,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 1); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_transB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 2); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 3); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 4); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 5); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 6); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 7); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 8); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 9); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 10); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 11); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 12); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 13); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 14); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndB)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 15); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 16); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 17); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 18); __PYX_ERR(0, 887, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, 19); __PYX_ERR(0, 887, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsrgemm") < 0)) __PYX_ERR(0, 887, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_transA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_transA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_transB = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_transB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_k = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 889, __pyx_L3_error)
    __pyx_v_nnzA = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_nnzA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 889, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 889, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 890, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 890, __pyx_L3_error)
    __pyx_v_descrB = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_descrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 890, __pyx_L3_error)
    __pyx_v_nnzB = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_nnzB == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 891, __pyx_L3_error)
    __pyx_v_csrValB = __Pyx_PyInt_As_size_t(values[13]); if (unlikely((__pyx_v_csrValB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 891, __pyx_L3_error)
    __pyx_v_csrRowPtrB = __Pyx_PyInt_As_size_t(values[14]); if (unlikely((__pyx_v_csrRowPtrB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 891, __pyx_L3_error)
    __pyx_v_csrColIndB = __Pyx_PyInt_As_size_t(values[15]); if (unlikely((__pyx_v_csrColIndB == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 892, __pyx_L3_error)
    __pyx_v_descrC = __Pyx_PyInt_As_size_t(values[16]); if (unlikely((__pyx_v_descrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 892, __pyx_L3_error)
    __pyx_v_csrValC = __Pyx_PyInt_As_size_t(values[17]); if (unlikely((__pyx_v_csrValC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 892, __pyx_L3_error)
    __pyx_v_csrRowPtrC = __Pyx_PyInt_As_size_t(values[18]); if (unlikely((__pyx_v_csrRowPtrC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 893, __pyx_L3_error)
    __pyx_v_csrColIndC = __Pyx_PyInt_As_size_t(values[19]); if (unlikely((__pyx_v_csrColIndC == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 893, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsrgemm", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 887, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_68zcsrgemm(__pyx_self, __pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_68zcsrgemm(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_transA, int __pyx_v_transB, int __pyx_v_m, int __pyx_v_n, int __pyx_v_k, size_t __pyx_v_descrA, int __pyx_v_nnzA, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, size_t __pyx_v_descrB, int __pyx_v_nnzB, size_t __pyx_v_csrValB, size_t __pyx_v_csrRowPtrB, size_t __pyx_v_csrColIndB, size_t __pyx_v_descrC, size_t __pyx_v_csrValC, size_t __pyx_v_csrRowPtrC, size_t __pyx_v_csrColIndC) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsrgemm", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsrgemm(__pyx_v_handle, __pyx_v_transA, __pyx_v_transB, __pyx_v_m, __pyx_v_n, __pyx_v_k, __pyx_v_descrA, __pyx_v_nnzA, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, __pyx_v_descrB, __pyx_v_nnzB, __pyx_v_csrValB, __pyx_v_csrRowPtrB, __pyx_v_csrColIndB, __pyx_v_descrC, __pyx_v_csrValC, __pyx_v_csrRowPtrC, __pyx_v_csrColIndC, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsrgemm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":908
 * # cuSPARSE Format Convrsion
 * 
 * cpdef xcoo2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, size_t cooRowInd, int nnz, int m, size_t csrRowPtr,
 *         int idxBase):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_71xcoo2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcoo2csr(size_t __pyx_v_handle, size_t __pyx_v_cooRowInd, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_csrRowPtr, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoo2csr", 0);

  /* "cupy/cuda/cusparse.pyx":911
 *         size_t handle, size_t cooRowInd, int nnz, int m, size_t csrRowPtr,
 *         int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcoo2csr(
 *         <Handle>handle, <const int *>cooRowInd, nnz, m, <int *>csrRowPtr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 911, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":912
 *         int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcoo2csr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <const int *>cooRowInd, nnz, m, <int *>csrRowPtr,
 *         <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseXcoo2csr(((cusparseHandle_t)__pyx_v_handle), ((int const *)__pyx_v_cooRowInd), __pyx_v_nnz, __pyx_v_m, ((int *)__pyx_v_csrRowPtr), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":915
 *         <Handle>handle, <const int *>cooRowInd, nnz, m, <int *>csrRowPtr,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":908
 * # cuSPARSE Format Convrsion
 * 
 * cpdef xcoo2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, size_t cooRowInd, int nnz, int m, size_t csrRowPtr,
 *         int idxBase):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoo2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_71xcoo2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_70xcoo2csr[] = "xcoo2csr(size_t handle, size_t cooRowInd, int nnz, int m, size_t csrRowPtr, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_71xcoo2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  size_t __pyx_v_cooRowInd;
  int __pyx_v_nnz;
  int __pyx_v_m;
  size_t __pyx_v_csrRowPtr;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcoo2csr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_cooRowInd,&__pyx_n_s_nnz,&__pyx_n_s_m,&__pyx_n_s_csrRowPtr,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, 1); __PYX_ERR(0, 908, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, 2); __PYX_ERR(0, 908, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, 3); __PYX_ERR(0, 908, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, 4); __PYX_ERR(0, 908, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, 5); __PYX_ERR(0, 908, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcoo2csr") < 0)) __PYX_ERR(0, 908, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L3_error)
    __pyx_v_cooRowInd = __Pyx_PyInt_As_size_t(values[1]); if (unlikely((__pyx_v_cooRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 910, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcoo2csr", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 908, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoo2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_70xcoo2csr(__pyx_self, __pyx_v_handle, __pyx_v_cooRowInd, __pyx_v_nnz, __pyx_v_m, __pyx_v_csrRowPtr, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_70xcoo2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_cooRowInd, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_csrRowPtr, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoo2csr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcoo2csr(__pyx_v_handle, __pyx_v_cooRowInd, __pyx_v_nnz, __pyx_v_m, __pyx_v_csrRowPtr, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoo2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":918
 * 
 * 
 * cpdef scsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_73scsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsc2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsc2dense", 0);

  /* "cupy/cuda/cusparse.pyx":922
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsc2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":923
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsc2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const float *>cscSortedValA, <const int *>cscSortedRowIndA,
 */
  __pyx_v_status = cusparseScsc2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_cscSortedValA), ((int const *)__pyx_v_cscSortedRowIndA), ((int const *)__pyx_v_cscSortedColPtrA), ((float *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":927
 *         <const float *>cscSortedValA, <const int *>cscSortedRowIndA,
 *         <const int *>cscSortedColPtrA, <float *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":918
 * 
 * 
 * cpdef scsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_73scsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_72scsc2dense[] = "scsc2dense(size_t handle, int m, int n, size_t descrA, size_t cscSortedValA, size_t cscSortedRowIndA, size_t cscSortedColPtrA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_73scsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_cscSortedValA;
  size_t __pyx_v_cscSortedRowIndA;
  size_t __pyx_v_cscSortedColPtrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsc2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_cscSortedValA,&__pyx_n_s_cscSortedRowIndA,&__pyx_n_s_cscSortedColPtrA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 1); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 2); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 3); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 4); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 5); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 6); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 7); __PYX_ERR(0, 918, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, 8); __PYX_ERR(0, 918, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsc2dense") < 0)) __PYX_ERR(0, 918, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 919, __pyx_L3_error)
    __pyx_v_cscSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cscSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 920, __pyx_L3_error)
    __pyx_v_cscSortedRowIndA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscSortedRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 920, __pyx_L3_error)
    __pyx_v_cscSortedColPtrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_cscSortedColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsc2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 918, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_72scsc2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_72scsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsc2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsc2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":930
 * 
 * 
 * cpdef dcsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_75dcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsc2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsc2dense", 0);

  /* "cupy/cuda/cusparse.pyx":934
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsc2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":935
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsc2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const double *>cscSortedValA, <const int *>cscSortedRowIndA,
 */
  __pyx_v_status = cusparseDcsc2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_cscSortedValA), ((int const *)__pyx_v_cscSortedRowIndA), ((int const *)__pyx_v_cscSortedColPtrA), ((double *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":939
 *         <const double *>cscSortedValA, <const int *>cscSortedRowIndA,
 *         <const int *>cscSortedColPtrA, <double *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsc2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":930
 * 
 * 
 * cpdef dcsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_75dcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_74dcsc2dense[] = "dcsc2dense(size_t handle, int m, int n, size_t descrA, size_t cscSortedValA, size_t cscSortedRowIndA, size_t cscSortedColPtrA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_75dcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_cscSortedValA;
  size_t __pyx_v_cscSortedRowIndA;
  size_t __pyx_v_cscSortedColPtrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsc2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_cscSortedValA,&__pyx_n_s_cscSortedRowIndA,&__pyx_n_s_cscSortedColPtrA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 1); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 2); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 3); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 4); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 5); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 6); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 7); __PYX_ERR(0, 930, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, 8); __PYX_ERR(0, 930, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsc2dense") < 0)) __PYX_ERR(0, 930, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L3_error)
    __pyx_v_cscSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cscSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 932, __pyx_L3_error)
    __pyx_v_cscSortedRowIndA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscSortedRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 932, __pyx_L3_error)
    __pyx_v_cscSortedColPtrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_cscSortedColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 933, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 933, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 933, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsc2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 930, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_74dcsc2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_74dcsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsc2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsc2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":941
 *     check_status(status)
 * 
 * cpdef ccsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_77ccsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsc2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsc2dense", 0);

  /* "cupy/cuda/cusparse.pyx":945
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsc2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 945, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":946
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsc2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuComplex *>cscSortedValA, <const int *>cscSortedRowIndA,
 */
  __pyx_v_status = cusparseCcsc2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_cscSortedValA), ((int const *)__pyx_v_cscSortedRowIndA), ((int const *)__pyx_v_cscSortedColPtrA), ((cuComplex *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":950
 *         <const cuComplex *>cscSortedValA, <const int *>cscSortedRowIndA,
 *         <const int *>cscSortedColPtrA, <cuComplex *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsc2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":941
 *     check_status(status)
 * 
 * cpdef ccsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_77ccsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_76ccsc2dense[] = "ccsc2dense(size_t handle, int m, int n, size_t descrA, size_t cscSortedValA, size_t cscSortedRowIndA, size_t cscSortedColPtrA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_77ccsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_cscSortedValA;
  size_t __pyx_v_cscSortedRowIndA;
  size_t __pyx_v_cscSortedColPtrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsc2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_cscSortedValA,&__pyx_n_s_cscSortedRowIndA,&__pyx_n_s_cscSortedColPtrA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 1); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 2); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 3); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 4); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 5); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 6); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 7); __PYX_ERR(0, 941, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, 8); __PYX_ERR(0, 941, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsc2dense") < 0)) __PYX_ERR(0, 941, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
    __pyx_v_cscSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cscSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 943, __pyx_L3_error)
    __pyx_v_cscSortedRowIndA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscSortedRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 943, __pyx_L3_error)
    __pyx_v_cscSortedColPtrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_cscSortedColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 944, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 944, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 944, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsc2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 941, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_76ccsc2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_76ccsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsc2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsc2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":952
 *     check_status(status)
 * 
 * cpdef zcsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_79zcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsc2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsc2dense", 0);

  /* "cupy/cuda/cusparse.pyx":956
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsc2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":957
 *         size_t cscSortedColPtrA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsc2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuDoubleComplex *>cscSortedValA, <const int *>cscSortedRowIndA,
 */
  __pyx_v_status = cusparseZcsc2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_cscSortedValA), ((int const *)__pyx_v_cscSortedRowIndA), ((int const *)__pyx_v_cscSortedColPtrA), ((cuDoubleComplex *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":961
 *         <const cuDoubleComplex *>cscSortedValA, <const int *>cscSortedRowIndA,
 *         <const int *>cscSortedColPtrA, <cuDoubleComplex *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef xcsr2coo(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 961, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":952
 *     check_status(status)
 * 
 * cpdef zcsc2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t cscSortedValA, size_t cscSortedRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_79zcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_78zcsc2dense[] = "zcsc2dense(size_t handle, int m, int n, size_t descrA, size_t cscSortedValA, size_t cscSortedRowIndA, size_t cscSortedColPtrA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_79zcsc2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_cscSortedValA;
  size_t __pyx_v_cscSortedRowIndA;
  size_t __pyx_v_cscSortedColPtrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsc2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_cscSortedValA,&__pyx_n_s_cscSortedRowIndA,&__pyx_n_s_cscSortedColPtrA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 1); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 2); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 3); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 4); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 5); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscSortedColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 6); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 7); __PYX_ERR(0, 952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, 8); __PYX_ERR(0, 952, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsc2dense") < 0)) __PYX_ERR(0, 952, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
    __pyx_v_cscSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cscSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 954, __pyx_L3_error)
    __pyx_v_cscSortedRowIndA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscSortedRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 954, __pyx_L3_error)
    __pyx_v_cscSortedColPtrA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_cscSortedColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsc2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 952, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_78zcsc2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_78zcsc2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_cscSortedValA, size_t __pyx_v_cscSortedRowIndA, size_t __pyx_v_cscSortedColPtrA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsc2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsc2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_cscSortedValA, __pyx_v_cscSortedRowIndA, __pyx_v_cscSortedColPtrA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsc2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":963
 *     check_status(status)
 * 
 * cpdef xcsr2coo(             # <<<<<<<<<<<<<<
 *         size_t handle, size_t csrRowPtr, int nnz, int m, size_t cooRowInd,
 *         int idxBase):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_81xcsr2coo(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsr2coo(size_t __pyx_v_handle, size_t __pyx_v_csrRowPtr, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_cooRowInd, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsr2coo", 0);

  /* "cupy/cuda/cusparse.pyx":966
 *         size_t handle, size_t csrRowPtr, int nnz, int m, size_t cooRowInd,
 *         int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcsr2coo(
 *         <Handle>handle, <const int *>csrRowPtr, nnz, m, <int *>cooRowInd,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":967
 *         int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcsr2coo(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <const int *>csrRowPtr, nnz, m, <int *>cooRowInd,
 *         <IndexBase>idxBase)
 */
  __pyx_v_status = cusparseXcsr2coo(((cusparseHandle_t)__pyx_v_handle), ((int const *)__pyx_v_csrRowPtr), __pyx_v_nnz, __pyx_v_m, ((int *)__pyx_v_cooRowInd), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":970
 *         <Handle>handle, <const int *>csrRowPtr, nnz, m, <int *>cooRowInd,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":963
 *     check_status(status)
 * 
 * cpdef xcsr2coo(             # <<<<<<<<<<<<<<
 *         size_t handle, size_t csrRowPtr, int nnz, int m, size_t cooRowInd,
 *         int idxBase):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsr2coo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_81xcsr2coo(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_80xcsr2coo[] = "xcsr2coo(size_t handle, size_t csrRowPtr, int nnz, int m, size_t cooRowInd, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_81xcsr2coo(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  size_t __pyx_v_csrRowPtr;
  int __pyx_v_nnz;
  int __pyx_v_m;
  size_t __pyx_v_cooRowInd;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcsr2coo (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_csrRowPtr,&__pyx_n_s_nnz,&__pyx_n_s_m,&__pyx_n_s_cooRowInd,&__pyx_n_s_idxBase,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, 1); __PYX_ERR(0, 963, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, 2); __PYX_ERR(0, 963, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, 3); __PYX_ERR(0, 963, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, 4); __PYX_ERR(0, 963, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, 5); __PYX_ERR(0, 963, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcsr2coo") < 0)) __PYX_ERR(0, 963, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[1]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
    __pyx_v_cooRowInd = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cooRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 964, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 965, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcsr2coo", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 963, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsr2coo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_80xcsr2coo(__pyx_self, __pyx_v_handle, __pyx_v_csrRowPtr, __pyx_v_nnz, __pyx_v_m, __pyx_v_cooRowInd, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_80xcsr2coo(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, size_t __pyx_v_csrRowPtr, int __pyx_v_nnz, int __pyx_v_m, size_t __pyx_v_cooRowInd, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsr2coo", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcsr2coo(__pyx_v_handle, __pyx_v_csrRowPtr, __pyx_v_nnz, __pyx_v_m, __pyx_v_cooRowInd, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsr2coo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":973
 * 
 * 
 * cpdef scsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_83scsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2csc", 0);

  /* "cupy/cuda/cusparse.pyx":977
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsr2csc(
 *         <Handle>handle, m, n, nnz, <const float *>csrVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 977, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":978
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsr2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const float *>csrVal,
 *         <const int *>csrRowPtr, <const int *>csrColInd, <float *>cscVal,
 */
  __pyx_v_status = cusparseScsr2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((float const *)__pyx_v_csrVal), ((int const *)__pyx_v_csrRowPtr), ((int const *)__pyx_v_csrColInd), ((float *)__pyx_v_cscVal), ((int *)__pyx_v_cscRowInd), ((int *)__pyx_v_cscColPtr), ((cusparseAction_t)__pyx_v_copyValues), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":983
 *         <int *>cscRowInd, <int *>cscColPtr, <Action>copyValues,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":973
 * 
 * 
 * cpdef scsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_83scsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_82scsr2csc[] = "scsr2csc(size_t handle, int m, int n, int nnz, size_t csrVal, size_t csrRowPtr, size_t csrColInd, size_t cscVal, size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_83scsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_csrVal;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  size_t __pyx_v_cscVal;
  size_t __pyx_v_cscRowInd;
  size_t __pyx_v_cscColPtr;
  int __pyx_v_copyValues;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsr2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_csrVal,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,&__pyx_n_s_cscVal,&__pyx_n_s_cscRowInd,&__pyx_n_s_cscColPtr,&__pyx_n_s_copyValues,&__pyx_n_s_idxBase,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 1); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 2); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 3); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 4); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 5); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 6); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 7); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 8); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 9); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_copyValues)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 10); __PYX_ERR(0, 973, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, 11); __PYX_ERR(0, 973, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsr2csc") < 0)) __PYX_ERR(0, 973, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
    __pyx_v_csrVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L3_error)
    __pyx_v_cscVal = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L3_error)
    __pyx_v_copyValues = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_copyValues == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 976, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsr2csc", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 973, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_82scsr2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_82scsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsr2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":986
 * 
 * 
 * cpdef dcsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_85dcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2csc", 0);

  /* "cupy/cuda/cusparse.pyx":990
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsr2csc(
 *         <Handle>handle, m, n, nnz, <const double *>csrVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":991
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsr2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const double *>csrVal,
 *         <const int *>csrRowPtr, <const int *>csrColInd, <double *>cscVal,
 */
  __pyx_v_status = cusparseDcsr2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((double const *)__pyx_v_csrVal), ((int const *)__pyx_v_csrRowPtr), ((int const *)__pyx_v_csrColInd), ((double *)__pyx_v_cscVal), ((int *)__pyx_v_cscRowInd), ((int *)__pyx_v_cscColPtr), ((cusparseAction_t)__pyx_v_copyValues), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":996
 *         <int *>cscRowInd, <int *>cscColPtr, <Action>copyValues,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsr2csc(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":986
 * 
 * 
 * cpdef dcsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_85dcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_84dcsr2csc[] = "dcsr2csc(size_t handle, int m, int n, int nnz, size_t csrVal, size_t csrRowPtr, size_t csrColInd, size_t cscVal, size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_85dcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_csrVal;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  size_t __pyx_v_cscVal;
  size_t __pyx_v_cscRowInd;
  size_t __pyx_v_cscColPtr;
  int __pyx_v_copyValues;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsr2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_csrVal,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,&__pyx_n_s_cscVal,&__pyx_n_s_cscRowInd,&__pyx_n_s_cscColPtr,&__pyx_n_s_copyValues,&__pyx_n_s_idxBase,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 1); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 2); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 3); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 4); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 5); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 6); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 7); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 8); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 9); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_copyValues)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 10); __PYX_ERR(0, 986, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, 11); __PYX_ERR(0, 986, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsr2csc") < 0)) __PYX_ERR(0, 986, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
    __pyx_v_csrVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L3_error)
    __pyx_v_cscVal = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 989, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 989, __pyx_L3_error)
    __pyx_v_copyValues = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_copyValues == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 989, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 989, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsr2csc", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 986, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_84dcsr2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_84dcsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsr2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 986, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":998
 *     check_status(status)
 * 
 * cpdef ccsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_87ccsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1002
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsr2csc(
 *         <Handle>handle, m, n, nnz, <const cuComplex *>csrVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1003
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsr2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const cuComplex *>csrVal,
 *         <const int *>csrRowPtr, <const int *>csrColInd, <cuComplex *>cscVal,
 */
  __pyx_v_status = cusparseCcsr2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cuComplex const *)__pyx_v_csrVal), ((int const *)__pyx_v_csrRowPtr), ((int const *)__pyx_v_csrColInd), ((cuComplex *)__pyx_v_cscVal), ((int *)__pyx_v_cscRowInd), ((int *)__pyx_v_cscColPtr), ((cusparseAction_t)__pyx_v_copyValues), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":1008
 *         <int *>cscRowInd, <int *>cscColPtr, <Action>copyValues,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsr2csc(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":998
 *     check_status(status)
 * 
 * cpdef ccsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_87ccsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_86ccsr2csc[] = "ccsr2csc(size_t handle, int m, int n, int nnz, size_t csrVal, size_t csrRowPtr, size_t csrColInd, size_t cscVal, size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_87ccsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_csrVal;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  size_t __pyx_v_cscVal;
  size_t __pyx_v_cscRowInd;
  size_t __pyx_v_cscColPtr;
  int __pyx_v_copyValues;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsr2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_csrVal,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,&__pyx_n_s_cscVal,&__pyx_n_s_cscRowInd,&__pyx_n_s_cscColPtr,&__pyx_n_s_copyValues,&__pyx_n_s_idxBase,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 1); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 2); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 3); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 4); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 5); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 6); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 7); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 8); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 9); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_copyValues)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 10); __PYX_ERR(0, 998, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, 11); __PYX_ERR(0, 998, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsr2csc") < 0)) __PYX_ERR(0, 998, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
    __pyx_v_csrVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L3_error)
    __pyx_v_cscVal = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L3_error)
    __pyx_v_copyValues = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_copyValues == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1001, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsr2csc", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 998, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_86ccsr2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_86ccsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsr2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1010
 *     check_status(status)
 * 
 * cpdef zcsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_89zcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1014
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsr2csc(
 *         <Handle>handle, m, n, nnz, <const cuDoubleComplex *>csrVal,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1015
 *         size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsr2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const cuDoubleComplex *>csrVal,
 *         <const int *>csrRowPtr, <const int *>csrColInd,
 */
  __pyx_v_status = cusparseZcsr2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cuDoubleComplex const *)__pyx_v_csrVal), ((int const *)__pyx_v_csrRowPtr), ((int const *)__pyx_v_csrColInd), ((cuDoubleComplex *)__pyx_v_cscVal), ((int *)__pyx_v_cscRowInd), ((int *)__pyx_v_cscColPtr), ((cusparseAction_t)__pyx_v_copyValues), ((cusparseIndexBase_t)__pyx_v_idxBase));

  /* "cupy/cuda/cusparse.pyx":1021
 *         <int *>cscRowInd, <int *>cscColPtr, <Action>copyValues,
 *         <IndexBase>idxBase)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef scsr2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1010
 *     check_status(status)
 * 
 * cpdef zcsr2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrVal,
 *         size_t csrRowPtr, size_t csrColInd, size_t cscVal,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_89zcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_88zcsr2csc[] = "zcsr2csc(size_t handle, int m, int n, int nnz, size_t csrVal, size_t csrRowPtr, size_t csrColInd, size_t cscVal, size_t cscRowInd, size_t cscColPtr, int copyValues, int idxBase)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_89zcsr2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_csrVal;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  size_t __pyx_v_cscVal;
  size_t __pyx_v_cscRowInd;
  size_t __pyx_v_cscColPtr;
  int __pyx_v_copyValues;
  int __pyx_v_idxBase;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsr2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_csrVal,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,&__pyx_n_s_cscVal,&__pyx_n_s_cscRowInd,&__pyx_n_s_cscColPtr,&__pyx_n_s_copyValues,&__pyx_n_s_idxBase,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 1); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 2); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 3); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 4); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 5); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 6); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 7); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 8); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 9); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_copyValues)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 10); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_idxBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, 11); __PYX_ERR(0, 1010, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsr2csc") < 0)) __PYX_ERR(0, 1010, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
    __pyx_v_csrVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1012, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1012, __pyx_L3_error)
    __pyx_v_cscVal = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1012, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L3_error)
    __pyx_v_copyValues = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_copyValues == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L3_error)
    __pyx_v_idxBase = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_idxBase == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1013, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsr2csc", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1010, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_88zcsr2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_88zcsr2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrVal, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_cscVal, size_t __pyx_v_cscRowInd, size_t __pyx_v_cscColPtr, int __pyx_v_copyValues, int __pyx_v_idxBase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsr2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrVal, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_cscVal, __pyx_v_cscRowInd, __pyx_v_cscColPtr, __pyx_v_copyValues, __pyx_v_idxBase, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1023
 *     check_status(status)
 * 
 * cpdef scsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_91scsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2dense", 0);

  /* "cupy/cuda/cusparse.pyx":1027
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsr2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1028
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsr2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const float *>csrSortedValA, <const int *>csrSortedRowPtrA,
 */
  __pyx_v_status = cusparseScsr2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((float *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":1032
 *         <const float *>csrSortedValA, <const int *>csrSortedRowPtrA,
 *         <const int *>csrSortedColIndA, <float *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef dcsr2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1023
 *     check_status(status)
 * 
 * cpdef scsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_91scsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_90scsr2dense[] = "scsr2dense(size_t handle, int m, int n, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_91scsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsr2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 1); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 2); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 3); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 4); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 5); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 6); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 7); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, 8); __PYX_ERR(0, 1023, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsr2dense") < 0)) __PYX_ERR(0, 1023, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1024, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1024, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1024, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1024, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1026, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1026, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1026, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsr2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1023, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_90scsr2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_90scsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsr2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1023, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1034
 *     check_status(status)
 * 
 * cpdef dcsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_93dcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2dense", 0);

  /* "cupy/cuda/cusparse.pyx":1038
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsr2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1038, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1039
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsr2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const double *>csrSortedValA, <const int *>csrSortedRowPtrA,
 */
  __pyx_v_status = cusparseDcsr2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((double *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":1043
 *         <const double *>csrSortedValA, <const int *>csrSortedRowPtrA,
 *         <const int *>csrSortedColIndA, <double *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsr2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1034
 *     check_status(status)
 * 
 * cpdef dcsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_93dcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_92dcsr2dense[] = "dcsr2dense(size_t handle, int m, int n, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_93dcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsr2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 1); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 2); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 3); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 4); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 5); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 6); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 7); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, 8); __PYX_ERR(0, 1034, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsr2dense") < 0)) __PYX_ERR(0, 1034, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1035, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsr2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1034, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_92dcsr2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_92dcsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsr2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1045
 *     check_status(status)
 * 
 * cpdef ccsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_95ccsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2dense", 0);

  /* "cupy/cuda/cusparse.pyx":1049
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsr2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1050
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsr2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA,
 */
  __pyx_v_status = cusparseCcsr2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuComplex *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":1054
 *         <const cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA,
 *         <const int *>csrSortedColIndA, <cuComplex *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsr2dense(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1045
 *     check_status(status)
 * 
 * cpdef ccsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_95ccsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_94ccsr2dense[] = "ccsr2dense(size_t handle, int m, int n, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_95ccsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsr2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 1); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 2); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 3); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 4); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 5); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 6); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 7); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, 8); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsr2dense") < 0)) __PYX_ERR(0, 1045, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1046, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1046, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1046, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1046, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1048, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsr2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1045, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_94ccsr2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_94ccsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsr2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1056
 *     check_status(status)
 * 
 * cpdef zcsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_97zcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2dense(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2dense", 0);

  /* "cupy/cuda/cusparse.pyx":1060
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsr2dense(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1061
 *         size_t csrSortedColIndA, size_t A, int lda):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsr2dense(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA,
 */
  __pyx_v_status = cusparseZcsr2dense(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_csrSortedValA), ((int const *)__pyx_v_csrSortedRowPtrA), ((int const *)__pyx_v_csrSortedColIndA), ((cuDoubleComplex *)__pyx_v_A), __pyx_v_lda);

  /* "cupy/cuda/cusparse.pyx":1065
 *         <const cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA,
 *         <const int *>csrSortedColIndA, <cuDoubleComplex *>A, lda)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef snnz_compress(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1056
 *     check_status(status)
 * 
 * cpdef zcsr2dense(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t csrSortedValA, size_t csrSortedRowPtrA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_97zcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_96zcsr2dense[] = "zcsr2dense(size_t handle, int m, int n, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t A, int lda)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_97zcsr2dense(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrSortedValA;
  size_t __pyx_v_csrSortedRowPtrA;
  size_t __pyx_v_csrSortedColIndA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsr2dense (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_csrSortedValA,&__pyx_n_s_csrSortedRowPtrA,&__pyx_n_s_csrSortedColIndA,&__pyx_n_s_A,&__pyx_n_s_lda,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 1); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 2); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 3); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 4); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 5); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrSortedColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 6); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 7); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, 8); __PYX_ERR(0, 1056, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsr2dense") < 0)) __PYX_ERR(0, 1056, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L3_error)
    __pyx_v_csrSortedValA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrSortedValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1058, __pyx_L3_error)
    __pyx_v_csrSortedRowPtrA = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrSortedRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1058, __pyx_L3_error)
    __pyx_v_csrSortedColIndA = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrSortedColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1059, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1059, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1059, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsr2dense", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1056, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_96zcsr2dense(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_96zcsr2dense(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_csrSortedValA, size_t __pyx_v_csrSortedRowPtrA, size_t __pyx_v_csrSortedColIndA, size_t __pyx_v_A, int __pyx_v_lda) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2dense", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsr2dense(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_csrSortedValA, __pyx_v_csrSortedRowPtrA, __pyx_v_csrSortedColIndA, __pyx_v_A, __pyx_v_lda, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1056, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2dense", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1067
 *     check_status(status)
 * 
 * cpdef snnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_99snnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_snnz_compress(size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, float __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_v_nnz_total;
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("snnz_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1072
 *         float tol):
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseSnnz_compress(
 *         <Handle>handle, m, <const MatDescr>descr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1073
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseSnnz_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, <const MatDescr>descr,
 *         <const float *>values, <const int *>rowPtr, <int *>nnzPerRow,
 */
  __pyx_v_status = cusparseSnnz_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, ((cusparseMatDescr_t const )__pyx_v_descr), ((float const *)__pyx_v_values), ((int const *)__pyx_v_rowPtr), ((int *)__pyx_v_nnzPerRow), (&__pyx_v_nnz_total), __pyx_v_tol);

  /* "cupy/cuda/cusparse.pyx":1077
 *         <const float *>values, <const int *>rowPtr, <int *>nnzPerRow,
 *         &nnz_total, tol)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return nnz_total
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1078
 *         &nnz_total, tol)
 *     check_status(status)
 *     return nnz_total             # <<<<<<<<<<<<<<
 * 
 * cpdef dnnz_compress(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nnz_total); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1067
 *     check_status(status)
 * 
 * cpdef snnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_99snnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_98snnz_compress[] = "snnz_compress(size_t handle, int m, size_t descr, size_t values, size_t rowPtr, size_t nnzPerRow, float tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_99snnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  size_t __pyx_v_descr;
  size_t __pyx_v_values;
  size_t __pyx_v_rowPtr;
  size_t __pyx_v_nnzPerRow;
  float __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("snnz_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_descr,&__pyx_n_s_values,&__pyx_n_s_rowPtr,&__pyx_n_s_nnzPerRow,&__pyx_n_s_tol,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 1); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 2); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_values)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 3); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 4); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 5); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, 6); __PYX_ERR(0, 1067, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "snnz_compress") < 0)) __PYX_ERR(0, 1067, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1068, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1068, __pyx_L3_error)
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1068, __pyx_L3_error)
    __pyx_v_values = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_values == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1069, __pyx_L3_error)
    __pyx_v_rowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_rowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1069, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1069, __pyx_L3_error)
    __pyx_v_tol = __pyx_PyFloat_AsFloat(values[6]); if (unlikely((__pyx_v_tol == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1070, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("snnz_compress", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1067, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_98snnz_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_98snnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, float __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("snnz_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_snnz_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1080
 *     return nnz_total
 * 
 * cpdef dnnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_101dnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dnnz_compress(size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, double __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_v_nnz_total;
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dnnz_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1085
 *         double tol):
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDnnz_compress(
 *         <Handle>handle, m, <const MatDescr>descr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1086
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDnnz_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, <const MatDescr>descr,
 *         <const double *>values, <const int *>rowPtr, <int *>nnzPerRow,
 */
  __pyx_v_status = cusparseDnnz_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, ((cusparseMatDescr_t const )__pyx_v_descr), ((double const *)__pyx_v_values), ((int const *)__pyx_v_rowPtr), ((int *)__pyx_v_nnzPerRow), (&__pyx_v_nnz_total), __pyx_v_tol);

  /* "cupy/cuda/cusparse.pyx":1090
 *         <const double *>values, <const int *>rowPtr, <int *>nnzPerRow,
 *         &nnz_total, tol)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return nnz_total
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1091
 *         &nnz_total, tol)
 *     check_status(status)
 *     return nnz_total             # <<<<<<<<<<<<<<
 * 
 * cpdef cnnz_compress(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nnz_total); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1080
 *     return nnz_total
 * 
 * cpdef dnnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_101dnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_100dnnz_compress[] = "dnnz_compress(size_t handle, int m, size_t descr, size_t values, size_t rowPtr, size_t nnzPerRow, double tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_101dnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  size_t __pyx_v_descr;
  size_t __pyx_v_values;
  size_t __pyx_v_rowPtr;
  size_t __pyx_v_nnzPerRow;
  double __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dnnz_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_descr,&__pyx_n_s_values,&__pyx_n_s_rowPtr,&__pyx_n_s_nnzPerRow,&__pyx_n_s_tol,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 1); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 2); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_values)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 3); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 4); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 5); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, 6); __PYX_ERR(0, 1080, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dnnz_compress") < 0)) __PYX_ERR(0, 1080, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L3_error)
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L3_error)
    __pyx_v_values = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_values == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L3_error)
    __pyx_v_rowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_rowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L3_error)
    __pyx_v_tol = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_tol == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1083, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dnnz_compress", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1080, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_100dnnz_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_100dnnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, double __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dnnz_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dnnz_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1093
 *     return nnz_total
 * 
 * cpdef cnnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_103cnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cnnz_compress(size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_v_nnz_total;
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cnnz_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1098
 *         complex tol):
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCnnz_compress(
 *         <Handle>handle, m, <const MatDescr>descr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1099
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCnnz_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, <const MatDescr>descr,
 *         <const cuComplex *>values, <const int *>rowPtr, <int *>nnzPerRow,
 */
  __pyx_v_status = cusparseCnnz_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, ((cusparseMatDescr_t const )__pyx_v_descr), ((cuComplex const *)__pyx_v_values), ((int const *)__pyx_v_rowPtr), ((int *)__pyx_v_nnzPerRow), (&__pyx_v_nnz_total), __pyx_f_4cupy_4cuda_8cusparse_complex_to_cuda(__pyx_v_tol));

  /* "cupy/cuda/cusparse.pyx":1103
 *         <const cuComplex *>values, <const int *>rowPtr, <int *>nnzPerRow,
 *         &nnz_total, complex_to_cuda(tol))
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return nnz_total
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1104
 *         &nnz_total, complex_to_cuda(tol))
 *     check_status(status)
 *     return nnz_total             # <<<<<<<<<<<<<<
 * 
 * cpdef znnz_compress(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nnz_total); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1093
 *     return nnz_total
 * 
 * cpdef cnnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_103cnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_102cnnz_compress[] = "cnnz_compress(size_t handle, int m, size_t descr, size_t values, size_t rowPtr, size_t nnzPerRow, double complex tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_103cnnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  size_t __pyx_v_descr;
  size_t __pyx_v_values;
  size_t __pyx_v_rowPtr;
  size_t __pyx_v_nnzPerRow;
  __pyx_t_double_complex __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cnnz_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_descr,&__pyx_n_s_values,&__pyx_n_s_rowPtr,&__pyx_n_s_nnzPerRow,&__pyx_n_s_tol,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 1); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 2); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_values)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 3); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 4); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 5); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, 6); __PYX_ERR(0, 1093, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cnnz_compress") < 0)) __PYX_ERR(0, 1093, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
    __pyx_v_values = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_values == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1095, __pyx_L3_error)
    __pyx_v_rowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_rowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1095, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1095, __pyx_L3_error)
    __pyx_v_tol = __Pyx_PyComplex_As___pyx_t_double_complex(values[6]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1096, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cnnz_compress", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1093, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_102cnnz_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_102cnnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cnnz_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_cnnz_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1106
 *     return nnz_total
 * 
 * cpdef znnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_105znnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_znnz_compress(size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  int __pyx_v_nnz_total;
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("znnz_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1111
 *         double complex tol):
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZnnz_compress(
 *         <Handle>handle, m, <const MatDescr>descr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1112
 *     cdef int nnz_total
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZnnz_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, <const MatDescr>descr,
 *         <const cuDoubleComplex *>values, <const int *>rowPtr, <int *>nnzPerRow,
 */
  __pyx_v_status = cusparseZnnz_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, ((cusparseMatDescr_t const )__pyx_v_descr), ((cuDoubleComplex const *)__pyx_v_values), ((int const *)__pyx_v_rowPtr), ((int *)__pyx_v_nnzPerRow), (&__pyx_v_nnz_total), __pyx_f_4cupy_4cuda_8cusparse_double_complex_to_cuda(__pyx_v_tol));

  /* "cupy/cuda/cusparse.pyx":1116
 *         <const cuDoubleComplex *>values, <const int *>rowPtr, <int *>nnzPerRow,
 *         &nnz_total, double_complex_to_cuda(tol))
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return nnz_total
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1117
 *         &nnz_total, double_complex_to_cuda(tol))
 *     check_status(status)
 *     return nnz_total             # <<<<<<<<<<<<<<
 * 
 * cpdef scsr2csr_compress(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_nnz_total); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1106
 *     return nnz_total
 * 
 * cpdef znnz_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, size_t descr,
 *         size_t values, size_t rowPtr, size_t nnzPerRow,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_105znnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_104znnz_compress[] = "znnz_compress(size_t handle, int m, size_t descr, size_t values, size_t rowPtr, size_t nnzPerRow, double complex tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_105znnz_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  size_t __pyx_v_descr;
  size_t __pyx_v_values;
  size_t __pyx_v_rowPtr;
  size_t __pyx_v_nnzPerRow;
  __pyx_t_double_complex __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("znnz_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_descr,&__pyx_n_s_values,&__pyx_n_s_rowPtr,&__pyx_n_s_nnzPerRow,&__pyx_n_s_tol,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 1); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 2); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_values)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 3); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 4); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 5); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, 6); __PYX_ERR(0, 1106, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "znnz_compress") < 0)) __PYX_ERR(0, 1106, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
    __pyx_v_descr = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_descr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
    __pyx_v_values = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_values == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L3_error)
    __pyx_v_rowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_rowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L3_error)
    __pyx_v_tol = __Pyx_PyComplex_As___pyx_t_double_complex(values[6]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1109, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("znnz_compress", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1106, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_104znnz_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_104znnz_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, size_t __pyx_v_descr, size_t __pyx_v_values, size_t __pyx_v_rowPtr, size_t __pyx_v_nnzPerRow, __pyx_t_double_complex __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("znnz_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_znnz_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_descr, __pyx_v_values, __pyx_v_rowPtr, __pyx_v_nnzPerRow, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1119
 *     return nnz_total
 * 
 * cpdef scsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_107scsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_scsr2csr_compress(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2csr_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1124
 *         int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd,
 *         size_t outRowPtr, float tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseScsr2csr_compress(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1125
 *         size_t outRowPtr, float tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseScsr2csr_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const float *>inVal, <const int *>inColInd, <const int *>inRowPtr,
 */
  __pyx_v_status = cusparseScsr2csr_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_inVal), ((int const *)__pyx_v_inColInd), ((int const *)__pyx_v_inRowPtr), __pyx_v_inNnz, ((int *)__pyx_v_nnzPerRow), ((float *)__pyx_v_outVal), ((int *)__pyx_v_outColInd), ((int *)__pyx_v_outRowPtr), __pyx_v_tol);

  /* "cupy/cuda/cusparse.pyx":1130
 *         inNnz, <int *>nnzPerRow, <float *>outVal, <int *>outColInd,
 *         <int *>outRowPtr, tol)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1119
 *     return nnz_total
 * 
 * cpdef scsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_107scsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_106scsr2csr_compress[] = "scsr2csr_compress(size_t handle, int m, int n, size_t descrA, size_t inVal, size_t inColInd, size_t inRowPtr, int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd, size_t outRowPtr, float tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_107scsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_inVal;
  size_t __pyx_v_inColInd;
  size_t __pyx_v_inRowPtr;
  int __pyx_v_inNnz;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_outVal;
  size_t __pyx_v_outColInd;
  size_t __pyx_v_outRowPtr;
  float __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scsr2csr_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_inVal,&__pyx_n_s_inColInd,&__pyx_n_s_inRowPtr,&__pyx_n_s_inNnz,&__pyx_n_s_nnzPerRow,&__pyx_n_s_outVal,&__pyx_n_s_outColInd,&__pyx_n_s_outRowPtr,&__pyx_n_s_tol,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 1); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 2); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 3); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 4); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 5); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 6); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inNnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 7); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 8); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 9); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 10); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 11); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, 12); __PYX_ERR(0, 1119, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scsr2csr_compress") < 0)) __PYX_ERR(0, 1119, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
    __pyx_v_inVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_inVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1121, __pyx_L3_error)
    __pyx_v_inColInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_inColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1121, __pyx_L3_error)
    __pyx_v_inRowPtr = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_inRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1121, __pyx_L3_error)
    __pyx_v_inNnz = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_inNnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L3_error)
    __pyx_v_outVal = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_outVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L3_error)
    __pyx_v_outColInd = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_outColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1122, __pyx_L3_error)
    __pyx_v_outRowPtr = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_outRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
    __pyx_v_tol = __pyx_PyFloat_AsFloat(values[12]); if (unlikely((__pyx_v_tol == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1123, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scsr2csr_compress", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1119, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_106scsr2csr_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_106scsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("scsr2csr_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_scsr2csr_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.scsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1133
 * 
 * 
 * cpdef dcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_109dcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dcsr2csr_compress(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2csr_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1138
 *         int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd,
 *         size_t outRowPtr, float tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDcsr2csr_compress(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1139
 *         size_t outRowPtr, float tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const double *>inVal, <const int *>inColInd, <const int *>inRowPtr,
 */
  __pyx_v_status = cusparseDcsr2csr_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_inVal), ((int const *)__pyx_v_inColInd), ((int const *)__pyx_v_inRowPtr), __pyx_v_inNnz, ((int *)__pyx_v_nnzPerRow), ((double *)__pyx_v_outVal), ((int *)__pyx_v_outColInd), ((int *)__pyx_v_outRowPtr), __pyx_v_tol);

  /* "cupy/cuda/cusparse.pyx":1144
 *         inNnz, <int *>nnzPerRow, <double *>outVal, <int *>outColInd,
 *         <int *>outRowPtr, tol)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef ccsr2csr_compress(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1133
 * 
 * 
 * cpdef dcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_109dcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_108dcsr2csr_compress[] = "dcsr2csr_compress(size_t handle, int m, int n, size_t descrA, size_t inVal, size_t inColInd, size_t inRowPtr, int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd, size_t outRowPtr, float tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_109dcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_inVal;
  size_t __pyx_v_inColInd;
  size_t __pyx_v_inRowPtr;
  int __pyx_v_inNnz;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_outVal;
  size_t __pyx_v_outColInd;
  size_t __pyx_v_outRowPtr;
  float __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dcsr2csr_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_inVal,&__pyx_n_s_inColInd,&__pyx_n_s_inRowPtr,&__pyx_n_s_inNnz,&__pyx_n_s_nnzPerRow,&__pyx_n_s_outVal,&__pyx_n_s_outColInd,&__pyx_n_s_outRowPtr,&__pyx_n_s_tol,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 1); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 2); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 3); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 4); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 5); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 6); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inNnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 7); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 8); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 9); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 10); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 11); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, 12); __PYX_ERR(0, 1133, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dcsr2csr_compress") < 0)) __PYX_ERR(0, 1133, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1134, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1134, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1134, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1134, __pyx_L3_error)
    __pyx_v_inVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_inVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1135, __pyx_L3_error)
    __pyx_v_inColInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_inColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1135, __pyx_L3_error)
    __pyx_v_inRowPtr = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_inRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1135, __pyx_L3_error)
    __pyx_v_inNnz = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_inNnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1136, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1136, __pyx_L3_error)
    __pyx_v_outVal = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_outVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1136, __pyx_L3_error)
    __pyx_v_outColInd = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_outColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1136, __pyx_L3_error)
    __pyx_v_outRowPtr = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_outRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
    __pyx_v_tol = __pyx_PyFloat_AsFloat(values[12]); if (unlikely((__pyx_v_tol == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dcsr2csr_compress", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1133, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_108dcsr2csr_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_108dcsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, float __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dcsr2csr_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dcsr2csr_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1146
 *     check_status(status)
 * 
 * cpdef ccsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_111ccsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ccsr2csr_compress(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2csr_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1151
 *         int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd,
 *         size_t outRowPtr, complex tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCcsr2csr_compress(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1152
 *         size_t outRowPtr, complex tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuComplex *>inVal, <const int *>inColInd, <const int *>inRowPtr,
 */
  __pyx_v_status = cusparseCcsr2csr_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_inVal), ((int const *)__pyx_v_inColInd), ((int const *)__pyx_v_inRowPtr), __pyx_v_inNnz, ((int *)__pyx_v_nnzPerRow), ((cuComplex *)__pyx_v_outVal), ((int *)__pyx_v_outColInd), ((int *)__pyx_v_outRowPtr), __pyx_f_4cupy_4cuda_8cusparse_complex_to_cuda(__pyx_v_tol));

  /* "cupy/cuda/cusparse.pyx":1157
 *         inNnz, <int *>nnzPerRow, <cuComplex *>outVal, <int *>outColInd,
 *         <int *>outRowPtr, complex_to_cuda(tol))
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zcsr2csr_compress(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1146
 *     check_status(status)
 * 
 * cpdef ccsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_111ccsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_110ccsr2csr_compress[] = "ccsr2csr_compress(size_t handle, int m, int n, size_t descrA, size_t inVal, size_t inColInd, size_t inRowPtr, int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd, size_t outRowPtr, double complex tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_111ccsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_inVal;
  size_t __pyx_v_inColInd;
  size_t __pyx_v_inRowPtr;
  int __pyx_v_inNnz;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_outVal;
  size_t __pyx_v_outColInd;
  size_t __pyx_v_outRowPtr;
  __pyx_t_double_complex __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ccsr2csr_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_inVal,&__pyx_n_s_inColInd,&__pyx_n_s_inRowPtr,&__pyx_n_s_inNnz,&__pyx_n_s_nnzPerRow,&__pyx_n_s_outVal,&__pyx_n_s_outColInd,&__pyx_n_s_outRowPtr,&__pyx_n_s_tol,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 1); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 2); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 3); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 4); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 5); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 6); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inNnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 7); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 8); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 9); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 10); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 11); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, 12); __PYX_ERR(0, 1146, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ccsr2csr_compress") < 0)) __PYX_ERR(0, 1146, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1147, __pyx_L3_error)
    __pyx_v_inVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_inVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L3_error)
    __pyx_v_inColInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_inColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L3_error)
    __pyx_v_inRowPtr = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_inRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L3_error)
    __pyx_v_inNnz = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_inNnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1149, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1149, __pyx_L3_error)
    __pyx_v_outVal = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_outVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1149, __pyx_L3_error)
    __pyx_v_outColInd = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_outColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1149, __pyx_L3_error)
    __pyx_v_outRowPtr = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_outRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1150, __pyx_L3_error)
    __pyx_v_tol = __Pyx_PyComplex_As___pyx_t_double_complex(values[12]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1150, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ccsr2csr_compress", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1146, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_110ccsr2csr_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_110ccsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ccsr2csr_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ccsr2csr_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ccsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1159
 *     check_status(status)
 * 
 * cpdef zcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_113zcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zcsr2csr_compress(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2csr_compress", 0);

  /* "cupy/cuda/cusparse.pyx":1164
 *         int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd,
 *         size_t outRowPtr, double complex tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZcsr2csr_compress(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1165
 *         size_t outRowPtr, double complex tol):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuDoubleComplex *>inVal, <const int *>inColInd,
 */
  __pyx_v_status = cusparseZcsr2csr_compress(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_inVal), ((int const *)__pyx_v_inColInd), ((int const *)__pyx_v_inRowPtr), __pyx_v_inNnz, ((int *)__pyx_v_nnzPerRow), ((cuDoubleComplex *)__pyx_v_outVal), ((int *)__pyx_v_outColInd), ((int *)__pyx_v_outRowPtr), __pyx_f_4cupy_4cuda_8cusparse_double_complex_to_cuda(__pyx_v_tol));

  /* "cupy/cuda/cusparse.pyx":1171
 *         inNnz, <int *>nnzPerRow, <cuDoubleComplex *>outVal, <int *>outColInd,
 *         <int *>outRowPtr, double_complex_to_cuda(tol))
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef sdense2csc(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1159
 *     check_status(status)
 * 
 * cpdef zcsr2csr_compress(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t inVal, size_t inColInd, size_t inRowPtr,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_113zcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_112zcsr2csr_compress[] = "zcsr2csr_compress(size_t handle, int m, int n, size_t descrA, size_t inVal, size_t inColInd, size_t inRowPtr, int inNnz, size_t nnzPerRow, size_t outVal, size_t outColInd, size_t outRowPtr, double complex tol)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_113zcsr2csr_compress(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_inVal;
  size_t __pyx_v_inColInd;
  size_t __pyx_v_inRowPtr;
  int __pyx_v_inNnz;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_outVal;
  size_t __pyx_v_outColInd;
  size_t __pyx_v_outRowPtr;
  __pyx_t_double_complex __pyx_v_tol;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zcsr2csr_compress (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_inVal,&__pyx_n_s_inColInd,&__pyx_n_s_inRowPtr,&__pyx_n_s_inNnz,&__pyx_n_s_nnzPerRow,&__pyx_n_s_outVal,&__pyx_n_s_outColInd,&__pyx_n_s_outRowPtr,&__pyx_n_s_tol,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 1); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 2); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 3); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 4); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 5); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 6); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inNnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 7); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 8); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outVal)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 9); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 10); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_outRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 11); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, 12); __PYX_ERR(0, 1159, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zcsr2csr_compress") < 0)) __PYX_ERR(0, 1159, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
    __pyx_v_inVal = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_inVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1161, __pyx_L3_error)
    __pyx_v_inColInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_inColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1161, __pyx_L3_error)
    __pyx_v_inRowPtr = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_inRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1161, __pyx_L3_error)
    __pyx_v_inNnz = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_inNnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1162, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1162, __pyx_L3_error)
    __pyx_v_outVal = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_outVal == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1162, __pyx_L3_error)
    __pyx_v_outColInd = __Pyx_PyInt_As_size_t(values[10]); if (unlikely((__pyx_v_outColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1162, __pyx_L3_error)
    __pyx_v_outRowPtr = __Pyx_PyInt_As_size_t(values[11]); if (unlikely((__pyx_v_outRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1163, __pyx_L3_error)
    __pyx_v_tol = __Pyx_PyComplex_As___pyx_t_double_complex(values[12]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1163, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zcsr2csr_compress", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1159, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_112zcsr2csr_compress(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_112zcsr2csr_compress(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_inVal, size_t __pyx_v_inColInd, size_t __pyx_v_inRowPtr, int __pyx_v_inNnz, size_t __pyx_v_nnzPerRow, size_t __pyx_v_outVal, size_t __pyx_v_outColInd, size_t __pyx_v_outRowPtr, __pyx_t_double_complex __pyx_v_tol) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zcsr2csr_compress", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zcsr2csr_compress(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_inVal, __pyx_v_inColInd, __pyx_v_inRowPtr, __pyx_v_inNnz, __pyx_v_nnzPerRow, __pyx_v_outVal, __pyx_v_outColInd, __pyx_v_outRowPtr, __pyx_v_tol, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zcsr2csr_compress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1173
 *     check_status(status)
 * 
 * cpdef sdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_115sdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sdense2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sdense2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1177
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseSdense2csc(
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const float *>A,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1178
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseSdense2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const float *>A,
 *         lda, <const int *>nnzPerCol, <float *>cscValA, <int *>cscRowIndA,
 */
  __pyx_v_status = cusparseSdense2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((float const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerCol), ((float *)__pyx_v_cscValA), ((int *)__pyx_v_cscRowIndA), ((int *)__pyx_v_cscColPtrA));

  /* "cupy/cuda/cusparse.pyx":1182
 *         lda, <const int *>nnzPerCol, <float *>cscValA, <int *>cscRowIndA,
 *         <int *>cscColPtrA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1173
 *     check_status(status)
 * 
 * cpdef sdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_115sdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_114sdense2csc[] = "sdense2csc(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA, size_t cscColPtrA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_115sdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerCol;
  size_t __pyx_v_cscValA;
  size_t __pyx_v_cscRowIndA;
  size_t __pyx_v_cscColPtrA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sdense2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerCol,&__pyx_n_s_cscValA,&__pyx_n_s_cscRowIndA,&__pyx_n_s_cscColPtrA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 1); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 2); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 3); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 4); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 5); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerCol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 6); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 7); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 8); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, 9); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sdense2csc") < 0)) __PYX_ERR(0, 1173, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1175, __pyx_L3_error)
    __pyx_v_nnzPerCol = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerCol == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1175, __pyx_L3_error)
    __pyx_v_cscValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1175, __pyx_L3_error)
    __pyx_v_cscRowIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1175, __pyx_L3_error)
    __pyx_v_cscColPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1176, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sdense2csc", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1173, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_114sdense2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_114sdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sdense2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_sdense2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1185
 * 
 * 
 * cpdef ddense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_117ddense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ddense2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ddense2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1189
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDdense2csc(
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const double *>A,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1190
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDdense2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const double *>A,
 *         lda, <const int *>nnzPerCol, <double *>cscValA, <int *>cscRowIndA,
 */
  __pyx_v_status = cusparseDdense2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((double const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerCol), ((double *)__pyx_v_cscValA), ((int *)__pyx_v_cscRowIndA), ((int *)__pyx_v_cscColPtrA));

  /* "cupy/cuda/cusparse.pyx":1194
 *         lda, <const int *>nnzPerCol, <double *>cscValA, <int *>cscRowIndA,
 *         <int *>cscColPtrA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef cdense2csc(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1185
 * 
 * 
 * cpdef ddense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_117ddense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_116ddense2csc[] = "ddense2csc(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA, size_t cscColPtrA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_117ddense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerCol;
  size_t __pyx_v_cscValA;
  size_t __pyx_v_cscRowIndA;
  size_t __pyx_v_cscColPtrA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ddense2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerCol,&__pyx_n_s_cscValA,&__pyx_n_s_cscRowIndA,&__pyx_n_s_cscColPtrA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 1); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 2); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 3); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 4); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 5); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerCol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 6); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 7); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 8); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, 9); __PYX_ERR(0, 1185, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ddense2csc") < 0)) __PYX_ERR(0, 1185, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
    __pyx_v_nnzPerCol = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerCol == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
    __pyx_v_cscValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
    __pyx_v_cscRowIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
    __pyx_v_cscColPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1188, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ddense2csc", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1185, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_116ddense2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_116ddense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ddense2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ddense2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1196
 *     check_status(status)
 * 
 * cpdef cdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_119cdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cdense2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdense2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1200
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCdense2csc(
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const cuComplex *>A,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1201
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCdense2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <const MatDescr>descrA, <const cuComplex *>A,
 *         lda, <const int *>nnzPerCol, <cuComplex *>cscValA, <int *>cscRowIndA,
 */
  __pyx_v_status = cusparseCdense2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((cuComplex const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerCol), ((cuComplex *)__pyx_v_cscValA), ((int *)__pyx_v_cscRowIndA), ((int *)__pyx_v_cscColPtrA));

  /* "cupy/cuda/cusparse.pyx":1205
 *         lda, <const int *>nnzPerCol, <cuComplex *>cscValA, <int *>cscRowIndA,
 *         <int *>cscColPtrA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zdense2csc(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1196
 *     check_status(status)
 * 
 * cpdef cdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_119cdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_118cdense2csc[] = "cdense2csc(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA, size_t cscColPtrA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_119cdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerCol;
  size_t __pyx_v_cscValA;
  size_t __pyx_v_cscRowIndA;
  size_t __pyx_v_cscColPtrA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cdense2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerCol,&__pyx_n_s_cscValA,&__pyx_n_s_cscRowIndA,&__pyx_n_s_cscColPtrA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 1); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 2); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 3); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 4); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 5); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerCol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 6); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 7); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 8); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, 9); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cdense2csc") < 0)) __PYX_ERR(0, 1196, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_nnzPerCol = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerCol == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_cscValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_cscRowIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_cscColPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1199, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cdense2csc", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1196, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_118cdense2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_118cdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdense2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_cdense2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1207
 *     check_status(status)
 * 
 * cpdef zdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_121zdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zdense2csc(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zdense2csc", 0);

  /* "cupy/cuda/cusparse.pyx":1211
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZdense2csc(
 *         <Handle>handle, m, n,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1212
 *         size_t cscColPtrA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZdense2csc(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n,
 *         <const MatDescr>descrA, <const cuDoubleComplex *>A,
 */
  __pyx_v_status = cusparseZdense2csc(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerCol), ((cuDoubleComplex *)__pyx_v_cscValA), ((int *)__pyx_v_cscRowIndA), ((int *)__pyx_v_cscColPtrA));

  /* "cupy/cuda/cusparse.pyx":1218
 *         <cuDoubleComplex *>cscValA, <int *>cscRowIndA,
 *         <int *>cscColPtrA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef sdense2csr(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1207
 *     check_status(status)
 * 
 * cpdef zdense2csc(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA, size_t A,
 *         int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_121zdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_120zdense2csc[] = "zdense2csc(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerCol, size_t cscValA, size_t cscRowIndA, size_t cscColPtrA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_121zdense2csc(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerCol;
  size_t __pyx_v_cscValA;
  size_t __pyx_v_cscRowIndA;
  size_t __pyx_v_cscColPtrA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zdense2csc (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerCol,&__pyx_n_s_cscValA,&__pyx_n_s_cscRowIndA,&__pyx_n_s_cscColPtrA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 1); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 2); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 3); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 4); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 5); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerCol)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 6); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 7); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 8); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, 9); __PYX_ERR(0, 1207, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zdense2csc") < 0)) __PYX_ERR(0, 1207, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1208, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1208, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1208, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1208, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1208, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1209, __pyx_L3_error)
    __pyx_v_nnzPerCol = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerCol == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1209, __pyx_L3_error)
    __pyx_v_cscValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_cscValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1209, __pyx_L3_error)
    __pyx_v_cscRowIndA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_cscRowIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1209, __pyx_L3_error)
    __pyx_v_cscColPtrA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_cscColPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1210, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zdense2csc", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1207, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_120zdense2csc(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_120zdense2csc(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerCol, size_t __pyx_v_cscValA, size_t __pyx_v_cscRowIndA, size_t __pyx_v_cscColPtrA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zdense2csc", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zdense2csc(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerCol, __pyx_v_cscValA, __pyx_v_cscRowIndA, __pyx_v_cscColPtrA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1220
 *     check_status(status)
 * 
 * cpdef sdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_123sdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_sdense2csr(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sdense2csr", 0);

  /* "cupy/cuda/cusparse.pyx":1224
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseSdense2csr(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1225
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseSdense2csr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const float *>A, lda, <const int *>nnzPerRow, <float *>csrValA,
 */
  __pyx_v_status = cusparseSdense2csr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((float const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerRow), ((float *)__pyx_v_csrValA), ((int *)__pyx_v_csrRowPtrA), ((int *)__pyx_v_csrColIndA));

  /* "cupy/cuda/cusparse.pyx":1229
 *         <const float *>A, lda, <const int *>nnzPerRow, <float *>csrValA,
 *         <int *>csrRowPtrA, <int *>csrColIndA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1220
 *     check_status(status)
 * 
 * cpdef sdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_123sdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_122sdense2csr[] = "sdense2csr(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_123sdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sdense2csr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRow,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 1); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 2); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 3); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 4); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 5); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 6); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 7); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 8); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, 9); __PYX_ERR(0, 1220, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "sdense2csr") < 0)) __PYX_ERR(0, 1220, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1221, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1221, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1221, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1221, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1222, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1222, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1222, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1222, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1223, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1223, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("sdense2csr", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1220, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_122sdense2csr(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_122sdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("sdense2csr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_sdense2csr(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.sdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1232
 * 
 * 
 * cpdef ddense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_125ddense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_ddense2csr(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ddense2csr", 0);

  /* "cupy/cuda/cusparse.pyx":1236
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDdense2csr(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1237
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDdense2csr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const double *>A, lda, <const int *>nnzPerRow, <double *>csrValA,
 */
  __pyx_v_status = cusparseDdense2csr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((double const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerRow), ((double *)__pyx_v_csrValA), ((int *)__pyx_v_csrRowPtrA), ((int *)__pyx_v_csrColIndA));

  /* "cupy/cuda/cusparse.pyx":1241
 *         <const double *>A, lda, <const int *>nnzPerRow, <double *>csrValA,
 *         <int *>csrRowPtrA, <int *>csrColIndA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef cdense2csr(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1232
 * 
 * 
 * cpdef ddense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_125ddense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_124ddense2csr[] = "ddense2csr(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_125ddense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ddense2csr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRow,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 1); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 2); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 3); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 4); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 5); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 6); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 7); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 8); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, 9); __PYX_ERR(0, 1232, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "ddense2csr") < 0)) __PYX_ERR(0, 1232, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1233, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1233, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1233, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1233, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1235, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1235, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ddense2csr", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1232, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_124ddense2csr(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_124ddense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("ddense2csr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_ddense2csr(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.ddense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1243
 *     check_status(status)
 * 
 * cpdef cdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_127cdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cdense2csr(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdense2csr", 0);

  /* "cupy/cuda/cusparse.pyx":1247
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCdense2csr(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1248
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCdense2csr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuComplex *>A, lda, <const int *>nnzPerRow,
 */
  __pyx_v_status = cusparseCdense2csr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuComplex const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerRow), ((cuComplex *)__pyx_v_csrValA), ((int *)__pyx_v_csrRowPtrA), ((int *)__pyx_v_csrColIndA));

  /* "cupy/cuda/cusparse.pyx":1252
 *         <const cuComplex *>A, lda, <const int *>nnzPerRow,
 *         <cuComplex *>csrValA, <int *>csrRowPtrA, <int *>csrColIndA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef zdense2csr(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1243
 *     check_status(status)
 * 
 * cpdef cdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_127cdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_126cdense2csr[] = "cdense2csr(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_127cdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cdense2csr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRow,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 1); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 2); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 3); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 4); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 5); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 6); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 7); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 8); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, 9); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cdense2csr") < 0)) __PYX_ERR(0, 1243, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1245, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1245, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1245, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1245, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1246, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1246, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cdense2csr", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1243, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_126cdense2csr(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_126cdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cdense2csr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_cdense2csr(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1254
 *     check_status(status)
 * 
 * cpdef zdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_129zdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_zdense2csr(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zdense2csr", 0);

  /* "cupy/cuda/cusparse.pyx":1258
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZdense2csr(
 *         <Handle>handle, m, n, <MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1259
 *         size_t csrRowPtrA, size_t csrColIndA):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZdense2csr(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, <MatDescr>descrA,
 *         <const cuDoubleComplex *>A, lda, <const int *>nnzPerRow,
 */
  __pyx_v_status = cusparseZdense2csr(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t)__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_A), __pyx_v_lda, ((int const *)__pyx_v_nnzPerRow), ((cuDoubleComplex *)__pyx_v_csrValA), ((int *)__pyx_v_csrRowPtrA), ((int *)__pyx_v_csrColIndA));

  /* "cupy/cuda/cusparse.pyx":1263
 *         <const cuDoubleComplex *>A, lda, <const int *>nnzPerRow,
 *         <cuDoubleComplex *>csrValA, <int *>csrRowPtrA, <int *>csrColIndA)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef snnz(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1254
 *     check_status(status)
 * 
 * cpdef zdense2csr(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRow, size_t csrValA,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_129zdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_128zdense2csr[] = "zdense2csr(size_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrValA, size_t csrRowPtrA, size_t csrColIndA)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_129zdense2csr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRow;
  size_t __pyx_v_csrValA;
  size_t __pyx_v_csrRowPtrA;
  size_t __pyx_v_csrColIndA;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("zdense2csr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRow,&__pyx_n_s_csrValA,&__pyx_n_s_csrRowPtrA,&__pyx_n_s_csrColIndA,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 1); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 2); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 3); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 4); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 5); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRow)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 6); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrValA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 7); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 8); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColIndA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, 9); __PYX_ERR(0, 1254, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "zdense2csr") < 0)) __PYX_ERR(0, 1254, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[3]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L3_error)
    __pyx_v_nnzPerRow = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_nnzPerRow == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L3_error)
    __pyx_v_csrValA = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_csrValA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L3_error)
    __pyx_v_csrRowPtrA = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_csrRowPtrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1257, __pyx_L3_error)
    __pyx_v_csrColIndA = __Pyx_PyInt_As_size_t(values[9]); if (unlikely((__pyx_v_csrColIndA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1257, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("zdense2csr", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1254, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_128zdense2csr(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_128zdense2csr(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRow, size_t __pyx_v_csrValA, size_t __pyx_v_csrRowPtrA, size_t __pyx_v_csrColIndA) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("zdense2csr", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_zdense2csr(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRow, __pyx_v_csrValA, __pyx_v_csrRowPtrA, __pyx_v_csrColIndA, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.zdense2csr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1265
 *     check_status(status)
 * 
 * cpdef snnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_131snnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_snnz(size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("snnz", 0);

  /* "cupy/cuda/cusparse.pyx":1268
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseSnnz(
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1269
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseSnnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 *         <const float *>A, lda, <int *>nnzPerRowColumn,
 */
  __pyx_v_status = cusparseSnnz(((cusparseHandle_t)__pyx_v_handle), ((cusparseDirection_t)__pyx_v_dirA), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((float const *)__pyx_v_A), __pyx_v_lda, ((int *)__pyx_v_nnzPerRowColumn), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":1273
 *         <const float *>A, lda, <int *>nnzPerRowColumn,
 *         <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1265
 *     check_status(status)
 * 
 * cpdef snnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_131snnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_130snnz[] = "snnz(size_t handle, int dirA, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_131snnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_dirA;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRowColumn;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("snnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_dirA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRowColumn,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dirA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 1); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 2); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 3); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 4); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 5); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 6); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRowColumn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 7); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, 8); __PYX_ERR(0, 1265, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "snnz") < 0)) __PYX_ERR(0, 1265, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
    __pyx_v_dirA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_dirA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
    __pyx_v_nnzPerRowColumn = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_nnzPerRowColumn == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("snnz", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1265, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_130snnz(__pyx_self, __pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_130snnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("snnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_snnz(__pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.snnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1276
 * 
 * 
 * cpdef dnnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_133dnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_dnnz(size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dnnz", 0);

  /* "cupy/cuda/cusparse.pyx":1279
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseDnnz(
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1280
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseDnnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 *         <const double *>A, lda, <int *>nnzPerRowColumn,
 */
  __pyx_v_status = cusparseDnnz(((cusparseHandle_t)__pyx_v_handle), ((cusparseDirection_t)__pyx_v_dirA), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((double const *)__pyx_v_A), __pyx_v_lda, ((int *)__pyx_v_nnzPerRowColumn), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":1284
 *         <const double *>A, lda, <int *>nnzPerRowColumn,
 *         <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef cnnz(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1276
 * 
 * 
 * cpdef dnnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_133dnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_132dnnz[] = "dnnz(size_t handle, int dirA, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_133dnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_dirA;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRowColumn;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dnnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_dirA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRowColumn,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dirA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 1); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 2); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 3); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 4); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 5); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 6); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRowColumn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 7); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, 8); __PYX_ERR(0, 1276, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dnnz") < 0)) __PYX_ERR(0, 1276, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1277, __pyx_L3_error)
    __pyx_v_dirA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_dirA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1277, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1277, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1277, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1277, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1278, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1278, __pyx_L3_error)
    __pyx_v_nnzPerRowColumn = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_nnzPerRowColumn == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1278, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1278, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dnnz", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1276, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_132dnnz(__pyx_self, __pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_132dnnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dnnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_dnnz(__pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.dnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1286
 *     check_status(status)
 * 
 * cpdef cnnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_135cnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_cnnz(size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cnnz", 0);

  /* "cupy/cuda/cusparse.pyx":1289
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCnnz(
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1290
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCnnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 *         <const cuComplex *>A, lda, <int *>nnzPerRowColumn,
 */
  __pyx_v_status = cusparseCnnz(((cusparseHandle_t)__pyx_v_handle), ((cusparseDirection_t)__pyx_v_dirA), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((cuComplex const *)__pyx_v_A), __pyx_v_lda, ((int *)__pyx_v_nnzPerRowColumn), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":1294
 *         <const cuComplex *>A, lda, <int *>nnzPerRowColumn,
 *         <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef znnz(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1286
 *     check_status(status)
 * 
 * cpdef cnnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_135cnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_134cnnz[] = "cnnz(size_t handle, int dirA, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_135cnnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_dirA;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRowColumn;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cnnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_dirA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRowColumn,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dirA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 1); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 2); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 3); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 4); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 5); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 6); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRowColumn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 7); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, 8); __PYX_ERR(0, 1286, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "cnnz") < 0)) __PYX_ERR(0, 1286, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L3_error)
    __pyx_v_dirA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_dirA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1287, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L3_error)
    __pyx_v_nnzPerRowColumn = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_nnzPerRowColumn == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1288, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cnnz", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1286, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_134cnnz(__pyx_self, __pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_134cnnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("cnnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_cnnz(__pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.cnnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1296
 *     check_status(status)
 * 
 * cpdef znnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_137znnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_znnz(size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("znnz", 0);

  /* "cupy/cuda/cusparse.pyx":1299
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseZnnz(
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1300
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseZnnz(             # <<<<<<<<<<<<<<
 *         <Handle>handle, <Direction>dirA, m, n, <const MatDescr>descrA,
 *         <const cuDoubleComplex *>A, lda, <int *>nnzPerRowColumn,
 */
  __pyx_v_status = cusparseZnnz(((cusparseHandle_t)__pyx_v_handle), ((cusparseDirection_t)__pyx_v_dirA), __pyx_v_m, __pyx_v_n, ((cusparseMatDescr_t const )__pyx_v_descrA), ((cuDoubleComplex const *)__pyx_v_A), __pyx_v_lda, ((int *)__pyx_v_nnzPerRowColumn), ((int *)__pyx_v_nnzTotalDevHostPtr));

  /* "cupy/cuda/cusparse.pyx":1304
 *         <const cuDoubleComplex *>A, lda, <int *>nnzPerRowColumn,
 *         <int *>nnzTotalDevHostPtr)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * cpdef createIdentityPermutation(
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1296
 *     check_status(status)
 * 
 * cpdef znnz(             # <<<<<<<<<<<<<<
 *         size_t handle, int dirA, int m, int n, size_t descrA,
 *         size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_137znnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_136znnz[] = "znnz(size_t handle, int dirA, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRowColumn, size_t nnzTotalDevHostPtr)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_137znnz(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_dirA;
  int __pyx_v_m;
  int __pyx_v_n;
  size_t __pyx_v_descrA;
  size_t __pyx_v_A;
  int __pyx_v_lda;
  size_t __pyx_v_nnzPerRowColumn;
  size_t __pyx_v_nnzTotalDevHostPtr;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("znnz (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_dirA,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_descrA,&__pyx_n_s_A,&__pyx_n_s_lda,&__pyx_n_s_nnzPerRowColumn,&__pyx_n_s_nnzTotalDevHostPtr,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dirA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 1); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 2); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 3); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 4); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 5); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lda)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 6); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzPerRowColumn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 7); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnzTotalDevHostPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, 8); __PYX_ERR(0, 1296, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "znnz") < 0)) __PYX_ERR(0, 1296, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
    __pyx_v_dirA = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_dirA == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1297, __pyx_L3_error)
    __pyx_v_A = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_A == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
    __pyx_v_lda = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_lda == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
    __pyx_v_nnzPerRowColumn = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_nnzPerRowColumn == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
    __pyx_v_nnzTotalDevHostPtr = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_nnzTotalDevHostPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("znnz", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1296, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_136znnz(__pyx_self, __pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_136znnz(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_dirA, int __pyx_v_m, int __pyx_v_n, size_t __pyx_v_descrA, size_t __pyx_v_A, int __pyx_v_lda, size_t __pyx_v_nnzPerRowColumn, size_t __pyx_v_nnzTotalDevHostPtr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("znnz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_znnz(__pyx_v_handle, __pyx_v_dirA, __pyx_v_m, __pyx_v_n, __pyx_v_descrA, __pyx_v_A, __pyx_v_lda, __pyx_v_nnzPerRowColumn, __pyx_v_nnzTotalDevHostPtr, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.znnz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1306
 *     check_status(status)
 * 
 * cpdef createIdentityPermutation(             # <<<<<<<<<<<<<<
 *         size_t handle, int n, size_t p):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_139createIdentityPermutation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_createIdentityPermutation(size_t __pyx_v_handle, int __pyx_v_n, size_t __pyx_v_p, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("createIdentityPermutation", 0);

  /* "cupy/cuda/cusparse.pyx":1308
 * cpdef createIdentityPermutation(
 *         size_t handle, int n, size_t p):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseCreateIdentityPermutation(
 *         <Handle>handle, n, <int *>p)
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1309
 *         size_t handle, int n, size_t p):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseCreateIdentityPermutation(             # <<<<<<<<<<<<<<
 *         <Handle>handle, n, <int *>p)
 *     check_status(status)
 */
  __pyx_v_status = cusparseCreateIdentityPermutation(((cusparseHandle_t)__pyx_v_handle), __pyx_v_n, ((int *)__pyx_v_p));

  /* "cupy/cuda/cusparse.pyx":1311
 *     status = cusparseCreateIdentityPermutation(
 *         <Handle>handle, n, <int *>p)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1306
 *     check_status(status)
 * 
 * cpdef createIdentityPermutation(             # <<<<<<<<<<<<<<
 *         size_t handle, int n, size_t p):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.createIdentityPermutation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_139createIdentityPermutation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_138createIdentityPermutation[] = "createIdentityPermutation(size_t handle, int n, size_t p)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_139createIdentityPermutation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_n;
  size_t __pyx_v_p;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("createIdentityPermutation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_n,&__pyx_n_s_p,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("createIdentityPermutation", 1, 3, 3, 1); __PYX_ERR(0, 1306, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("createIdentityPermutation", 1, 3, 3, 2); __PYX_ERR(0, 1306, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "createIdentityPermutation") < 0)) __PYX_ERR(0, 1306, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1307, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1307, __pyx_L3_error)
    __pyx_v_p = __Pyx_PyInt_As_size_t(values[2]); if (unlikely((__pyx_v_p == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1307, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("createIdentityPermutation", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1306, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.createIdentityPermutation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_138createIdentityPermutation(__pyx_self, __pyx_v_handle, __pyx_v_n, __pyx_v_p);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_138createIdentityPermutation(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_n, size_t __pyx_v_p) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("createIdentityPermutation", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_createIdentityPermutation(__pyx_v_handle, __pyx_v_n, __pyx_v_p, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.createIdentityPermutation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1314
 * 
 * 
 * cpdef size_t xcoosort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cooRows,
 *         size_t cooCols):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_141xcoosort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcoosort_bufferSizeExt(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols, CYTHON_UNUSED int __pyx_skip_dispatch) {
  size_t __pyx_v_bufferSizeInBytes;
  cusparseStatus_t __pyx_v_status;
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoosort_bufferSizeExt", 0);

  /* "cupy/cuda/cusparse.pyx":1318
 *         size_t cooCols):
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcoosort_bufferSizeExt(
 *         <Handle>handle, m, n, nnz, <const int *>cooRows,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1319
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcoosort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const int *>cooRows,
 *         <const int *>cooCols, &bufferSizeInBytes)
 */
  __pyx_v_status = cusparseXcoosort_bufferSizeExt(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((int const *)__pyx_v_cooRows), ((int const *)__pyx_v_cooCols), (&__pyx_v_bufferSizeInBytes));

  /* "cupy/cuda/cusparse.pyx":1322
 *         <Handle>handle, m, n, nnz, <const int *>cooRows,
 *         <const int *>cooCols, &bufferSizeInBytes)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return bufferSizeInBytes
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1323
 *         <const int *>cooCols, &bufferSizeInBytes)
 *     check_status(status)
 *     return bufferSizeInBytes             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_bufferSizeInBytes;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1314
 * 
 * 
 * cpdef size_t xcoosort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cooRows,
 *         size_t cooCols):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("cupy.cuda.cusparse.xcoosort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_141xcoosort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_140xcoosort_bufferSizeExt[] = "xcoosort_bufferSizeExt(size_t handle, int m, int n, int nnz, size_t cooRows, size_t cooCols) -> size_t";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_141xcoosort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_cooRows;
  size_t __pyx_v_cooCols;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcoosort_bufferSizeExt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_cooRows,&__pyx_n_s_cooCols,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, 1); __PYX_ERR(0, 1314, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, 2); __PYX_ERR(0, 1314, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, 3); __PYX_ERR(0, 1314, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooRows)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, 4); __PYX_ERR(0, 1314, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooCols)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, 5); __PYX_ERR(0, 1314, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcoosort_bufferSizeExt") < 0)) __PYX_ERR(0, 1314, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    __pyx_v_cooRows = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cooRows == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1315, __pyx_L3_error)
    __pyx_v_cooCols = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cooCols == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1316, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcoosort_bufferSizeExt", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1314, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoosort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_140xcoosort_bufferSizeExt(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cooRows, __pyx_v_cooCols);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_140xcoosort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoosort_bufferSizeExt", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_f_4cupy_4cuda_8cusparse_xcoosort_bufferSizeExt(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cooRows, __pyx_v_cooCols, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoosort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1326
 * 
 * 
 * cpdef xcoosortByRow(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cooRows, size_t cooCols,
 *         size_t P, size_t pBuffer):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_143xcoosortByRow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcoosortByRow(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols, size_t __pyx_v_P, size_t __pyx_v_pBuffer, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoosortByRow", 0);

  /* "cupy/cuda/cusparse.pyx":1329
 *         size_t handle, int m, int n, int nnz, size_t cooRows, size_t cooCols,
 *         size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcoosortByRow(
 *         <Handle>handle, m, n, nnz, <int *>cooRows, <int *>cooCols,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1330
 *         size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcoosortByRow(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <int *>cooRows, <int *>cooCols,
 *         <int *>P, <void *>pBuffer)
 */
  __pyx_v_status = cusparseXcoosortByRow(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((int *)__pyx_v_cooRows), ((int *)__pyx_v_cooCols), ((int *)__pyx_v_P), ((void *)__pyx_v_pBuffer));

  /* "cupy/cuda/cusparse.pyx":1333
 *         <Handle>handle, m, n, nnz, <int *>cooRows, <int *>cooCols,
 *         <int *>P, <void *>pBuffer)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1326
 * 
 * 
 * cpdef xcoosortByRow(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cooRows, size_t cooCols,
 *         size_t P, size_t pBuffer):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoosortByRow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_143xcoosortByRow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_142xcoosortByRow[] = "xcoosortByRow(size_t handle, int m, int n, int nnz, size_t cooRows, size_t cooCols, size_t P, size_t pBuffer)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_143xcoosortByRow(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_cooRows;
  size_t __pyx_v_cooCols;
  size_t __pyx_v_P;
  size_t __pyx_v_pBuffer;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcoosortByRow (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_cooRows,&__pyx_n_s_cooCols,&__pyx_n_s_P,&__pyx_n_s_pBuffer,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 1); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 2); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 3); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooRows)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 4); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cooCols)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 5); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_P)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 6); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pBuffer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, 7); __PYX_ERR(0, 1326, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcoosortByRow") < 0)) __PYX_ERR(0, 1326, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_cooRows = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cooRows == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_cooCols = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cooCols == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1327, __pyx_L3_error)
    __pyx_v_P = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_P == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1328, __pyx_L3_error)
    __pyx_v_pBuffer = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_pBuffer == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1328, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcoosortByRow", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1326, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoosortByRow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_142xcoosortByRow(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cooRows, __pyx_v_cooCols, __pyx_v_P, __pyx_v_pBuffer);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_142xcoosortByRow(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cooRows, size_t __pyx_v_cooCols, size_t __pyx_v_P, size_t __pyx_v_pBuffer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcoosortByRow", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcoosortByRow(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cooRows, __pyx_v_cooCols, __pyx_v_P, __pyx_v_pBuffer, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1326, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcoosortByRow", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1336
 * 
 * 
 * cpdef size_t xcsrsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrRowPtr,
 *         size_t csrColInd):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_145xcsrsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcsrsort_bufferSizeExt(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, CYTHON_UNUSED int __pyx_skip_dispatch) {
  size_t __pyx_v_bufferSizeInBytes;
  cusparseStatus_t __pyx_v_status;
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrsort_bufferSizeExt", 0);

  /* "cupy/cuda/cusparse.pyx":1340
 *         size_t csrColInd):
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcsrsort_bufferSizeExt(
 *         <Handle>handle, m, n, nnz, <const int *>csrRowPtr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1341
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcsrsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const int *>csrRowPtr,
 *         <const int *>csrColInd, &bufferSizeInBytes)
 */
  __pyx_v_status = cusparseXcsrsort_bufferSizeExt(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((int const *)__pyx_v_csrRowPtr), ((int const *)__pyx_v_csrColInd), (&__pyx_v_bufferSizeInBytes));

  /* "cupy/cuda/cusparse.pyx":1344
 *         <Handle>handle, m, n, nnz, <const int *>csrRowPtr,
 *         <const int *>csrColInd, &bufferSizeInBytes)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return bufferSizeInBytes
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1345
 *         <const int *>csrColInd, &bufferSizeInBytes)
 *     check_status(status)
 *     return bufferSizeInBytes             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_bufferSizeInBytes;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1336
 * 
 * 
 * cpdef size_t xcsrsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t csrRowPtr,
 *         size_t csrColInd):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("cupy.cuda.cusparse.xcsrsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_145xcsrsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_144xcsrsort_bufferSizeExt[] = "xcsrsort_bufferSizeExt(size_t handle, int m, int n, int nnz, size_t csrRowPtr, size_t csrColInd) -> size_t";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_145xcsrsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcsrsort_bufferSizeExt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, 1); __PYX_ERR(0, 1336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, 2); __PYX_ERR(0, 1336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, 3); __PYX_ERR(0, 1336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, 4); __PYX_ERR(0, 1336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, 5); __PYX_ERR(0, 1336, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcsrsort_bufferSizeExt") < 0)) __PYX_ERR(0, 1336, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1337, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1337, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1337, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1337, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1337, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1338, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcsrsort_bufferSizeExt", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1336, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_144xcsrsort_bufferSizeExt(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrRowPtr, __pyx_v_csrColInd);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_144xcsrsort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrsort_bufferSizeExt", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_f_4cupy_4cuda_8cusparse_xcsrsort_bufferSizeExt(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_csrRowPtr, __pyx_v_csrColInd, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1348
 * 
 * 
 * cpdef xcsrsort(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t csrRowPtr, size_t csrColInd, size_t P, size_t pBuffer):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_147xcsrsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcsrsort(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrsort", 0);

  /* "cupy/cuda/cusparse.pyx":1351
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t csrRowPtr, size_t csrColInd, size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcsrsort(
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1352
 *         size_t csrRowPtr, size_t csrColInd, size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcsrsort(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 *         <const int *>csrRowPtr, <int *>csrColInd, <int *>P, <void *>pBuffer)
 */
  __pyx_v_status = cusparseXcsrsort(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cusparseMatDescr_t const )__pyx_v_descrA), ((int const *)__pyx_v_csrRowPtr), ((int *)__pyx_v_csrColInd), ((int *)__pyx_v_P), ((void *)__pyx_v_pBuffer));

  /* "cupy/cuda/cusparse.pyx":1355
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 *         <const int *>csrRowPtr, <int *>csrColInd, <int *>P, <void *>pBuffer)
 *     check_status(status)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1348
 * 
 * 
 * cpdef xcsrsort(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t csrRowPtr, size_t csrColInd, size_t P, size_t pBuffer):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_147xcsrsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_146xcsrsort[] = "xcsrsort(size_t handle, int m, int n, int nnz, size_t descrA, size_t csrRowPtr, size_t csrColInd, size_t P, size_t pBuffer)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_147xcsrsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_descrA;
  size_t __pyx_v_csrRowPtr;
  size_t __pyx_v_csrColInd;
  size_t __pyx_v_P;
  size_t __pyx_v_pBuffer;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcsrsort (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_descrA,&__pyx_n_s_csrRowPtr,&__pyx_n_s_csrColInd,&__pyx_n_s_P,&__pyx_n_s_pBuffer,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 1); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 2); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 3); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 4); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrRowPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 5); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_csrColInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 6); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_P)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 7); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pBuffer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, 8); __PYX_ERR(0, 1348, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcsrsort") < 0)) __PYX_ERR(0, 1348, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L3_error)
    __pyx_v_csrRowPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_csrRowPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1350, __pyx_L3_error)
    __pyx_v_csrColInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_csrColInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1350, __pyx_L3_error)
    __pyx_v_P = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_P == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1350, __pyx_L3_error)
    __pyx_v_pBuffer = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_pBuffer == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1350, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcsrsort", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1348, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_146xcsrsort(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_descrA, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_P, __pyx_v_pBuffer);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_146xcsrsort(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_csrRowPtr, size_t __pyx_v_csrColInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcsrsort", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcsrsort(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_descrA, __pyx_v_csrRowPtr, __pyx_v_csrColInd, __pyx_v_P, __pyx_v_pBuffer, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcsrsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1358
 * 
 * 
 * cpdef size_t xcscsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cscColPtr,
 *         size_t cscRowInd):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_149xcscsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static size_t __pyx_f_4cupy_4cuda_8cusparse_xcscsort_bufferSizeExt(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd, CYTHON_UNUSED int __pyx_skip_dispatch) {
  size_t __pyx_v_bufferSizeInBytes;
  cusparseStatus_t __pyx_v_status;
  size_t __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcscsort_bufferSizeExt", 0);

  /* "cupy/cuda/cusparse.pyx":1362
 *         size_t cscRowInd):
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcscsort_bufferSizeExt(
 *         <Handle>handle, m, n, nnz, <const int *>cscColPtr,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1363
 *     cdef size_t bufferSizeInBytes
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcscsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const int *>cscColPtr,
 *         <const int *>cscRowInd, &bufferSizeInBytes)
 */
  __pyx_v_status = cusparseXcscsort_bufferSizeExt(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((int const *)__pyx_v_cscColPtr), ((int const *)__pyx_v_cscRowInd), (&__pyx_v_bufferSizeInBytes));

  /* "cupy/cuda/cusparse.pyx":1366
 *         <Handle>handle, m, n, nnz, <const int *>cscColPtr,
 *         <const int *>cscRowInd, &bufferSizeInBytes)
 *     check_status(status)             # <<<<<<<<<<<<<<
 *     return bufferSizeInBytes
 * 
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1367
 *         <const int *>cscRowInd, &bufferSizeInBytes)
 *     check_status(status)
 *     return bufferSizeInBytes             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_bufferSizeInBytes;
  goto __pyx_L0;

  /* "cupy/cuda/cusparse.pyx":1358
 * 
 * 
 * cpdef size_t xcscsort_bufferSizeExt(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t cscColPtr,
 *         size_t cscRowInd):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_WriteUnraisable("cupy.cuda.cusparse.xcscsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_149xcscsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_148xcscsort_bufferSizeExt[] = "xcscsort_bufferSizeExt(size_t handle, int m, int n, int nnz, size_t cscColPtr, size_t cscRowInd) -> size_t";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_149xcscsort_bufferSizeExt(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_cscColPtr;
  size_t __pyx_v_cscRowInd;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcscsort_bufferSizeExt (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_cscColPtr,&__pyx_n_s_cscRowInd,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, 1); __PYX_ERR(0, 1358, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, 2); __PYX_ERR(0, 1358, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, 3); __PYX_ERR(0, 1358, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, 4); __PYX_ERR(0, 1358, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, 5); __PYX_ERR(0, 1358, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcscsort_bufferSizeExt") < 0)) __PYX_ERR(0, 1358, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1360, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcscsort_bufferSizeExt", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1358, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcscsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_148xcscsort_bufferSizeExt(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cscColPtr, __pyx_v_cscRowInd);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_148xcscsort_bufferSizeExt(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcscsort_bufferSizeExt", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_f_4cupy_4cuda_8cusparse_xcscsort_bufferSizeExt(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_cscColPtr, __pyx_v_cscRowInd, 0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcscsort_bufferSizeExt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cupy/cuda/cusparse.pyx":1370
 * 
 * 
 * cpdef xcscsort(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t cscColPtr, size_t cscRowInd, size_t P, size_t pBuffer):
 */

static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_151xcscsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_4cupy_4cuda_8cusparse_xcscsort(size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer, CYTHON_UNUSED int __pyx_skip_dispatch) {
  cusparseStatus_t __pyx_v_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcscsort", 0);

  /* "cupy/cuda/cusparse.pyx":1373
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t cscColPtr, size_t cscRowInd, size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())             # <<<<<<<<<<<<<<
 *     status = cusparseXcscsort(
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_setStream(__pyx_v_handle, __pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr(), 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1374
 *         size_t cscColPtr, size_t cscRowInd, size_t P, size_t pBuffer):
 *     setStream(handle, stream_module.get_current_stream_ptr())
 *     status = cusparseXcscsort(             # <<<<<<<<<<<<<<
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 *         <const int *>cscColPtr, <int *>cscRowInd, <int *>P, <void *>pBuffer)
 */
  __pyx_v_status = cusparseXcscsort(((cusparseHandle_t)__pyx_v_handle), __pyx_v_m, __pyx_v_n, __pyx_v_nnz, ((cusparseMatDescr_t const )__pyx_v_descrA), ((int const *)__pyx_v_cscColPtr), ((int *)__pyx_v_cscRowInd), ((int *)__pyx_v_P), ((void *)__pyx_v_pBuffer));

  /* "cupy/cuda/cusparse.pyx":1377
 *         <Handle>handle, m, n, nnz, <const MatDescr>descrA,
 *         <const int *>cscColPtr, <int *>cscRowInd, <int *>P, <void *>pBuffer)
 *     check_status(status)             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_check_status(__pyx_v_status, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1370
 * 
 * 
 * cpdef xcscsort(             # <<<<<<<<<<<<<<
 *         size_t handle, int m, int n, int nnz, size_t descrA,
 *         size_t cscColPtr, size_t cscRowInd, size_t P, size_t pBuffer):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcscsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_151xcscsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4cupy_4cuda_8cusparse_150xcscsort[] = "xcscsort(size_t handle, int m, int n, int nnz, size_t descrA, size_t cscColPtr, size_t cscRowInd, size_t P, size_t pBuffer)";
static PyObject *__pyx_pw_4cupy_4cuda_8cusparse_151xcscsort(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  size_t __pyx_v_handle;
  int __pyx_v_m;
  int __pyx_v_n;
  int __pyx_v_nnz;
  size_t __pyx_v_descrA;
  size_t __pyx_v_cscColPtr;
  size_t __pyx_v_cscRowInd;
  size_t __pyx_v_P;
  size_t __pyx_v_pBuffer;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xcscsort (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_m,&__pyx_n_s_n,&__pyx_n_s_nnz,&__pyx_n_s_descrA,&__pyx_n_s_cscColPtr,&__pyx_n_s_cscRowInd,&__pyx_n_s_P,&__pyx_n_s_pBuffer,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_handle)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 1); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 2); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nnz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 3); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_descrA)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 4); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscColPtr)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 5); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_cscRowInd)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 6); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_P)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 7); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pBuffer)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, 8); __PYX_ERR(0, 1370, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xcscsort") < 0)) __PYX_ERR(0, 1370, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_handle = __Pyx_PyInt_As_size_t(values[0]); if (unlikely((__pyx_v_handle == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L3_error)
    __pyx_v_nnz = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_nnz == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L3_error)
    __pyx_v_descrA = __Pyx_PyInt_As_size_t(values[4]); if (unlikely((__pyx_v_descrA == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1371, __pyx_L3_error)
    __pyx_v_cscColPtr = __Pyx_PyInt_As_size_t(values[5]); if (unlikely((__pyx_v_cscColPtr == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1372, __pyx_L3_error)
    __pyx_v_cscRowInd = __Pyx_PyInt_As_size_t(values[6]); if (unlikely((__pyx_v_cscRowInd == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1372, __pyx_L3_error)
    __pyx_v_P = __Pyx_PyInt_As_size_t(values[7]); if (unlikely((__pyx_v_P == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1372, __pyx_L3_error)
    __pyx_v_pBuffer = __Pyx_PyInt_As_size_t(values[8]); if (unlikely((__pyx_v_pBuffer == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1372, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xcscsort", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1370, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcscsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4cupy_4cuda_8cusparse_150xcscsort(__pyx_self, __pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_descrA, __pyx_v_cscColPtr, __pyx_v_cscRowInd, __pyx_v_P, __pyx_v_pBuffer);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4cupy_4cuda_8cusparse_150xcscsort(CYTHON_UNUSED PyObject *__pyx_self, size_t __pyx_v_handle, int __pyx_v_m, int __pyx_v_n, int __pyx_v_nnz, size_t __pyx_v_descrA, size_t __pyx_v_cscColPtr, size_t __pyx_v_cscRowInd, size_t __pyx_v_P, size_t __pyx_v_pBuffer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("xcscsort", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4cupy_4cuda_8cusparse_xcscsort(__pyx_v_handle, __pyx_v_m, __pyx_v_n, __pyx_v_nnz, __pyx_v_descrA, __pyx_v_cscColPtr, __pyx_v_cscRowInd, __pyx_v_P, __pyx_v_pBuffer, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cupy.cuda.cusparse.xcscsort", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {"check_status", (PyCFunction)__pyx_pw_4cupy_4cuda_8cusparse_1check_status, METH_O, __pyx_doc_4cupy_4cuda_8cusparse_check_status},
  {"create", (PyCFunction)__pyx_pw_4cupy_4cuda_8cusparse_3create, METH_NOARGS, __pyx_doc_4cupy_4cuda_8cusparse_2create},
  {"createMatDescr", (PyCFunction)__pyx_pw_4cupy_4cuda_8cusparse_5createMatDescr, METH_NOARGS, __pyx_doc_4cupy_4cuda_8cusparse_4createMatDescr},
  {"destroy", (PyCFunction)__pyx_pw_4cupy_4cuda_8cusparse_7destroy, METH_O, __pyx_doc_4cupy_4cuda_8cusparse_6destroy},
  {"destroyMatDescr", (PyCFunction)__pyx_pw_4cupy_4cuda_8cusparse_9destroyMatDescr, METH_O, __pyx_doc_4cupy_4cuda_8cusparse_8destroyMatDescr},
  {"setMatIndexBase", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_11setMatIndexBase, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_10setMatIndexBase},
  {"setMatType", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_13setMatType, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_12setMatType},
  {"setPointerMode", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_15setPointerMode, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_14setPointerMode},
  {"setStream", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_17setStream, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_16setStream},
  {"sgthr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_19sgthr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_18sgthr},
  {"dgthr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_21dgthr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_20dgthr},
  {"cgthr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_23cgthr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_22cgthr},
  {"zgthr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_25zgthr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_24zgthr},
  {"scsrmv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_27scsrmv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_26scsrmv},
  {"dcsrmv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_29dcsrmv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_28dcsrmv},
  {"ccsrmv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_31ccsrmv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_30ccsrmv},
  {"zcsrmv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_33zcsrmv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_32zcsrmv},
  {"scsrmm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_35scsrmm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_34scsrmm},
  {"dcsrmm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_37dcsrmm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_36dcsrmm},
  {"ccsrmm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_39ccsrmm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_38ccsrmm},
  {"zcsrmm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_41zcsrmm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_40zcsrmm},
  {"scsrmm2", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_43scsrmm2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_42scsrmm2},
  {"dcsrmm2", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_45dcsrmm2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_44dcsrmm2},
  {"ccsrmm2", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_47ccsrmm2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_46ccsrmm2},
  {"zcsrmm2", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_49zcsrmm2, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_48zcsrmm2},
  {"xcsrgeamNnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_51xcsrgeamNnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_50xcsrgeamNnz},
  {"scsrgeam", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_53scsrgeam, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_52scsrgeam},
  {"dcsrgeam", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_55dcsrgeam, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_54dcsrgeam},
  {"ccsrgeam", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_57ccsrgeam, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_56ccsrgeam},
  {"zcsrgeam", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_59zcsrgeam, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_58zcsrgeam},
  {"xcsrgemmNnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_61xcsrgemmNnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_60xcsrgemmNnz},
  {"scsrgemm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_63scsrgemm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_62scsrgemm},
  {"dcsrgemm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_65dcsrgemm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_64dcsrgemm},
  {"ccsrgemm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_67ccsrgemm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_66ccsrgemm},
  {"zcsrgemm", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_69zcsrgemm, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_68zcsrgemm},
  {"xcoo2csr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_71xcoo2csr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_70xcoo2csr},
  {"scsc2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_73scsc2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_72scsc2dense},
  {"dcsc2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_75dcsc2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_74dcsc2dense},
  {"ccsc2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_77ccsc2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_76ccsc2dense},
  {"zcsc2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_79zcsc2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_78zcsc2dense},
  {"xcsr2coo", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_81xcsr2coo, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_80xcsr2coo},
  {"scsr2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_83scsr2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_82scsr2csc},
  {"dcsr2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_85dcsr2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_84dcsr2csc},
  {"ccsr2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_87ccsr2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_86ccsr2csc},
  {"zcsr2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_89zcsr2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_88zcsr2csc},
  {"scsr2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_91scsr2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_90scsr2dense},
  {"dcsr2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_93dcsr2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_92dcsr2dense},
  {"ccsr2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_95ccsr2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_94ccsr2dense},
  {"zcsr2dense", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_97zcsr2dense, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_96zcsr2dense},
  {"snnz_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_99snnz_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_98snnz_compress},
  {"dnnz_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_101dnnz_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_100dnnz_compress},
  {"cnnz_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_103cnnz_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_102cnnz_compress},
  {"znnz_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_105znnz_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_104znnz_compress},
  {"scsr2csr_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_107scsr2csr_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_106scsr2csr_compress},
  {"dcsr2csr_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_109dcsr2csr_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_108dcsr2csr_compress},
  {"ccsr2csr_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_111ccsr2csr_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_110ccsr2csr_compress},
  {"zcsr2csr_compress", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_113zcsr2csr_compress, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_112zcsr2csr_compress},
  {"sdense2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_115sdense2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_114sdense2csc},
  {"ddense2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_117ddense2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_116ddense2csc},
  {"cdense2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_119cdense2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_118cdense2csc},
  {"zdense2csc", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_121zdense2csc, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_120zdense2csc},
  {"sdense2csr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_123sdense2csr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_122sdense2csr},
  {"ddense2csr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_125ddense2csr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_124ddense2csr},
  {"cdense2csr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_127cdense2csr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_126cdense2csr},
  {"zdense2csr", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_129zdense2csr, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_128zdense2csr},
  {"snnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_131snnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_130snnz},
  {"dnnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_133dnnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_132dnnz},
  {"cnnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_135cnnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_134cnnz},
  {"znnz", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_137znnz, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_136znnz},
  {"createIdentityPermutation", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_139createIdentityPermutation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_138createIdentityPermutation},
  {"xcoosort_bufferSizeExt", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_141xcoosort_bufferSizeExt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_140xcoosort_bufferSizeExt},
  {"xcoosortByRow", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_143xcoosortByRow, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_142xcoosortByRow},
  {"xcsrsort_bufferSizeExt", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_145xcsrsort_bufferSizeExt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_144xcsrsort_bufferSizeExt},
  {"xcsrsort", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_147xcsrsort, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_146xcsrsort},
  {"xcscsort_bufferSizeExt", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_149xcscsort_bufferSizeExt, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_148xcscsort_bufferSizeExt},
  {"xcscsort", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_4cupy_4cuda_8cusparse_151xcscsort, METH_VARARGS|METH_KEYWORDS, __pyx_doc_4cupy_4cuda_8cusparse_150xcscsort},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_cusparse(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_cusparse},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "cusparse",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
  {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
  {&__pyx_n_s_C, __pyx_k_C, sizeof(__pyx_k_C), 0, 0, 1, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_ALLOC_FAILED, __pyx_k_CUSPARSE_STATUS_ALLOC_FAILED, sizeof(__pyx_k_CUSPARSE_STATUS_ALLOC_FAILED), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_ARCH_MISMATCH, __pyx_k_CUSPARSE_STATUS_ARCH_MISMATCH, sizeof(__pyx_k_CUSPARSE_STATUS_ARCH_MISMATCH), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_EXECUTION_FAILED, __pyx_k_CUSPARSE_STATUS_EXECUTION_FAILED, sizeof(__pyx_k_CUSPARSE_STATUS_EXECUTION_FAILED), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_INTERNAL_ERROR, __pyx_k_CUSPARSE_STATUS_INTERNAL_ERROR, sizeof(__pyx_k_CUSPARSE_STATUS_INTERNAL_ERROR), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_INVALID_VALUE, __pyx_k_CUSPARSE_STATUS_INVALID_VALUE, sizeof(__pyx_k_CUSPARSE_STATUS_INVALID_VALUE), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_MAPPING_ERROR, __pyx_k_CUSPARSE_STATUS_MAPPING_ERROR, sizeof(__pyx_k_CUSPARSE_STATUS_MAPPING_ERROR), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_MATRIX_TYPE_NOT, __pyx_k_CUSPARSE_STATUS_MATRIX_TYPE_NOT, sizeof(__pyx_k_CUSPARSE_STATUS_MATRIX_TYPE_NOT), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_NOT_INITIALIZED, __pyx_k_CUSPARSE_STATUS_NOT_INITIALIZED, sizeof(__pyx_k_CUSPARSE_STATUS_NOT_INITIALIZED), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_SUCCESS, __pyx_k_CUSPARSE_STATUS_SUCCESS, sizeof(__pyx_k_CUSPARSE_STATUS_SUCCESS), 0, 1, 0, 1},
  {&__pyx_n_u_CUSPARSE_STATUS_ZERO_PIVOT, __pyx_k_CUSPARSE_STATUS_ZERO_PIVOT, sizeof(__pyx_k_CUSPARSE_STATUS_ZERO_PIVOT), 0, 1, 0, 1},
  {&__pyx_n_s_CuSparseError, __pyx_k_CuSparseError, sizeof(__pyx_k_CuSparseError), 0, 0, 1, 1},
  {&__pyx_n_s_CuSparseError___init, __pyx_k_CuSparseError___init, sizeof(__pyx_k_CuSparseError___init), 0, 0, 1, 1},
  {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_base, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
  {&__pyx_n_s_beta, __pyx_k_beta, sizeof(__pyx_k_beta), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_cooCols, __pyx_k_cooCols, sizeof(__pyx_k_cooCols), 0, 0, 1, 1},
  {&__pyx_n_s_cooRowInd, __pyx_k_cooRowInd, sizeof(__pyx_k_cooRowInd), 0, 0, 1, 1},
  {&__pyx_n_s_cooRows, __pyx_k_cooRows, sizeof(__pyx_k_cooRows), 0, 0, 1, 1},
  {&__pyx_n_s_copyValues, __pyx_k_copyValues, sizeof(__pyx_k_copyValues), 0, 0, 1, 1},
  {&__pyx_n_s_cscColPtr, __pyx_k_cscColPtr, sizeof(__pyx_k_cscColPtr), 0, 0, 1, 1},
  {&__pyx_n_s_cscColPtrA, __pyx_k_cscColPtrA, sizeof(__pyx_k_cscColPtrA), 0, 0, 1, 1},
  {&__pyx_n_s_cscRowInd, __pyx_k_cscRowInd, sizeof(__pyx_k_cscRowInd), 0, 0, 1, 1},
  {&__pyx_n_s_cscRowIndA, __pyx_k_cscRowIndA, sizeof(__pyx_k_cscRowIndA), 0, 0, 1, 1},
  {&__pyx_n_s_cscSortedColPtrA, __pyx_k_cscSortedColPtrA, sizeof(__pyx_k_cscSortedColPtrA), 0, 0, 1, 1},
  {&__pyx_n_s_cscSortedRowIndA, __pyx_k_cscSortedRowIndA, sizeof(__pyx_k_cscSortedRowIndA), 0, 0, 1, 1},
  {&__pyx_n_s_cscSortedValA, __pyx_k_cscSortedValA, sizeof(__pyx_k_cscSortedValA), 0, 0, 1, 1},
  {&__pyx_n_s_cscVal, __pyx_k_cscVal, sizeof(__pyx_k_cscVal), 0, 0, 1, 1},
  {&__pyx_n_s_cscValA, __pyx_k_cscValA, sizeof(__pyx_k_cscValA), 0, 0, 1, 1},
  {&__pyx_n_s_csrColInd, __pyx_k_csrColInd, sizeof(__pyx_k_csrColInd), 0, 0, 1, 1},
  {&__pyx_n_s_csrColIndA, __pyx_k_csrColIndA, sizeof(__pyx_k_csrColIndA), 0, 0, 1, 1},
  {&__pyx_n_s_csrColIndB, __pyx_k_csrColIndB, sizeof(__pyx_k_csrColIndB), 0, 0, 1, 1},
  {&__pyx_n_s_csrColIndC, __pyx_k_csrColIndC, sizeof(__pyx_k_csrColIndC), 0, 0, 1, 1},
  {&__pyx_n_s_csrRowPtr, __pyx_k_csrRowPtr, sizeof(__pyx_k_csrRowPtr), 0, 0, 1, 1},
  {&__pyx_n_s_csrRowPtrA, __pyx_k_csrRowPtrA, sizeof(__pyx_k_csrRowPtrA), 0, 0, 1, 1},
  {&__pyx_n_s_csrRowPtrB, __pyx_k_csrRowPtrB, sizeof(__pyx_k_csrRowPtrB), 0, 0, 1, 1},
  {&__pyx_n_s_csrRowPtrC, __pyx_k_csrRowPtrC, sizeof(__pyx_k_csrRowPtrC), 0, 0, 1, 1},
  {&__pyx_n_s_csrSortedColIndA, __pyx_k_csrSortedColIndA, sizeof(__pyx_k_csrSortedColIndA), 0, 0, 1, 1},
  {&__pyx_n_s_csrSortedRowPtrA, __pyx_k_csrSortedRowPtrA, sizeof(__pyx_k_csrSortedRowPtrA), 0, 0, 1, 1},
  {&__pyx_n_s_csrSortedValA, __pyx_k_csrSortedValA, sizeof(__pyx_k_csrSortedValA), 0, 0, 1, 1},
  {&__pyx_n_s_csrVal, __pyx_k_csrVal, sizeof(__pyx_k_csrVal), 0, 0, 1, 1},
  {&__pyx_n_s_csrValA, __pyx_k_csrValA, sizeof(__pyx_k_csrValA), 0, 0, 1, 1},
  {&__pyx_n_s_csrValB, __pyx_k_csrValB, sizeof(__pyx_k_csrValB), 0, 0, 1, 1},
  {&__pyx_n_s_csrValC, __pyx_k_csrValC, sizeof(__pyx_k_csrValC), 0, 0, 1, 1},
  {&__pyx_n_s_cupy_cuda_cusparse, __pyx_k_cupy_cuda_cusparse, sizeof(__pyx_k_cupy_cuda_cusparse), 0, 0, 1, 1},
  {&__pyx_kp_s_cupy_cuda_cusparse_pyx, __pyx_k_cupy_cuda_cusparse_pyx, sizeof(__pyx_k_cupy_cuda_cusparse_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_descr, __pyx_k_descr, sizeof(__pyx_k_descr), 0, 0, 1, 1},
  {&__pyx_n_s_descrA, __pyx_k_descrA, sizeof(__pyx_k_descrA), 0, 0, 1, 1},
  {&__pyx_n_s_descrB, __pyx_k_descrB, sizeof(__pyx_k_descrB), 0, 0, 1, 1},
  {&__pyx_n_s_descrC, __pyx_k_descrC, sizeof(__pyx_k_descrC), 0, 0, 1, 1},
  {&__pyx_n_s_dirA, __pyx_k_dirA, sizeof(__pyx_k_dirA), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_handle, __pyx_k_handle, sizeof(__pyx_k_handle), 0, 0, 1, 1},
  {&__pyx_n_s_idxBase, __pyx_k_idxBase, sizeof(__pyx_k_idxBase), 0, 0, 1, 1},
  {&__pyx_n_s_inColInd, __pyx_k_inColInd, sizeof(__pyx_k_inColInd), 0, 0, 1, 1},
  {&__pyx_n_s_inNnz, __pyx_k_inNnz, sizeof(__pyx_k_inNnz), 0, 0, 1, 1},
  {&__pyx_n_s_inRowPtr, __pyx_k_inRowPtr, sizeof(__pyx_k_inRowPtr), 0, 0, 1, 1},
  {&__pyx_n_s_inVal, __pyx_k_inVal, sizeof(__pyx_k_inVal), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_lda, __pyx_k_lda, sizeof(__pyx_k_lda), 0, 0, 1, 1},
  {&__pyx_n_s_ldb, __pyx_k_ldb, sizeof(__pyx_k_ldb), 0, 0, 1, 1},
  {&__pyx_n_s_ldc, __pyx_k_ldc, sizeof(__pyx_k_ldc), 0, 0, 1, 1},
  {&__pyx_n_s_m, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_mode, __pyx_k_mode, sizeof(__pyx_k_mode), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_nnz, __pyx_k_nnz, sizeof(__pyx_k_nnz), 0, 0, 1, 1},
  {&__pyx_n_s_nnzA, __pyx_k_nnzA, sizeof(__pyx_k_nnzA), 0, 0, 1, 1},
  {&__pyx_n_s_nnzB, __pyx_k_nnzB, sizeof(__pyx_k_nnzB), 0, 0, 1, 1},
  {&__pyx_n_s_nnzPerCol, __pyx_k_nnzPerCol, sizeof(__pyx_k_nnzPerCol), 0, 0, 1, 1},
  {&__pyx_n_s_nnzPerRow, __pyx_k_nnzPerRow, sizeof(__pyx_k_nnzPerRow), 0, 0, 1, 1},
  {&__pyx_n_s_nnzPerRowColumn, __pyx_k_nnzPerRowColumn, sizeof(__pyx_k_nnzPerRowColumn), 0, 0, 1, 1},
  {&__pyx_n_s_nnzTotalDevHostPtr, __pyx_k_nnzTotalDevHostPtr, sizeof(__pyx_k_nnzTotalDevHostPtr), 0, 0, 1, 1},
  {&__pyx_n_s_outColInd, __pyx_k_outColInd, sizeof(__pyx_k_outColInd), 0, 0, 1, 1},
  {&__pyx_n_s_outRowPtr, __pyx_k_outRowPtr, sizeof(__pyx_k_outRowPtr), 0, 0, 1, 1},
  {&__pyx_n_s_outVal, __pyx_k_outVal, sizeof(__pyx_k_outVal), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_pBuffer, __pyx_k_pBuffer, sizeof(__pyx_k_pBuffer), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_rowPtr, __pyx_k_rowPtr, sizeof(__pyx_k_rowPtr), 0, 0, 1, 1},
  {&__pyx_kp_u_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 1, 0, 0},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
  {&__pyx_n_s_stream, __pyx_k_stream, sizeof(__pyx_k_stream), 0, 0, 1, 1},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tol, __pyx_k_tol, sizeof(__pyx_k_tol), 0, 0, 1, 1},
  {&__pyx_n_s_transA, __pyx_k_transA, sizeof(__pyx_k_transA), 0, 0, 1, 1},
  {&__pyx_n_s_transB, __pyx_k_transB, sizeof(__pyx_k_transB), 0, 0, 1, 1},
  {&__pyx_n_s_typ, __pyx_k_typ, sizeof(__pyx_k_typ), 0, 0, 1, 1},
  {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_xInd, __pyx_k_xInd, sizeof(__pyx_k_xInd), 0, 0, 1, 1},
  {&__pyx_n_s_xVal, __pyx_k_xVal, sizeof(__pyx_k_xVal), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 431, __pyx_L1_error)
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 435, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "cupy/cuda/cusparse.pyx":431
 * 
 * 
 * class CuSparseError(RuntimeError):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, int status):
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_builtin_RuntimeError); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "cupy/cuda/cusparse.pyx":433
 * class CuSparseError(RuntimeError):
 * 
 *     def __init__(self, int status):             # <<<<<<<<<<<<<<
 *         self.status = status
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_status); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);
  __pyx_codeobj__3 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__2, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cupy_cuda_cusparse_pyx, __pyx_n_s_init, 433, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__3)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __pyx_v_4cupy_4cuda_8cusparse_STATUS = ((PyObject*)Py_None); Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("create", (void (*)(void))__pyx_f_4cupy_4cuda_8cusparse_create, "size_t (int __pyx_skip_dispatch)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ExportFunction("destroy", (void (*)(void))__pyx_f_4cupy_4cuda_8cusparse_destroy, "PyObject *(size_t, int __pyx_skip_dispatch)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("cupy.cuda.stream"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction(__pyx_t_1, "get_current_stream_ptr", (void (**)(void))&__pyx_f_4cupy_4cuda_6stream_get_current_stream_ptr, "size_t (void)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initcusparse(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initcusparse(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_cusparse(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_cusparse(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_cusparse(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'cusparse' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_cusparse(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("cusparse", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cupy__cuda__cusparse) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cupy.cuda.cusparse")) {
      if (unlikely(PyDict_SetItemString(modules, "cupy.cuda.cusparse", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  if (unlikely(__Pyx_modinit_function_export_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely(__Pyx_modinit_function_import_code() != 0)) goto __pyx_L1_error;
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "cupy/cuda/cusparse.pyx":418
 * 
 * cdef dict STATUS = {
 *     0: 'CUSPARSE_STATUS_SUCCESS',             # <<<<<<<<<<<<<<
 *     1: 'CUSPARSE_STATUS_NOT_INITIALIZED',
 *     2: 'CUSPARSE_STATUS_ALLOC_FAILED',
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_u_CUSPARSE_STATUS_SUCCESS) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_1, __pyx_n_u_CUSPARSE_STATUS_NOT_INITIALIZED) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_2, __pyx_n_u_CUSPARSE_STATUS_ALLOC_FAILED) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_3, __pyx_n_u_CUSPARSE_STATUS_INVALID_VALUE) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_4, __pyx_n_u_CUSPARSE_STATUS_ARCH_MISMATCH) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_5, __pyx_n_u_CUSPARSE_STATUS_MAPPING_ERROR) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_6, __pyx_n_u_CUSPARSE_STATUS_EXECUTION_FAILED) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_7, __pyx_n_u_CUSPARSE_STATUS_INTERNAL_ERROR) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_8, __pyx_n_u_CUSPARSE_STATUS_MATRIX_TYPE_NOT) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_9, __pyx_n_u_CUSPARSE_STATUS_ZERO_PIVOT) < 0) __PYX_ERR(0, 418, __pyx_L1_error)
  __Pyx_XGOTREF(__pyx_v_4cupy_4cuda_8cusparse_STATUS);
  __Pyx_DECREF_SET(__pyx_v_4cupy_4cuda_8cusparse_STATUS, ((PyObject*)__pyx_t_1));
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":431
 * 
 * 
 * class CuSparseError(RuntimeError):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, int status):
 */
  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple_); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple_, __pyx_n_s_CuSparseError, __pyx_n_s_CuSparseError, (PyObject *) NULL, __pyx_n_s_cupy_cuda_cusparse, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cupy/cuda/cusparse.pyx":433
 * class CuSparseError(RuntimeError):
 * 
 *     def __init__(self, int status):             # <<<<<<<<<<<<<<
 *         self.status = status
 *         super(CuSparseError, self).__init__('%s' % (STATUS[status]))
 */
  __pyx_t_3 = __Pyx_CyFunction_NewEx(&__pyx_mdef_4cupy_4cuda_8cusparse_13CuSparseError_1__init__, 0, __pyx_n_s_CuSparseError___init, NULL, __pyx_n_s_cupy_cuda_cusparse, __pyx_d, ((PyObject *)__pyx_codeobj__3)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_3) < 0) __PYX_ERR(0, 433, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cupy/cuda/cusparse.pyx":431
 * 
 * 
 * class CuSparseError(RuntimeError):             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, int status):
 */
  __pyx_t_3 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_CuSparseError, __pyx_tuple_, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CuSparseError, __pyx_t_3) < 0) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cupy/cuda/cusparse.pyx":1
 * cimport cython  # NOQA             # <<<<<<<<<<<<<<
 * 
 * from cupy.cuda cimport driver
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /*--- Wrapped vars code ---*/
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_ACTION_NUMERIC);
    if (unlikely(!wrapped)) __PYX_ERR(1, 25, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_ACTION_NUMERIC", wrapped) < 0) __PYX_ERR(1, 25, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_ACTION_SYMBOLIC);
    if (unlikely(!wrapped)) __PYX_ERR(1, 24, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_ACTION_SYMBOLIC", wrapped) < 0) __PYX_ERR(1, 24, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_DIRECTION_COLUMN);
    if (unlikely(!wrapped)) __PYX_ERR(1, 40, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_DIRECTION_COLUMN", wrapped) < 0) __PYX_ERR(1, 40, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_DIRECTION_ROW);
    if (unlikely(!wrapped)) __PYX_ERR(1, 39, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_DIRECTION_ROW", wrapped) < 0) __PYX_ERR(1, 39, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_INDEX_BASE_ONE);
    if (unlikely(!wrapped)) __PYX_ERR(1, 28, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_INDEX_BASE_ONE", wrapped) < 0) __PYX_ERR(1, 28, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_INDEX_BASE_ZERO);
    if (unlikely(!wrapped)) __PYX_ERR(1, 27, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_INDEX_BASE_ZERO", wrapped) < 0) __PYX_ERR(1, 27, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_GENERAL);
    if (unlikely(!wrapped)) __PYX_ERR(1, 30, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_MATRIX_TYPE_GENERAL", wrapped) < 0) __PYX_ERR(1, 30, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_HERMITIAN);
    if (unlikely(!wrapped)) __PYX_ERR(1, 32, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_MATRIX_TYPE_HERMITIAN", wrapped) < 0) __PYX_ERR(1, 32, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_SYMMETRIC);
    if (unlikely(!wrapped)) __PYX_ERR(1, 31, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_MATRIX_TYPE_SYMMETRIC", wrapped) < 0) __PYX_ERR(1, 31, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_MATRIX_TYPE_TRIANGULAR);
    if (unlikely(!wrapped)) __PYX_ERR(1, 33, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_MATRIX_TYPE_TRIANGULAR", wrapped) < 0) __PYX_ERR(1, 33, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_CONJUGATE_TRANSPOSE);
    if (unlikely(!wrapped)) __PYX_ERR(1, 37, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_OPERATION_CONJUGATE_TRANSPOSE", wrapped) < 0) __PYX_ERR(1, 37, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_NON_TRANSPOSE);
    if (unlikely(!wrapped)) __PYX_ERR(1, 35, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_OPERATION_NON_TRANSPOSE", wrapped) < 0) __PYX_ERR(1, 35, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_OPERATION_TRANSPOSE);
    if (unlikely(!wrapped)) __PYX_ERR(1, 36, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_OPERATION_TRANSPOSE", wrapped) < 0) __PYX_ERR(1, 36, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_POINTER_MODE_DEVICE);
    if (unlikely(!wrapped)) __PYX_ERR(1, 22, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_POINTER_MODE_DEVICE", wrapped) < 0) __PYX_ERR(1, 22, __pyx_L1_error);
  }
  {
    PyObject* wrapped = __Pyx_PyInt_From_int(__pyx_e_4cupy_4cuda_8cusparse_CUSPARSE_POINTER_MODE_HOST);
    if (unlikely(!wrapped)) __PYX_ERR(1, 21, __pyx_L1_error)
    if (PyObject_SetAttrString(__pyx_m, "CUSPARSE_POINTER_MODE_HOST", wrapped) < 0) __PYX_ERR(1, 21, __pyx_L1_error);
  }

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init cupy.cuda.cusparse", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cupy.cuda.cusparse");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* FetchCommonType */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunction */
#include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromString(m->func.m_ml->ml_name);
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    __pyx_CyFunctionObject *op = PyObject_GC_New(__pyx_CyFunctionObject, type);
    if (op == NULL)
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    PyObject_GC_Track(op);
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* Declarations */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* FromPy */
static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject* o) {
    Py_complex cval;
#if !CYTHON_COMPILING_IN_PYPY
    if (PyComplex_CheckExact(o))
        cval = ((PyComplexObject *)o)->cval;
    else
#endif
        cval = PyComplex_AsCComplex(o);
    return __pyx_t_double_complex_from_parts(
               (double)cval.real,
               (double)cval.imag);
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) ((size_t) 0 - (size_t) 1), const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE cusparseIndexBase_t __Pyx_PyInt_As_cusparseIndexBase_t(PyObject *x) {
    const cusparseIndexBase_t neg_one = (cusparseIndexBase_t) ((cusparseIndexBase_t) 0 - (cusparseIndexBase_t) 1), const_zero = (cusparseIndexBase_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(cusparseIndexBase_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (cusparseIndexBase_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (cusparseIndexBase_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(cusparseIndexBase_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) >= 2 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((((cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(cusparseIndexBase_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) >= 3 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((((((cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(cusparseIndexBase_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) >= 4 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((((((((cusparseIndexBase_t)digits[3]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (cusparseIndexBase_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(cusparseIndexBase_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseIndexBase_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(cusparseIndexBase_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseIndexBase_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (cusparseIndexBase_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(cusparseIndexBase_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 2 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((cusparseIndexBase_t)-1)*(((((cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(cusparseIndexBase_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 2 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) ((((((cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(cusparseIndexBase_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 3 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((cusparseIndexBase_t)-1)*(((((((cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(cusparseIndexBase_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 3 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) ((((((((cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(cusparseIndexBase_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 4 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) (((cusparseIndexBase_t)-1)*(((((((((cusparseIndexBase_t)digits[3]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(cusparseIndexBase_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseIndexBase_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseIndexBase_t) - 1 > 4 * PyLong_SHIFT) {
                            return (cusparseIndexBase_t) ((((((((((cusparseIndexBase_t)digits[3]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[2]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[1]) << PyLong_SHIFT) | (cusparseIndexBase_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(cusparseIndexBase_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseIndexBase_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(cusparseIndexBase_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseIndexBase_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            cusparseIndexBase_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (cusparseIndexBase_t) -1;
        }
    } else {
        cusparseIndexBase_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (cusparseIndexBase_t) -1;
        val = __Pyx_PyInt_As_cusparseIndexBase_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to cusparseIndexBase_t");
    return (cusparseIndexBase_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to cusparseIndexBase_t");
    return (cusparseIndexBase_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE cusparseMatrixType_t __Pyx_PyInt_As_cusparseMatrixType_t(PyObject *x) {
    const cusparseMatrixType_t neg_one = (cusparseMatrixType_t) ((cusparseMatrixType_t) 0 - (cusparseMatrixType_t) 1), const_zero = (cusparseMatrixType_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(cusparseMatrixType_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (cusparseMatrixType_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (cusparseMatrixType_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(cusparseMatrixType_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) >= 2 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((((cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(cusparseMatrixType_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) >= 3 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((((((cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(cusparseMatrixType_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) >= 4 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((((((((cusparseMatrixType_t)digits[3]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (cusparseMatrixType_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(cusparseMatrixType_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseMatrixType_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(cusparseMatrixType_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseMatrixType_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (cusparseMatrixType_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(cusparseMatrixType_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 2 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((cusparseMatrixType_t)-1)*(((((cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(cusparseMatrixType_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 2 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) ((((((cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(cusparseMatrixType_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 3 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((cusparseMatrixType_t)-1)*(((((((cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(cusparseMatrixType_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 3 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) ((((((((cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(cusparseMatrixType_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 4 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) (((cusparseMatrixType_t)-1)*(((((((((cusparseMatrixType_t)digits[3]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(cusparseMatrixType_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(cusparseMatrixType_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(cusparseMatrixType_t) - 1 > 4 * PyLong_SHIFT) {
                            return (cusparseMatrixType_t) ((((((((((cusparseMatrixType_t)digits[3]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[2]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[1]) << PyLong_SHIFT) | (cusparseMatrixType_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(cusparseMatrixType_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseMatrixType_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(cusparseMatrixType_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(cusparseMatrixType_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            cusparseMatrixType_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (cusparseMatrixType_t) -1;
        }
    } else {
        cusparseMatrixType_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (cusparseMatrixType_t) -1;
        val = __Pyx_PyInt_As_cusparseMatrixType_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to cusparseMatrixType_t");
    return (cusparseMatrixType_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to cusparseMatrixType_t");
    return (cusparseMatrixType_t) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* FunctionExport */
static int __Pyx_ExportFunction(const char *name, void (*f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(__pyx_m, (char *)"__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, (char *)"__pyx_capi__", d) < 0)
            goto bad;
    }
    tmp.fp = f;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(tmp.p, sig, 0);
#else
    cobj = PyCObject_FromVoidPtrAndDesc(tmp.p, (void *)sig, 0);
#endif
    if (!cobj)
        goto bad;
    if (PyDict_SetItemString(d, name, cobj) < 0)
        goto bad;
    Py_DECREF(cobj);
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(cobj);
    Py_XDECREF(d);
    return -1;
}

/* FunctionImport */
#ifndef __PYX_HAVE_RT_ImportFunction
#define __PYX_HAVE_RT_ImportFunction
static int __Pyx_ImportFunction(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
#if PY_VERSION_HEX >= 0x02070000
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
#else
    {const char *desc, *s1, *s2;
    desc = (const char *)PyCObject_GetDesc(cobj);
    if (!desc)
        goto bad;
    s1 = desc; s2 = sig;
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    if (*s1 != *s2) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, desc);
        goto bad;
    }
    tmp.p = PyCObject_AsVoidPtr(cobj);}
#endif
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
